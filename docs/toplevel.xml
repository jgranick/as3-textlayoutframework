<asdoc>

<classRec name='EditClasses' fullname='flashx.textLayout:EditClasses' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\EditClasses.as' namespace='flashx.textLayout' access='internal' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<classRec name='CoreClasses' fullname='flashx.textLayout:CoreClasses' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\CoreClasses.as' namespace='flashx.textLayout' access='internal' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='exportAssert' fullname='flashx.textLayout:CoreClasses/exportAssert' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<classRec name='ConversionClasses' fullname='flashx.textLayout:ConversionClasses' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\ConversionClasses.as' namespace='flashx.textLayout' access='internal' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<classRec name='TextLayoutVersion' fullname='flashx.textLayout:TextLayoutVersion' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\TextLayoutVersion.as' namespace='flashx.textLayout' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	  This class controls the backward-compatibility of the framework.

	  With every new release, some aspects of the framework are changed which can affect your application.

	  

	  ]]></description>
<langversion><![CDATA[3.0

	  ]]></langversion>
<playerversion><![CDATA[Flash 10

	  ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

	 ]]></playerversion>
</classRec>
<method name='dontStripAuditID' fullname='flashx.textLayout:TextLayoutVersion/dontStripAuditID' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getVersionString' fullname='flashx.textLayout:TextLayoutVersion/tlf_internal:getVersionString' isStatic='true' isFinal='false' isOverride='false'  param_names='version' param_types='uint' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 10

		  ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
<private><![CDATA[]]></private>
</method>
<field name='AUDIT_ID' fullname='flashx.textLayout:TextLayoutVersion/AUDIT_ID' type='String' isStatic='true' isConst='true' defaultValue='&lt;AdobeIP 0000486&gt;' >
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='BRANCH' fullname='flashx.textLayout:TextLayoutVersion/tlf_internal:BRANCH' type='String' isStatic='true' isConst='true' defaultValue='main' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='BUILD_NUMBER' fullname='flashx.textLayout:TextLayoutVersion/tlf_internal:BUILD_NUMBER' type='String' isStatic='true' isConst='true' defaultValue='29 (763252)' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='CURRENT_VERSION' fullname='flashx.textLayout:TextLayoutVersion/CURRENT_VERSION' type='uint' isStatic='true' isConst='true' defaultValue='0x03000000' >
<description><![CDATA[ 

		  The current released version of the Text Layout Framework, encoded as a uint.

		  

		  ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 10

		  ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</field>
<field name='VERSION_1_0' fullname='flashx.textLayout:TextLayoutVersion/VERSION_1_0' type='uint' isStatic='true' isConst='true' defaultValue='0x01000000' >
<description><![CDATA[ 

		  The version number value of TLF 1.0,

		  encoded numerically as a <code>uint</code>.

		  

		  ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 10

		  ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</field>
<field name='VERSION_1_1' fullname='flashx.textLayout:TextLayoutVersion/VERSION_1_1' type='uint' isStatic='true' isConst='true' defaultValue='0x01010000' >
<description><![CDATA[ 

		  The version number value of TLF 1.1,

		  encoded numerically as a <code>uint</code>.

		  

		  ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 10

		  ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</field>
<field name='VERSION_2_0' fullname='flashx.textLayout:TextLayoutVersion/VERSION_2_0' type='uint' isStatic='true' isConst='true' defaultValue='0x02000000' >
<description><![CDATA[ 

		  The version number value of TLF 2.0,

		  encoded numerically as a <code>uint</code>.

		  

		  ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 10

		  ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</field>
<field name='VERSION_3_0' fullname='flashx.textLayout:TextLayoutVersion/VERSION_3_0' type='uint' isStatic='true' isConst='true' defaultValue='0x03000000' >
<description><![CDATA[ 

		  The version number value of TLF 3.0,

		  encoded numerically as a <code>uint</code>.

		  

		  ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 10

		  ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</field>
<method name='assert' fullname='flashx.textLayout.debug:assert' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<interfaceRec name='ITextLayoutFormat' fullname='flashx.textLayout.formats:ITextLayoutFormat' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\ITextLayoutFormat.as' namespace='flashx.textLayout.formats' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface provides read access to FlowElements-related properties.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</interfaceRec>
<method name='getStyle' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:getStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleName' param_types='String' param_defaults='undefined' result_type='*'>
<description><![CDATA[

		 Return the value of the style specified by the <code>styleProp</code> parameter

		 which specifies the style name.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[styleProp The name of the style whose value is to be retrieved.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[The value of the specified style.  The type varies depending on the type of the style being

		 accessed.  Returns <code>undefined</code> if the style is not set.

		 

		 ]]></return>
</method>
<method name='alignmentBaseline' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:alignmentBaseline/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the baseline to which the dominant baseline aligns. For example, if you set <code>dominantBaseline</code> to ASCENT, setting <code>alignmentBaseline</code> to DESCENT aligns the top of the text with the DESCENT baseline, or below the line.  The largest element in the line generally determines the baselines.<p><img src='../../../images/textLayout_baselines.jpg' alt='baselines' /></p>

		 <p>Legal values are TextBaseline.ROMAN, TextBaseline.ASCENT, TextBaseline.DESCENT, TextBaseline.IDEOGRAPHIC_TOP, TextBaseline.IDEOGRAPHIC_CENTER, TextBaseline.IDEOGRAPHIC_BOTTOM, TextBaseline.USE_DOMINANT_BASELINE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextBaseline.USE_DOMINANT_BASELINE.</p>

		 ]]></description>
<includeExample><![CDATA[examples\TextLayoutFormat_alignmentBaselineExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextBaseline

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='backgroundAlpha' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:backgroundAlpha/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Alpha (transparency) value for the background (adopts default value if undefined during cascade). A value of 0 is fully transparent, and a value of 1 is fully opaque. Display objects with alpha set to 0 are active, even though they are invisible.

		 <p>Legal values are numbers from 0 to 1 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of 1.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='backgroundColor' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:backgroundColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Background color of the text (adopts default value if undefined during cascade). Can be either the constant value  <code>BackgroundColor.TRANSPARENT</code>, or a hexadecimal value that specifies the three 8-bit RGB (red, green, blue) values; for example, 0xFF0000 is red and 0x00FF00 is green.

		 <p>Legal values as a string are BackgroundColor.TRANSPARENT, FormatValue.INHERIT and uints from 0x0 to 0xffffffff.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BackgroundColor.TRANSPARENT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BackgroundColor

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='baselineShift' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:baselineShift/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Amount to shift the baseline from the <code>dominantBaseline</code> value. Units are in pixels, or a percentage of <code>fontSize</code> (in which case, enter a string value, like 140%).  Positive values shift the line up for horizontal text (right for vertical) and negative values shift it down for horizontal (left for vertical). 

		 <p>Legal values are BaselineShift.SUPERSCRIPT, BaselineShift.SUBSCRIPT, FormatValue.INHERIT.</p>

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000 to 1000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BaselineShift

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='blockProgression' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:blockProgression/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies a vertical or horizontal progression of line placement.

		 Lines are either placed top-to-bottom (<code>BlockProgression.TB</code>, used for horizontal text) or right-to-left (<code>BlockProgression.RL</code>, used for vertical text).

		 <p>Legal values are BlockProgression.RL, BlockProgression.TB, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BlockProgression.TB.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BlockProgression

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='breakOpportunity' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:breakOpportunity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls where lines are allowed to break when breaking wrapping text into multiple lines. Set to <code>BreakOpportunity.AUTO</code> to break text normally. Set to <code>BreakOpportunity.NONE</code> to <em>not</em> break the text unless the text would overrun the measure and there are no other places to break the line. Set to <code>BreakOpportunity.ANY</code> to allow the line to break anywhere, rather than just between words. Set to <code>BreakOpportunity.ALL</code> to have each typographic cluster put on a separate line (useful for text on a path).

		 <p>Legal values are BreakOpportunity.ALL, BreakOpportunity.ANY, BreakOpportunity.AUTO, BreakOpportunity.NONE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BreakOpportunity.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.BreakOpportunity

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='cffHinting' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:cffHinting/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The type of CFF hinting used for this text. CFF hinting determines whether the Flash runtime forces strong horizontal stems to fit to a sub pixel grid or not. This property applies only if the <code>renderingMode</code> property is set to <code>RenderingMode.CFF</code>, and the font is embedded (<code>fontLookup</code> property is set to <code>FontLookup.EMBEDDED_CFF</code>). At small screen sizes, hinting produces a clear, legible text for human readers.

		 <p>Legal values are CFFHinting.NONE, CFFHinting.HORIZONTAL_STEM, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of CFFHinting.HORIZONTAL_STEM.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.CFFHinting

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='clearFloats' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:clearFloats/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls how text wraps around a float. A value of none allows the text to wrap most closely around a float. A value of left causes the text to skip over any portion of the container that has a left float, and a value of right causes the text to skip over any portion of the container that has a right float. A value of both causes the text to skip over any floats.

		 <p>Legal values are ClearFloats.START, ClearFloats.END, ClearFloats.LEFT, ClearFloats.RIGHT, ClearFloats.BOTH, ClearFloats.NONE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of ClearFloats.NONE.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ClearFloats

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.ClearFloats

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='color' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:color/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Color of the text. A hexadecimal number that specifies three 8-bit RGB (red, green, blue) values; for example, 0xFF0000 is red and 0x00FF00 is green. It can also be enum value {BLACK, GREEN, GRAY, BLUE, SILVER, LIME, OLIVE, WHITE, YELLOW, MAROON, NAVY, RED, PURPLE, TEAL, FUCHSIA, AQUA, MAGENTA, CYAN}

		 <p>Legal values as a string are ColorName.BLACK, ColorName.GREEN, ColorName.GRAY, ColorName.BLUE, ColorName.SILVER, ColorName.LIME, ColorName.OLIVE, ColorName.WHITE, ColorName.YELLOW, ColorName.MAROON, ColorName.NAVY, ColorName.RED, ColorName.PURPLE, ColorName.TEAL, ColorName.FUCHSIA, ColorName.AQUA, ColorName.MAGENTA, ColorName.CYAN, FormatValue.INHERIT and uints from 0x0 to 0xffffffff.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ColorName

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnBreakAfter' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:columnBreakAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls column after before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnBreakBefore' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:columnBreakBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls column break before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnCount' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:columnCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Number of text columns (adopts default value if undefined during cascade).

		 The column number overrides the  other column settings. Value is an integer, or <code>FormatValue.AUTO</code> if unspecified. If <code>columnCount</code> is not specified,<code>columnWidth</code> is used to create as many columns as can fit in the container.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and from ints from 1 to 50.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnGap' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:columnGap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade).

		 Value is a Number

		 <p>Legal values are numbers from 0 to 1000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of 20.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnWidth' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:columnWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Column width in pixels (adopts default value if undefined during cascade).

		 If you specify the width of the columns, but not the count, TextLayout will create as many columns of that width as possible, given the  container width and <code>columnGap</code> settings. Any remainder space is left after the last column. Value is a Number.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from 0 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='containerBreakAfter' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:containerBreakAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls container after before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='containerBreakBefore' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:containerBreakBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls container break before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='digitCase' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:digitCase/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The type of digit case used for this text. Setting the value to <code>DigitCase.OLD_STYLE</code> approximates lowercase letterforms with varying ascenders and descenders. The figures are proportionally spaced. This style is only available in selected typefaces, most commonly in a supplemental or expert font. The <code>DigitCase.LINING</code> setting has all-cap height and is typically monospaced to line up in charts.<p><img src='../../../images/textLayout_digitcase.gif' alt='digitCase' /></p>

		 <p>Legal values are DigitCase.DEFAULT, DigitCase.LINING, DigitCase.OLD_STYLE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of DigitCase.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.DigitCase

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='digitWidth' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:digitWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Type of digit width used for this text. This can be <code>DigitWidth.PROPORTIONAL</code>, which looks best for individual numbers, or <code>DigitWidth.TABULAR</code>, which works best for numbers in tables, charts, and vertical rows.<p><img src='../../../images/textLayout_digitwidth.gif' alt='digitWidth' /></p>

		 <p>Legal values are DigitWidth.DEFAULT, DigitWidth.PROPORTIONAL, DigitWidth.TABULAR, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of DigitWidth.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.DigitWidth

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='direction' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:direction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the default bidirectional embedding level of the text in the text block. 

		 Left-to-right reading order, as in Latin-style scripts, or right-to-left reading order, as in Arabic or Hebrew. This property also affects column direction when it is applied at the container level. Columns can be either left-to-right or right-to-left, just like text. Below are some examples:<p><img src='../../../images/textLayout_direction.gif' alt='direction' /></p>

		 <p>Legal values are Direction.LTR, Direction.RTL, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Direction.LTR.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.Direction

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='dominantBaseline' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:dominantBaseline/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies which element baseline snaps to the <code>alignmentBaseline</code> to determine the vertical position of the element on the line. A value of <code>TextBaseline.AUTO</code> selects the dominant baseline based on the <code>locale</code> property of the parent paragraph.  For Japanese and Chinese, the selected baseline value is <code>TextBaseline.IDEOGRAPHIC_CENTER</code>; for all others it is <code>TextBaseline.ROMAN</code>. These baseline choices are determined by the choice of font and the font size.<p><img src='../../../images/textLayout_baselines.jpg' alt='baselines' /></p>

		 <p>Legal values are FormatValue.AUTO, TextBaseline.ROMAN, TextBaseline.ASCENT, TextBaseline.DESCENT, TextBaseline.IDEOGRAPHIC_TOP, TextBaseline.IDEOGRAPHIC_CENTER, TextBaseline.IDEOGRAPHIC_BOTTOM, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextBaseline

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='firstBaselineOffset' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:firstBaselineOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the baseline position of the first line in the container. Which baseline this property refers to depends on the container-level locale.  For Japanese and Chinese, it is <code>TextBaseline.IDEOGRAPHIC_BOTTOM</code>; for all others it is <code>TextBaseline.ROMAN</code>.

		 The offset from the top inset (or right inset if <code>blockProgression</code> is RL) of the container to the baseline of the first line can be either <code>BaselineOffset.ASCENT</code>, meaning equal to the ascent of the line, <code>BaselineOffset.LINE_HEIGHT</code>, meaning equal to the height of that first line, or any fixed-value number to specify an absolute distance. <code>BaselineOffset.AUTO</code> aligns the ascent of the line with the container top inset.<p><img src='../../../images/textLayout_FBO1.png' alt='firstBaselineOffset1' /><img src='../../../images/textLayout_FBO2.png' alt='firstBaselineOffset2' /><img src='../../../images/textLayout_FBO3.png' alt='firstBaselineOffset3' /><img src='../../../images/textLayout_FBO4.png' alt='firstBaselineOffset4' /></p>

		 <p>Legal values as a string are BaselineOffset.AUTO, BaselineOffset.ASCENT, BaselineOffset.LINE_HEIGHT, FormatValue.INHERIT and numbers from 0 to 1000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BaselineOffset.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BaselineOffset

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontFamily' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:fontFamily/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		  The name of the font to use, or a comma-separated list of font names. The Flash runtime renders the element with the first available font in the list. For example Arial, Helvetica, _sans causes the player to search for Arial, then Helvetica if Arial is not found, then _sans if neither is found.

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Arial.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontLookup' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:fontLookup/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Font lookup to use. Specifying <code>FontLookup.DEVICE</code> uses the fonts installed on the system that is running the SWF file. Device fonts result in a smaller movie size, but text is not always rendered the same across different systems and platforms. Specifying <code>FontLookup.EMBEDDED_CFF</code> uses font outlines embedded in the published SWF file. Embedded fonts increase the size of the SWF file (sometimes dramatically), but text is consistently displayed in the chosen font.

		 <p>Legal values are FontLookup.DEVICE, FontLookup.EMBEDDED_CFF, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontLookup.DEVICE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontLookup

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontSize' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:fontSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The size of the text in pixels.

		 <p>Legal values are numbers from 1 to 720 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 12.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontStyle' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:fontStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Style of text. May be <code>FontPosture.NORMAL</code>, for use in plain text, or <code>FontPosture.ITALIC</code> for italic. This property applies only to device fonts (<code>fontLookup</code> property is set to flash.text.engine.FontLookup.DEVICE).

		 <p>Legal values are FontPosture.NORMAL, FontPosture.ITALIC, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontPosture.NORMAL.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontPosture

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontWeight' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:fontWeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Weight of text. May be <code>FontWeight.NORMAL</code> for use in plain text, or <code>FontWeight.BOLD</code>. Applies only to device fonts (<code>fontLookup</code> property is set to flash.text.engine.FontLookup.DEVICE).

		 <p>Legal values are FontWeight.NORMAL, FontWeight.BOLD, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontWeight.NORMAL.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontWeight

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='justificationRule' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:justificationRule/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Rule used to justify text in a paragraph.

		 Default value is <code>FormatValue.AUTO</code>, which justifies text based on the paragraph's <code>locale</code> property. For all languages except Japanese and Chinese, <code>FormatValue.AUTO</code> becomes <code>JustificationRule.SPACE</code>, which adds extra space to the space characters.  For Japanese and Chinese, <code>FormatValue.AUTO</code> becomes <code>JustficationRule.EAST_ASIAN</code>. In part, justification changes the spacing of punctuation. In Roman text the comma and Japanese periods take a full character's width but in East Asian text only half of a character's width. Also, in the East Asian text the spacing between sequential punctuation marks becomes tighter, obeying traditional East Asian typographic conventions. Note, too, in the example below the leading that is applied to the second line of the paragraphs. In the East Asian version, the last two lines push left. In the Roman version, the second and following lines push left.<p><img src='../../../images/textLayout_justificationrule.png' alt='justificationRule' /></p>

		 <p>Legal values are JustificationRule.EAST_ASIAN, JustificationRule.SPACE, FormatValue.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.JustificationRule

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='justificationStyle' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:justificationStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The style used for justification of the paragraph. Used only in conjunction with a <code>justificationRule</code> setting of <code>JustificationRule.EAST_ASIAN</code>.

		 Default value of <code>FormatValue.AUTO</code> is resolved to <code>JustificationStyle.PUSH_IN_KINSOKU</code> for all locales.  The constants defined by the JustificationStyle class specify options for handling kinsoku characters, which are Japanese characters that cannot appear at either the beginning or end of a line. If you want looser text, specify <code>JustificationStyle.PUSH-OUT-ONLY</code>. If you want behavior that is like what you get with the  <code>justificationRule</code> of <code>JustificationRule.SPACE</code>, use <code>JustificationStyle.PRIORITIZE-LEAST-ADJUSTMENT</code>.

		 <p>Legal values are JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT, JustificationStyle.PUSH_IN_KINSOKU, JustificationStyle.PUSH_OUT_ONLY, FormatValue.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.JustificationStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='kerning' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:kerning/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Kerning adjusts the pixels between certain character pairs to improve readability. Kerning is supported for all fonts with kerning tables.

		 <p>Legal values are Kerning.ON, Kerning.OFF, Kerning.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Kerning.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.Kerning

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='leadingModel' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:leadingModel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the leading model, which is a combination of leading basis and leading direction.

		 Leading basis is the baseline to which the <code>lineHeight</code> property refers. Leading direction determines whether the <code>lineHeight</code> property refers to the distance of a line's baseline from that of the line before it or the line after it. The default value of <code>FormatValue.AUTO</code> is resolved based on the paragraph's <code>locale</code> property.  For Japanese and Chinese, it is <code>LeadingModel.IDEOGRAPHIC_TOP_DOWN</code> and for all others it is <code>LeadingModel.ROMAN_UP</code>.<p><strong>Leading Basis:</strong></p><p><img src='../../../images/textLayout_LB1.png' alt='leadingBasis1' />    <img src='../../../images/textLayout_LB2.png' alt='leadingBasis2' />    <img src='../../../images/textLayout_LB3.png' alt='leadingBasis3' /></p><p><strong>Leading Direction:</strong></p><p><img src='../../../images/textLayout_LD1.png' alt='leadingDirection1' />    <img src='../../../images/textLayout_LD2.png' alt='leadingDirection2' />    <img src='../../../images/textLayout_LD3.png' alt='leadingDirection3' /></p>

		 <p>Legal values are LeadingModel.ROMAN_UP, LeadingModel.IDEOGRAPHIC_TOP_UP, LeadingModel.IDEOGRAPHIC_CENTER_UP, LeadingModel.IDEOGRAPHIC_TOP_DOWN, LeadingModel.IDEOGRAPHIC_CENTER_DOWN, LeadingModel.APPROXIMATE_TEXT_FIELD, LeadingModel.ASCENT_DESCENT_UP, LeadingModel.BOX, LeadingModel.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of LeadingModel.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.LeadingModel

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='ligatureLevel' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:ligatureLevel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls which of the ligatures that are defined in the font may be used in the text. The ligatures that appear for each of these settings is dependent on the font. A ligature occurs where two or more letter-forms are joined as a single glyph. Ligatures usually replace consecutive characters sharing common components, such as the letter pairs 'fi', 'fl', or 'ae'. They are used with both Latin and Non-Latin character sets. The ligatures enabled by the values of the LigatureLevel class - <code>MINIMUM</code>, <code>COMMON</code>, <code>UNCOMMON</code>, and <code>EXOTIC</code> - are additive. Each value enables a new set of ligatures, but also includes those of the previous types.<p><b>Note: </b>When working with Arabic or Syriac fonts, <code>ligatureLevel</code> must be set to MINIMUM or above.</p><p><img src='../../../images/textLayout_ligatures.png' alt='ligatureLevel' /></p>

		 <p>Legal values are LigatureLevel.MINIMUM, LigatureLevel.COMMON, LigatureLevel.UNCOMMON, LigatureLevel.EXOTIC, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of LigatureLevel.COMMON.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.LigatureLevel

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineBreak' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:lineBreak/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls word wrapping within the container (adopts default value if undefined during cascade).

		 Text in the container may be set to fit the width of the container (<code>LineBreak.TO_FIT</code>), or can be set to break only at explicit return or line feed characters (<code>LineBreak.EXPLICIT</code>).

		 <p>Legal values are LineBreak.EXPLICIT, LineBreak.TO_FIT, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of LineBreak.TO_FIT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.LineBreak

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineHeight' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:lineHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Leading controls for the text. The distance from the baseline of the previous or the next line (based on <code>LeadingModel</code>) to the baseline of the current line is equal to the maximum amount of the leading applied to any character in the line. This is either a number or a percent.  If specifying a percent, enter a string value, like 140%.<p><img src='../../../images/textLayout_lineHeight1.jpg' alt='lineHeight1' /><img src='../../../images/textLayout_lineHeight2.jpg' alt='lineHeight2' /></p>

		 <p>Legal values as a number are from -720 to 720.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 120%.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineThrough' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:lineThrough/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 If <code>true</code>, applies strikethrough, a line drawn through the middle of the text.

		 <p>Legal values are true, false and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of false.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkActiveFormat' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:linkActiveFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Defines the formatting attributes used for links in normal state. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkHoverFormat' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:linkHoverFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Defines the formatting attributes used for links in hover state, when the mouse is within the bounds (rolling over) a link. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkNormalFormat' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:linkNormalFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Defines the formatting attributes used for links in normal state. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listAutoPadding' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:listAutoPadding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 This specifies an auto indent for the start edge of lists when the padding value of the list on that side is <code>auto</code>.

		 <p>Legal values are numbers from -1000 to 1000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 40.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listMarkerFormat' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:listMarkerFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Defines the formatting attributes list markers. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>IListMarkerFormat</code> or converts an array of objects with key and value as members to a ListMarkerFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listStylePosition' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:listStylePosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 <p>Legal values are ListStylePosition.INSIDE, ListStylePosition.OUTSIDE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of ListStylePosition.OUTSIDE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ListStylePosition

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listStyleType' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:listStyleType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 <p>Legal values are ListStyleType.UPPER_ALPHA, ListStyleType.LOWER_ALPHA, ListStyleType.UPPER_ROMAN, ListStyleType.LOWER_ROMAN, ListStyleType.NONE, ListStyleType.DISC, ListStyleType.CIRCLE, ListStyleType.SQUARE, ListStyleType.BOX, ListStyleType.CHECK, ListStyleType.DIAMOND, ListStyleType.HYPHEN, ListStyleType.ARABIC_INDIC, ListStyleType.BENGALI, ListStyleType.DECIMAL, ListStyleType.DECIMAL_LEADING_ZERO, ListStyleType.DEVANAGARI, ListStyleType.GUJARATI, ListStyleType.GURMUKHI, ListStyleType.KANNADA, ListStyleType.PERSIAN, ListStyleType.THAI, ListStyleType.URDU, ListStyleType.CJK_EARTHLY_BRANCH, ListStyleType.CJK_HEAVENLY_STEM, ListStyleType.HANGUL, ListStyleType.HANGUL_CONSTANT, ListStyleType.HIRAGANA, ListStyleType.HIRAGANA_IROHA, ListStyleType.KATAKANA, ListStyleType.KATAKANA_IROHA, ListStyleType.LOWER_ALPHA, ListStyleType.LOWER_GREEK, ListStyleType.LOWER_LATIN, ListStyleType.UPPER_ALPHA, ListStyleType.UPPER_GREEK, ListStyleType.UPPER_LATIN, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of ListStyleType.DISC.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ListStyleType

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='locale' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:locale/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The locale of the text. Controls case transformations and shaping. Standard locale identifiers as described in Unicode Technical Standard #35 are used. For example en, en_US and en-US are all English, ja is Japanese. 

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of en.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingBottom' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:paddingBottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Bottom inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45.  (adopts default value if undefined during cascade).

		 Space between the bottom edge of the container and the text.  Value is a Number  or auto. <p> With horizontal text, in scrollable containers with multiple columns, the first and following columns will show the padding as blank space at the bottom of the container, but for the last column, if the text doesn't all fit, you may have to scroll in order to see the padding.</p>

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingLeft' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:paddingLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Left inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the left edge of the container and the text.  Value is a Number or auto.<p> With vertical text, in scrollable containers with multiple columns, the first and following columns will show the padding as blank space at the end of the container, but for the last column, if the text doesn't all fit, you may have to scroll in order to see the padding.</p>

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingRight' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:paddingRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Right inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the right edge of the container and the text.  Value is a Number or auto. 

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingTop' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:paddingTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Top inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the top edge of the container and the text.  Value is a Number or auto.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphEndIndent' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:paragraphEndIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A Number that specifies, in pixels, the amount to indent the paragraph's end edge. Refers to the right edge in left-to-right text and the left edge in right-to-left text. 

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphSpaceAfter' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:paragraphSpaceAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A Number that specifies the amount of space, in pixels, to leave after the paragraph.

		 Collapses in tandem with  <code>paragraphSpaceBefore</code>.

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphSpaceBefore' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:paragraphSpaceBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A Number that specifies the amount of space, in pixels, to leave before the paragraph. 

		 Collapses in tandem with <code>paragraphSpaceAfter</code>.

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphStartIndent' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:paragraphStartIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A Number that specifies, in pixels, the amount to indent the paragraph's start edge. Refers to the left edge in left-to-right text and the right edge in right-to-left text. 

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='renderingMode' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:renderingMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The rendering mode used for this text.  Applies only to embedded fonts (<code>fontLookup</code> property is set to <code>FontLookup.EMBEDDED_CFF</code>).

		 <p>Legal values are RenderingMode.NORMAL, RenderingMode.CFF, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of RenderingMode.CFF.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.RenderingMode

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='styleName' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:styleName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Assigns an identifying class to the element, making it possible to set a style for the element by referencing the <code>styleName</code>.

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='tabStops' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:tabStops/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the tab stops associated with the paragraph.

		 Setters can take an array of TabStopFormat, a condensed string representation, undefined, or <code>FormatValue.INHERIT</code>. The condensed string representation is always converted into an array of TabStopFormat. <p>The string-based format is a list of tab stops, where each tab stop is delimited by one or more spaces.</p><p>A tab stop takes the following form: &lt;alignment type&gt;&lt;alignment position&gt;|&lt;alignment token&gt;.</p><p>The alignment type is a single character, and can be S, E, C, or D (or lower-case equivalents). S or s for start, E or e for end, C or c for center, D or d for decimal. The alignment type is optional, and if its not specified will default to S.</p><p>The alignment position is a Number, and is specified according to FXG spec for Numbers (decimal or scientific notation). The alignment position is required.</p><p>The vertical bar is used to separate the alignment position from the alignment token, and should only be present if the alignment token is present.</p><p> The alignment token is optional if the alignment type is D, and should not be present if the alignment type is anything other than D. The alignment token may be any sequence of characters terminated by the space that ends the tab stop (for the last tab stop, the terminating space is optional; end of alignment token is implied). A space may be part of the alignment token if it is escaped with a backslash (\ ). A backslash may be part of the alignment token if it is escaped with another backslash (\\). If the alignment type is D, and the alignment token is not specified, it will take on the default value of null.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TabStopFormat

		 

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlignLast' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:textAlignLast/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Alignment of the last (or only) line in the paragraph relative to the container in justified text.

		 If <code>textAlign</code> is set to <code>TextAlign.JUSTIFY</code>, <code>textAlignLast</code> specifies how the last line (or only line, if this is a one line block) is aligned. Values are similar to <code>textAlign</code>.

		 <p>Legal values are TextAlign.LEFT, TextAlign.RIGHT, TextAlign.CENTER, TextAlign.JUSTIFY, TextAlign.START, TextAlign.END, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextAlign.START.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlign' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:textAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Alignment of lines in the paragraph relative to the container.

		 <code>TextAlign.LEFT</code> aligns lines along the left edge of the container. <code>TextAlign.RIGHT</code> aligns on the right edge. <code>TextAlign.CENTER</code> positions the line equidistant from the left and right edges. <code>TextAlign.JUSTIFY</code> spreads the lines out so they fill the space. <code>TextAlign.START</code> is equivalent to setting left in left-to-right text, or right in right-to-left text. <code>TextAlign.END</code> is equivalent to setting right in left-to-right text, or left in right-to-left text.

		 <p>Legal values are TextAlign.LEFT, TextAlign.RIGHT, TextAlign.CENTER, TextAlign.JUSTIFY, TextAlign.START, TextAlign.END, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextAlign.START.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlpha' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:textAlpha/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Alpha (transparency) value for the text. A value of 0 is fully transparent, and a value of 1 is fully opaque. Display objects with <code>textAlpha</code> set to 0 are active, even though they are invisible.

		 <p>Legal values are numbers from 0 to 1 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 1.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textDecoration' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:textDecoration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Decoration on text. Use to apply underlining; default is none.

		 <p>Legal values are TextDecoration.NONE, TextDecoration.UNDERLINE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextDecoration.NONE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextDecoration

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textIndent' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:textIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A Number that specifies, in pixels, the amount to indent the first line of the paragraph.

		 A negative indent will push the line into the margin, and possibly out of the container.

		 <p>Legal values are numbers from -8000 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textJustify' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:textJustify/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies options for justifying text.

		 Default value is <code>TextJustify.INTER_WORD</code>, meaning that extra space is added to the space characters. <code>TextJustify.DISTRIBUTE</code> adds extra space to space characters and between individual letters. Used only in conjunction with a <code>justificationRule</code> value of <code>JustificationRule.SPACE</code>.

		 <p>Legal values are TextJustify.INTER_WORD, TextJustify.DISTRIBUTE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextJustify.INTER_WORD.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextJustify

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textRotation' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:textRotation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Determines the number of degrees to rotate this text.

		 <p>Legal values are TextRotation.ROTATE_0, TextRotation.ROTATE_180, TextRotation.ROTATE_270, TextRotation.ROTATE_90, TextRotation.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextRotation.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextRotation

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='trackingLeft' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:trackingLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the left of each character. If kerning is enabled, the <code>trackingLeft</code> value is added to the values in the kerning table for the font. If kerning is disabled, the <code>trackingLeft</code> value is used as a manual kerning value. Supports both positive and negative values. 

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='trackingRight' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:trackingRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the right of each character.  If kerning is enabled, the <code>trackingRight</code> value is added to the values in the kerning table for the font. If kerning is disabled, the <code>trackingRight</code> value is used as a manual kerning value. Supports both positive and negative values. 

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='typographicCase' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:typographicCase/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The type of typographic case used for this text. Here are some examples:<p><img src='../../../images/textLayout_typographiccase.png' alt='typographicCase' /></p>

		 <p>Legal values are TLFTypographicCase.DEFAULT, TLFTypographicCase.CAPS_TO_SMALL_CAPS, TLFTypographicCase.UPPERCASE, TLFTypographicCase.LOWERCASE, TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TLFTypographicCase.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TLFTypographicCase

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='verticalAlign' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:verticalAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Vertical alignment or justification (adopts default value if undefined during cascade).

		 Determines how TextFlow elements align within the container.

		 <p>Legal values are VerticalAlign.TOP, VerticalAlign.MIDDLE, VerticalAlign.BOTTOM, VerticalAlign.JUSTIFY, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of VerticalAlign.TOP.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.VerticalAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='whiteSpaceCollapse' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:whiteSpaceCollapse/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Collapses or preserves whitespace when importing text into a TextFlow. <code>WhiteSpaceCollapse.PRESERVE</code> retains all whitespace characters. <code>WhiteSpaceCollapse.COLLAPSE</code> removes newlines, tabs, and leading or trailing spaces within a block of imported text. Line break tags (<br/>) and Unicode line separator characters are retained.

		 <p>Legal values are WhiteSpaceCollapse.PRESERVE, WhiteSpaceCollapse.COLLAPSE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of WhiteSpaceCollapse.COLLAPSE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.WhiteSpaceCollapse

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='wordSpacing' fullname='flashx.textLayout.formats:ITextLayoutFormat/flashx.textLayout.formats:ITextLayoutFormat:wordSpacing/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the optimum, minimum, and maximum spacing (as a multiplier of the width of a normal space) between words to use during justification.

		 The optimum space is used to indicate the desired size of a space, as a fraction of the value defined in the font. The minimum and maximum values are the used when textJustify is distribute to determine how wide or narrow the spaces between the words may grow before letter spacing is used to justify the line.

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 100%, 50%, 150%.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<classRec name='Float' fullname='flashx.textLayout.formats:Float' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\Float.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

      Defines values for the <code>float</code> property

	  of the InlineGraphicElement class. 

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.InlineGrapicElement

	 ]]></see>
</classRec>
<field name='END' fullname='flashx.textLayout.formats:Float/END' type='String' isStatic='true' isConst='true' defaultValue='end' >
<description><![CDATA[ Graphic floats on the trailing side of the text 

        (right if paragraph direction is "ltr", left if paragraph direction is "rtl"). 

		]]></description>
</field>
<field name='LEFT' fullname='flashx.textLayout.formats:Float/LEFT' type='String' isStatic='true' isConst='true' defaultValue='left' >
<description><![CDATA[ Graphic floats on the left side of the text. ]]></description>
</field>
<field name='NONE' fullname='flashx.textLayout.formats:Float/NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
<description><![CDATA[ Graphic appears inline in the text (doesn't float). ]]></description>
</field>
<field name='RIGHT' fullname='flashx.textLayout.formats:Float/RIGHT' type='String' isStatic='true' isConst='true' defaultValue='right' >
<description><![CDATA[ Graphic floats on the right side of the text. ]]></description>
</field>
<field name='START' fullname='flashx.textLayout.formats:Float/START' type='String' isStatic='true' isConst='true' defaultValue='start' >
<description><![CDATA[ Graphic floats on the leading side of the text 

         (left if paragraph direction is "ltr", right if paragraph direction is "rtl"). 

		 ]]></description>
</field>
<classRec name='WhiteSpaceCollapse' fullname='flashx.textLayout.formats:WhiteSpaceCollapse' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\WhiteSpaceCollapse.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for setting the <code>whiteSpaceCollapse</code> property

	  of the <code>TextLayoutFormat</code> class. 

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	  

	  ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[TextLayoutFormat#whiteSpaceCollapse

	 ]]></see>
</classRec>
<field name='COLLAPSE' fullname='flashx.textLayout.formats:WhiteSpaceCollapse/COLLAPSE' type='String' isStatic='true' isConst='true' defaultValue='collapse' >
<description><![CDATA[ 

		 Collapse whitespace when importing text (default).

		 Within a block of imported text, removes newlines, tabs, and leading and trailing

		 spaces. Retains line break tags (br/) and Unicode line

		 separator characters.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='PRESERVE' fullname='flashx.textLayout.formats:WhiteSpaceCollapse/PRESERVE' type='String' isStatic='true' isConst='true' defaultValue='preserve' >
<description><![CDATA[ Preserves whitespace when importing text. 

		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</field>
<classRec name='Direction' fullname='flashx.textLayout.formats:Direction' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\Direction.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for setting the <code>direction</code> property

	  of the <code>TextLayoutFormat</code> class. Left-to-right reading order 

	  is used in Latin-style scripts. Right-to-left reading order is used with scripts such as Arabic or Hebrew. 

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[TextLayoutFormat#direction 

	 ]]></see>
</classRec>
<field name='LTR' fullname='flashx.textLayout.formats:Direction/LTR' type='String' isStatic='true' isConst='true' defaultValue='ltr' >
<description><![CDATA[ Specifies left-to-right direction for text. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='RTL' fullname='flashx.textLayout.formats:Direction/RTL' type='String' isStatic='true' isConst='true' defaultValue='rtl' >
<description><![CDATA[ Specifies right-to-left direction for text. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<classRec name='FormatValue' fullname='flashx.textLayout.formats:FormatValue' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\FormatValue.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for specifying that a formatting property is to inherit its parent's value or have it's value

	  generated automatically. The <code>INHERIT</code> constant specifies that a property inherits its parent's value 

	  while the <code>AUTO</code> constant specifies that an internal algorithm automatically determine the property's 

	  value. As one example, you can set <code>TextLayoutFormat.columnWidth</code> using these values. Typically, a 

	  property's description indicates whether it accepts these constants.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat TextLayoutFormat

	 ]]></see>
</classRec>
<field name='AUTO' fullname='flashx.textLayout.formats:FormatValue/AUTO' type='String' isStatic='true' isConst='true' defaultValue='auto' >
<description><![CDATA[ Specifies that a property's value is automatically generated. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='INHERIT' fullname='flashx.textLayout.formats:FormatValue/INHERIT' type='String' isStatic='true' isConst='true' defaultValue='inherit' >
<description><![CDATA[ Specifies that a property is to inherit its parent's value.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='NONE' fullname='flashx.textLayout.formats:FormatValue/NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
<description><![CDATA[ Specifies that a property's value is none. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<classRec name='TextJustify' fullname='flashx.textLayout.formats:TextJustify' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\TextJustify.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for setting the <code>textJustify</code> property of the TextLayoutFormat class. 

	  Default value is INTER_WORD, meaning that extra space in justification is added to the space characters.

	  DISTRIBUTE specifies that extra space is added both to space characters and between individual

	  letters. Use these values only when setting <code>justificationRule</code> to SPACE.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[TextLayoutFormat#textJustify

	 ]]></see>
<see><![CDATA[TextLayoutFormat#justificationRule

	 ]]></see>
</classRec>
<field name='DISTRIBUTE' fullname='flashx.textLayout.formats:TextJustify/DISTRIBUTE' type='String' isStatic='true' isConst='true' defaultValue='distribute' >
<description><![CDATA[ Specifies that justification is to add space both to space characters and 

		 between individual letters.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='INTER_WORD' fullname='flashx.textLayout.formats:TextJustify/INTER_WORD' type='String' isStatic='true' isConst='true' defaultValue='interWord' >
<description><![CDATA[ Specifies that justification is to add space to space characters. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<interfaceRec name='ITabStopFormat' fullname='flashx.textLayout.formats:ITabStopFormat' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\ITabStopFormat.as' namespace='flashx.textLayout.formats' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface provides read access to tab stop-related properties.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</interfaceRec>
<method name='getStyle' fullname='flashx.textLayout.formats:ITabStopFormat/flashx.textLayout.formats:ITabStopFormat:getStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleName' param_types='String' param_defaults='undefined' result_type='*'>
<description><![CDATA[

		 Return the value of the style specified by the <code>styleProp</code> parameter

		 which specifies the style name.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[styleProp The name of the style whose value is to be retrieved.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[The value of the specified style.  The type varies depending on the type of the style being

		 accessed.  Returns <code>undefined</code> if the style is not set.

		 

		 ]]></return>
</method>
<method name='alignment' fullname='flashx.textLayout.formats:ITabStopFormat/flashx.textLayout.formats:ITabStopFormat:alignment/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The tab alignment for this tab stop. 

		 <p>Legal values are TabAlignment.START, TabAlignment.CENTER, TabAlignment.END, TabAlignment.DECIMAL, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of TabAlignment.START.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[FormatValue#INHERIT

		 

		 ]]></see>
<see><![CDATA[flash.text.engine.TabAlignment

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='decimalAlignmentToken' fullname='flashx.textLayout.formats:ITabStopFormat/flashx.textLayout.formats:ITabStopFormat:decimalAlignmentToken/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The alignment token to be used if the alignment is DECIMAL.

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='position' fullname='flashx.textLayout.formats:ITabStopFormat/flashx.textLayout.formats:ITabStopFormat:position/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The position of the tab stop, in pixels, relative to the start edge of the column.

		 <p>Legal values are numbers from 0 to 10000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of 0.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[FormatValue#INHERIT

		 

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<classRec name='BlockProgression' fullname='flashx.textLayout.formats:BlockProgression' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\BlockProgression.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for the <code>blockProgression</code> property

	  of the <code>TextLayouFormat</code> class. BlockProgression specifies the direction in 

	  which lines are placed in the container.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 

	  ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat#blockProgression TextLayoutFormat.blockProgression

	 ]]></see>
</classRec>
<field name='RL' fullname='flashx.textLayout.formats:BlockProgression/RL' type='String' isStatic='true' isConst='true' defaultValue='rl' >
<description><![CDATA[ 

		  Specifies right to left block progression. Lines are laid out vertically starting at the right 

		  edge of the container and progressing leftward. Used for vertical text, for example, vertical 

		  Chinese or Japanese text. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	  	 ]]></playerversion>
</field>
<field name='TB' fullname='flashx.textLayout.formats:BlockProgression/TB' type='String' isStatic='true' isConst='true' defaultValue='tb' >
<description><![CDATA[ 

		  Specifies top to bottom block progression. Lines are laid out horizontally starting at the top of 

		  the container and progressing down to the bottom. Used for horizontal text. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

	  	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	  	 ]]></playerversion>
</field>
<classRec name='TextAlign' fullname='flashx.textLayout.formats:TextAlign' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\TextAlign.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for setting the <code>textAlign</code> and <code>textAlignLast</code> properties

	  of the TextLayoutFormat class. The values describe the alignment of lines in the paragraph relative to the 

	  container.

	 
	 ]]></description>
<includeExample><![CDATA[examples\TextAlignExample.as -noswf

	 
	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[TextLayoutFormat#textAlign 

	 ]]></see>
<see><![CDATA[TextLayoutFormat#textAlignLast 

	 ]]></see>
</classRec>
<field name='CENTER' fullname='flashx.textLayout.formats:TextAlign/CENTER' type='String' isStatic='true' isConst='true' defaultValue='center' >
<description><![CDATA[ Specifies center alignment within the container.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='END' fullname='flashx.textLayout.formats:TextAlign/END' type='String' isStatic='true' isConst='true' defaultValue='end' >
<description><![CDATA[ Specifies end edge alignment - text is aligned opposite from the writing order. Equivalent to 

		  specifying right in left-to-right text, or left in right-to-left text. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='JUSTIFY' fullname='flashx.textLayout.formats:TextAlign/JUSTIFY' type='String' isStatic='true' isConst='true' defaultValue='justify' >
<description><![CDATA[ Specifies that text is justified within the lines so they fill the container space.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='LEFT' fullname='flashx.textLayout.formats:TextAlign/LEFT' type='String' isStatic='true' isConst='true' defaultValue='left' >
<description><![CDATA[ Specifies left edge alignment. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='RIGHT' fullname='flashx.textLayout.formats:TextAlign/RIGHT' type='String' isStatic='true' isConst='true' defaultValue='right' >
<description><![CDATA[ Specifies right edge alignment. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='START' fullname='flashx.textLayout.formats:TextAlign/START' type='String' isStatic='true' isConst='true' defaultValue='start' >
<description><![CDATA[ Specifies start edge alignment - text is aligned to match the writing order. Equivalent to setting 

		 left in left-to-right text, or right in right-to-left text.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<classRec name='ClearFloats' fullname='flashx.textLayout.formats:ClearFloats' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\ClearFloats.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for setting the <code>clear</code> property

      of the <code>TextLayoutFormat</code> class. This property controls 

	  how text wraps around floats.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

     

     ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.InlineGraphicElement#float 

	 ]]></see>
<see><![CDATA[TextLayoutFormat#clear 

	 ]]></see>
</classRec>
<field name='BOTH' fullname='flashx.textLayout.formats:ClearFloats/BOTH' type='String' isStatic='true' isConst='true' defaultValue='both' >
<description><![CDATA[ Specifies that text skips over any float.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='END' fullname='flashx.textLayout.formats:ClearFloats/END' type='String' isStatic='true' isConst='true' defaultValue='end' >
<description><![CDATA[ Specifies that text skips over floats on the start side in reading order (left if direction is "ltr", right if direction is "rtl").

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='LEFT' fullname='flashx.textLayout.formats:ClearFloats/LEFT' type='String' isStatic='true' isConst='true' defaultValue='left' >
<description><![CDATA[ Specifies that text skips over left floats.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='NONE' fullname='flashx.textLayout.formats:ClearFloats/NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
<description><![CDATA[ Specifies that  text wraps closely around floats.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='RIGHT' fullname='flashx.textLayout.formats:ClearFloats/RIGHT' type='String' isStatic='true' isConst='true' defaultValue='right' >
<description><![CDATA[ Specifies that text skips over right floats.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='START' fullname='flashx.textLayout.formats:ClearFloats/START' type='String' isStatic='true' isConst='true' defaultValue='start' >
<description><![CDATA[ Specifies that text skips over floats on the start side in reading order (left if direction is "ltr", right if direction is "rtl").

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<classRec name='BaselineShift' fullname='flashx.textLayout.formats:BaselineShift' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\BaselineShift.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines constants for specifying subscript or superscript in the <code>baselineShift</code> property

	  of the <code>TextLayoutFormat</code> class. You can specify baseline shift as an absolute pixel offset, 

	  a percentage of the current point size, or the constants SUPERSCRIPT or 

	  SUBSCRIPT. Positive values shift the line up for horizontal text (right for vertical) and negative values 

	  shift it down for horizontal (left for vertical). 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 
	  ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat#baselineShift TextLayoutFormat.baselineShift

	 ]]></see>
</classRec>
<field name='SUBSCRIPT' fullname='flashx.textLayout.formats:BaselineShift/SUBSCRIPT' type='String' isStatic='true' isConst='true' defaultValue='subscript' >
<description><![CDATA[ Shifts baseline to the current subscript position.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='SUPERSCRIPT' fullname='flashx.textLayout.formats:BaselineShift/SUPERSCRIPT' type='String' isStatic='true' isConst='true' defaultValue='superscript' >
<description><![CDATA[ Shifts baseline to the current superscript position.

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<classRec name='TextDecoration' fullname='flashx.textLayout.formats:TextDecoration' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\TextDecoration.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for the <code>textDecoration</code> property

	  of the TextLayoutFormat class. The values specify either normal text, with no decoration,

	  or underline.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	  

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[TextLayoutFormat#textDecoration

	 ]]></see>
</classRec>
<field name='NONE' fullname='flashx.textLayout.formats:TextDecoration/NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
<description><![CDATA[ Specifies normal text - no decoration applied 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='UNDERLINE' fullname='flashx.textLayout.formats:TextDecoration/UNDERLINE' type='String' isStatic='true' isConst='true' defaultValue='underline' >
<description><![CDATA[ Specifies that text is underlined. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<classRec name='BaselineOffset' fullname='flashx.textLayout.formats:BaselineOffset' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\BaselineOffset.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for the <code>firstBaselineOffset</code> property

	  of the <code>TextLayoutFormat</code> and <code>ContainerFormattedElement</code> classes. 

	  Determines the offset from the top inset of the container

	  to the baseline of the first line. Baseline offset may be specified as 

	  the ascent of the line, the height of the line, or an auto generated amount.

	  <p>

	  <img src="../../../images/textLayout_FBO1.jpg" alt="firstBaselineOffset_1" border="0"/>

	  <img src="../../../images/textLayout_FBO2.jpg" alt="firstBaselineOffset_2" border="0"/>

	  <img src="../../../images/textLayout_FBO3.jpg" alt="firstBaselineOffset_3" border="0"/>

	  <img src="../../../images/textLayout_FBO4.jpg" alt="firstBaselineOffset_4" border="0"/>

	  </p>

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	  ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[TextLayoutFormat#firstBaselineOffset

	 ]]></see>
</classRec>
<field name='ASCENT' fullname='flashx.textLayout.formats:BaselineOffset/ASCENT' type='String' isStatic='true' isConst='true' defaultValue='ascent' >
<description><![CDATA[ Specifies an offset equal to the ascent of the line, that is, the ascent of the tallest font in the line, accounting for inline graphics as having the bottom of the graphic on the baseline.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='AUTO' fullname='flashx.textLayout.formats:BaselineOffset/AUTO' type='String' isStatic='true' isConst='true' defaultValue='auto' >
<description><![CDATA[ Aligns the ascent of the line with the container top inset.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='LINE_HEIGHT' fullname='flashx.textLayout.formats:BaselineOffset/LINE_HEIGHT' type='String' isStatic='true' isConst='true' defaultValue='lineHeight' >
<description><![CDATA[ Specifies an offset equal to the height of the line.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<classRec name='LeadingModel' fullname='flashx.textLayout.formats:LeadingModel' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\LeadingModel.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for setting the <code>leadingModel</code> property

	  of the <code>TextLayoutFormat</code> class, composed of valid combinations of leading basis and leading direction.

	  Leading basis describes which baselines determine the leading (or <code>lineHeight</code>) of lines in a paragraph.

	  Leading direction specifies whether the <code>lineHeight</code> property refers to the distance of a line's 

	  baseline from that of the line before it or the line after it. 

	  <p>

	  <img src="../../../images/textLayout_baselines.jpg" alt="baselines" border="0"/>

	  <img src="../../../images/textLayout_LD1.jpg" alt="leadingDirection_1" border="0"/>

	  <img src="../../../images/textLayout_LD2.jpg" alt="leadingDirection_2" border="0"/>

	  <img src="../../../images/textLayout_LD3.jpg" alt="leadingDirection_3" border="0"/>

	  </p>

	  ]]></description>
<langversion><![CDATA[3.0 

	 

	  ]]></langversion>
<playerversion><![CDATA[Flash 10

	  ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	  ]]></playerversion>
<see><![CDATA[TextLayoutFormat#leadingModel

	  ]]></see>
<see><![CDATA[TextLayoutFormat#lineHeight

	  ]]></see>
<see><![CDATA[flash.text.TextField

	  ]]></see>
<see><![CDATA[flash.text.engine.TextLine 

	 ]]></see>
</classRec>
<field name='APPROXIMATE_TEXT_FIELD' fullname='flashx.textLayout.formats:LeadingModel/APPROXIMATE_TEXT_FIELD' type='String' isStatic='true' isConst='true' defaultValue='approximateTextField' >
<description><![CDATA[ Specifies a leading model that approximates the line spacing behavior of <code>TextField</code>.

		 It is similar to <code>ASCENT_DESCENT_UP</code> in that <code>lineHeight</code> refers to the 

		 distance of a line's ascent baseline from the previous line's descent baseline. However, baseline 

		 positions approximate those determined by <code>TextField</code>, rather than using metrics 

		 offered by <code>TextLine</code>.  

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='ASCENT_DESCENT_UP' fullname='flashx.textLayout.formats:LeadingModel/ASCENT_DESCENT_UP' type='String' isStatic='true' isConst='true' defaultValue='ascentDescentUp' >
<description><![CDATA[ Specifies that leading basis is ASCENT/DESCENT and leading direction is UP. 

		  In other words, <code>lineHeight</code> refers to the distance of a line's ascent baseline from the 

		  previous line's descent baseline.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	  	 ]]></playerversion>
</field>
<field name='AUTO' fullname='flashx.textLayout.formats:LeadingModel/AUTO' type='String' isStatic='true' isConst='true' defaultValue='auto' >
<description><![CDATA[ Specifies that leading model is chosen automatically based on the paragraph's <code>locale</code> property.  

		 For Japanese and Chinese, it is IDEOGRAPHIC_TOP_DOWN and for all others it is ROMAN_UP.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

	 	 

	 	 #IDEOGRAPHIC_TOP_DOWN

	 	 #ROMAN_UP

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='BOX' fullname='flashx.textLayout.formats:LeadingModel/BOX' type='String' isStatic='true' isConst='true' defaultValue='box' >
<description><![CDATA[  Specifies a leading model based on the CSS inline formatting model, which involves stacking <i>line boxes</i> contiguously.

		 A <i>line box</i> is defined as the bounding box around <i>inline boxes</i> for all leaf elements on the text line, after they have been aligned

		 using <code>baselineShift</code>, <code>dominantBaseline</code>, <code>alignmentBaseline</code> etc. For a span, the <i>inline box</i> 

		 is obtained by applying leading equally above and below the text content such that its height equals <code>lineHeight</code>.

		 For an inline graphic, <code>lineHeight</code> is ignored; the <i>inline box</i> is derived from its specified dimensions and padding values.

		 Also, <code>firstBaselineOffset</code> is ignored with this leading model.

		 

         <p>For more information, see <a href='http://blogs.adobe.com/tlf/2010/11/box-leading-model.html'>Box leading model</a>.</p>

         

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='IDEOGRAPHIC_CENTER_DOWN' fullname='flashx.textLayout.formats:LeadingModel/IDEOGRAPHIC_CENTER_DOWN' type='String' isStatic='true' isConst='true' defaultValue='ideographicCenterDown' >
<description><![CDATA[ Specifies that leading basis is IDEOGRAPHIC_CENTER and leading direction is down.

		  In other words, <code>lineHeight</code> refers to the distance of a line's ideographic center 

		  baseline from the next line's ideographic center baseline.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='IDEOGRAPHIC_CENTER_UP' fullname='flashx.textLayout.formats:LeadingModel/IDEOGRAPHIC_CENTER_UP' type='String' isStatic='true' isConst='true' defaultValue='ideographicCenterUp' >
<description><![CDATA[ Specifies that leading basis is IDEOGRAPHIC_CENTER and leading direction is UP. 

		 In other words, <code>lineHeight</code> refers to the distance of a line's ideographic center 

		 baseline from the previous line's ideographic center baseline.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='IDEOGRAPHIC_TOP_DOWN' fullname='flashx.textLayout.formats:LeadingModel/IDEOGRAPHIC_TOP_DOWN' type='String' isStatic='true' isConst='true' defaultValue='ideographicTopDown' >
<description><![CDATA[ Specifies that leading basis is IDEOGRAPHIC_TOP and leading direction is DOWN.

		 In other words, <code>lineHeight</code> refers to the distance of a line's ideographic top baseline 

		 from the next line's ideographic top baseline.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='IDEOGRAPHIC_TOP_UP' fullname='flashx.textLayout.formats:LeadingModel/IDEOGRAPHIC_TOP_UP' type='String' isStatic='true' isConst='true' defaultValue='ideographicTopUp' >
<description><![CDATA[ Specifies that leading basis is IDEOGRAPHIC_TOP and leading direction is UP. 

		  In other words, <code>lineHeight</code> refers to the distance of a line's ideographic top 

		  baseline from the previous line's ideographic top baseline.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='ROMAN_UP' fullname='flashx.textLayout.formats:LeadingModel/ROMAN_UP' type='String' isStatic='true' isConst='true' defaultValue='romanUp' >
<description><![CDATA[ Specifies that leading basis is ROMAN and leading direction is UP. 

		 In other words, <code>lineHeight</code> refers to the distance of a line's Roman baseline from the 

		 previous line's Roman baseline.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	  	 ]]></playerversion>
</field>
<classRec name='Suffix' fullname='flashx.textLayout.formats:Suffix' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\Suffix.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

     Defines values for setting the <code>suffix</code> property of a ListMarkerFormat. 

     
      ]]></description>
<langversion><![CDATA[3.0 

     

      ]]></langversion>
<playerversion><![CDATA[Flash 10

      ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

      ]]></playerversion>
<see><![CDATA[ListMarkerFormat#suffix

     ]]></see>
</classRec>
<field name='AUTO' fullname='flashx.textLayout.formats:Suffix/AUTO' type='String' isStatic='true' isConst='true' defaultValue='auto' >
<description><![CDATA[ Specifies that the auto suffix is appended to the list marker after the content. 

          See <a href="http://www.w3.org/TR/css3-lists/">http://www.w3.org/TR/css3-lists/</a> for the default suffixes.

         

         ]]></description>
<langversion><![CDATA[3.0 

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</field>
<field name='NONE' fullname='flashx.textLayout.formats:Suffix/NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
<description><![CDATA[ Specifies that no suffix is appended to a list marker after the content. 

         
         ]]></description>
<langversion><![CDATA[3.0 

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</field>
<classRec name='LineBreak' fullname='flashx.textLayout.formats:LineBreak' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\LineBreak.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[ Defines values for setting the <code>lineBreak</code> property of <code>TextLayoutFormat</code> to

	  specify how lines are broken within wrapping text.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[TextLayoutFormat#linebreak

	 ]]></see>
</classRec>
<field name='EXPLICIT' fullname='flashx.textLayout.formats:LineBreak/EXPLICIT' type='String' isStatic='true' isConst='true' defaultValue='explicit' >
<description><![CDATA[ Specifies that lines break only at explicit return or line feed characters. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='TO_FIT' fullname='flashx.textLayout.formats:LineBreak/TO_FIT' type='String' isStatic='true' isConst='true' defaultValue='toFit' >
<description><![CDATA[ Specifies that lines wrap to fit the container width. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	  	 ]]></playerversion>
</field>
<classRec name='BreakStyle' fullname='flashx.textLayout.formats:BreakStyle' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\BreakStyle.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<field name='ALWAYS' fullname='flashx.textLayout.formats:BreakStyle/ALWAYS' type='String' isStatic='true' isConst='true' defaultValue='always' >
<description><![CDATA[ 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='AUTO' fullname='flashx.textLayout.formats:BreakStyle/AUTO' type='String' isStatic='true' isConst='true' defaultValue='auto' >
<description><![CDATA[ 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<classRec name='VerticalAlign' fullname='flashx.textLayout.formats:VerticalAlign' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\VerticalAlign.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for the <code>verticalAlign</code> property of the TextLayoutFormat class. Specifies how 

	  TextFlow elements align with their containers.  

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	  ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[TextLayoutFormat#verticalAlign

	 ]]></see>
</classRec>
<field name='BOTTOM' fullname='flashx.textLayout.formats:VerticalAlign/BOTTOM' type='String' isStatic='true' isConst='true' defaultValue='bottom' >
<description><![CDATA[ Specifies alignment with the bottom edge of the frame. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='JUSTIFY' fullname='flashx.textLayout.formats:VerticalAlign/JUSTIFY' type='String' isStatic='true' isConst='true' defaultValue='justify' >
<description><![CDATA[ Specifies vertical line justification within the frame 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='MIDDLE' fullname='flashx.textLayout.formats:VerticalAlign/MIDDLE' type='String' isStatic='true' isConst='true' defaultValue='middle' >
<description><![CDATA[ Specifies alignment with the middle of the frame. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='TOP' fullname='flashx.textLayout.formats:VerticalAlign/TOP' type='String' isStatic='true' isConst='true' defaultValue='top' >
<description><![CDATA[ Specifies alignment with the top edge of the frame. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<classRec name='JustificationRule' fullname='flashx.textLayout.formats:JustificationRule' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\JustificationRule.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for setting the <code>justificationRule</code> property

	  of the TextLayoutFormat class. Default value is SPACE, which accomplishes justification by adding 

	  extra space to the space characters. When you use EAST_ASIAN, Japanese style leading is employed, which 

	  applies bottom-down as opposed to top-up, which is used in Roman text. The spacing of punctuation is also 

	  different. In the Roman version, the comma and Japanese periods take a full character's width but only half 

	  in East Asian. Additionally, the spacing between sequential punctuation marks becomes tighter, obeying traditional 

	  East Asian typographic conventions. Also note the leading, applied to the second line of the paragraphs in the 

	  example below. In the East Asian version, the last two lines push left. In the Roman version, the second and 

	  following lines push left.

	  <p><img src="../../../images/textLayout_justificationrule.png" alt="justificationRule" /></p>

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[TextLayoutFormat#justificationRule

	 ]]></see>
</classRec>
<field name='EAST_ASIAN' fullname='flashx.textLayout.formats:JustificationRule/EAST_ASIAN' type='String' isStatic='true' isConst='true' defaultValue='eastAsian' >
<description><![CDATA[ Specifies East Asian justification rules. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='SPACE' fullname='flashx.textLayout.formats:JustificationRule/SPACE' type='String' isStatic='true' isConst='true' defaultValue='space' >
<description><![CDATA[ Specifies justification for Latin and other horizontal scripts that divide words using spaces. 

		  Use this value for everything except East Asian text.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<classRec name='ListStyleType' fullname='flashx.textLayout.formats:ListStyleType' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\ListStyleType.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	 Defines values for setting the <code>listStyleType</code> property of a TextLayoutFormat object. These values are used for controlling

	 the appearance of items in a list.

	 
	  ]]></description>
<langversion><![CDATA[3.0 

	 

	  ]]></langversion>
<playerversion><![CDATA[Flash 10

	  ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	  ]]></playerversion>
<see><![CDATA[TextLayoutFormat#listStyleType

	 ]]></see>
</classRec>
<field name='ARABIC_INDIC' fullname='flashx.textLayout.formats:ListStyleType/ARABIC_INDIC' type='String' isStatic='true' isConst='true' defaultValue='arabicIndic' >
<description><![CDATA[ Numbering using Arabic script.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='BENGALI' fullname='flashx.textLayout.formats:ListStyleType/BENGALI' type='String' isStatic='true' isConst='true' defaultValue='bengali' >
<description><![CDATA[ Numbering using Bengali script.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='BOX' fullname='flashx.textLayout.formats:ListStyleType/BOX' type='String' isStatic='true' isConst='true' defaultValue='box' >
<description><![CDATA[ A square marker that is not filled.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='CHECK' fullname='flashx.textLayout.formats:ListStyleType/CHECK' type='String' isStatic='true' isConst='true' defaultValue='check' >
<description><![CDATA[ A check mark.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='CIRCLE' fullname='flashx.textLayout.formats:ListStyleType/CIRCLE' type='String' isStatic='true' isConst='true' defaultValue='circle' >
<description><![CDATA[ A circle character marker that is not filled.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='CJK_EARTHLY_BRANCH' fullname='flashx.textLayout.formats:ListStyleType/CJK_EARTHLY_BRANCH' type='String' isStatic='true' isConst='true' defaultValue='cjkEarthlyBranch' >
<description><![CDATA[ Numbering for CJK.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='CJK_HEAVENLY_STEM' fullname='flashx.textLayout.formats:ListStyleType/CJK_HEAVENLY_STEM' type='String' isStatic='true' isConst='true' defaultValue='cjkHeavenlyStem' >
<description><![CDATA[ Numbering for CJK.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='DECIMAL_LEADING_ZERO' fullname='flashx.textLayout.formats:ListStyleType/DECIMAL_LEADING_ZERO' type='String' isStatic='true' isConst='true' defaultValue='decimalLeadingZero' >
<description><![CDATA[ Numbering using decimal with a leading zero: 01, 02, 03, and so on.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='DECIMAL' fullname='flashx.textLayout.formats:ListStyleType/DECIMAL' type='String' isStatic='true' isConst='true' defaultValue='decimal' >
<description><![CDATA[ Numbering using decimals: 1, 2, 3, and so on.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='DEVANAGARI' fullname='flashx.textLayout.formats:ListStyleType/DEVANAGARI' type='String' isStatic='true' isConst='true' defaultValue='devanagari' >
<description><![CDATA[ Numbering using Devangari.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='DIAMOND' fullname='flashx.textLayout.formats:ListStyleType/DIAMOND' type='String' isStatic='true' isConst='true' defaultValue='diamond' >
<description><![CDATA[ A filled diamond marker.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='DISC' fullname='flashx.textLayout.formats:ListStyleType/DISC' type='String' isStatic='true' isConst='true' defaultValue='disc' >
<description><![CDATA[ A bullet character marker (filled circle).

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='GUJARATI' fullname='flashx.textLayout.formats:ListStyleType/GUJARATI' type='String' isStatic='true' isConst='true' defaultValue='gujarati' >
<description><![CDATA[ Numbering using Gujarati.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='GURMUKHI' fullname='flashx.textLayout.formats:ListStyleType/GURMUKHI' type='String' isStatic='true' isConst='true' defaultValue='gurmukhi' >
<description><![CDATA[ Numbering using Gurmukhi.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='HANGUL_CONSTANT' fullname='flashx.textLayout.formats:ListStyleType/HANGUL_CONSTANT' type='String' isStatic='true' isConst='true' defaultValue='hangulConstant' >
<description><![CDATA[ Numbering for Hangul.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='HANGUL' fullname='flashx.textLayout.formats:ListStyleType/HANGUL' type='String' isStatic='true' isConst='true' defaultValue='hangul' >
<description><![CDATA[ Numbering for Hangul.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='HIRAGANA_IROHA' fullname='flashx.textLayout.formats:ListStyleType/HIRAGANA_IROHA' type='String' isStatic='true' isConst='true' defaultValue='hiraganaIroha' >
<description><![CDATA[ Numbering for Hiragana.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='HIRAGANA' fullname='flashx.textLayout.formats:ListStyleType/HIRAGANA' type='String' isStatic='true' isConst='true' defaultValue='hiragana' >
<description><![CDATA[ Numbering for Hiragana.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='HYPHEN' fullname='flashx.textLayout.formats:ListStyleType/HYPHEN' type='String' isStatic='true' isConst='true' defaultValue='hyphen' >
<description><![CDATA[ A dash mark.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='KANNADA' fullname='flashx.textLayout.formats:ListStyleType/KANNADA' type='String' isStatic='true' isConst='true' defaultValue='kannada' >
<description><![CDATA[ Numbering using Kannada.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='KATAKANA_IROHA' fullname='flashx.textLayout.formats:ListStyleType/KATAKANA_IROHA' type='String' isStatic='true' isConst='true' defaultValue='katakanaIroha' >
<description><![CDATA[ Numbering for Katagana.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='KATAKANA' fullname='flashx.textLayout.formats:ListStyleType/KATAKANA' type='String' isStatic='true' isConst='true' defaultValue='katakana' >
<description><![CDATA[ Numbering for Katagana.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='LOWER_ALPHA' fullname='flashx.textLayout.formats:ListStyleType/LOWER_ALPHA' type='String' isStatic='true' isConst='true' defaultValue='lowerAlpha' >
<description><![CDATA[ Lower-case alphabetic "numbering": a-z, aa-zz, and so on.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='LOWER_GREEK' fullname='flashx.textLayout.formats:ListStyleType/LOWER_GREEK' type='String' isStatic='true' isConst='true' defaultValue='lowerGreek' >
<description><![CDATA[ Lower-case Greek alphabetic "numering".

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='LOWER_LATIN' fullname='flashx.textLayout.formats:ListStyleType/LOWER_LATIN' type='String' isStatic='true' isConst='true' defaultValue='lowerLatin' >
<description><![CDATA[ Lower-case alphabetic "numbering": a-z, aa-zz, and so on.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='LOWER_ROMAN' fullname='flashx.textLayout.formats:ListStyleType/LOWER_ROMAN' type='String' isStatic='true' isConst='true' defaultValue='lowerRoman' >
<description><![CDATA[ Lower-case Roman numbering: i, ii, iii, iv, and so on.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='NONE' fullname='flashx.textLayout.formats:ListStyleType/NONE' type='String' isStatic='true' isConst='true' defaultValue='none' >
<description><![CDATA[ No content is generated for the marker.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='PERSIAN' fullname='flashx.textLayout.formats:ListStyleType/PERSIAN' type='String' isStatic='true' isConst='true' defaultValue='persian' >
<description><![CDATA[ Numbering using Persian.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='SQUARE' fullname='flashx.textLayout.formats:ListStyleType/SQUARE' type='String' isStatic='true' isConst='true' defaultValue='square' >
<description><![CDATA[ A filled square marker.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='THAI' fullname='flashx.textLayout.formats:ListStyleType/THAI' type='String' isStatic='true' isConst='true' defaultValue='thai' >
<description><![CDATA[ Numbering using Thai.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='UPPER_ALPHA' fullname='flashx.textLayout.formats:ListStyleType/UPPER_ALPHA' type='String' isStatic='true' isConst='true' defaultValue='upperAlpha' >
<description><![CDATA[ Upper-case alphabetic "numbering": A-Z, AA-ZZ, and so on.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='UPPER_GREEK' fullname='flashx.textLayout.formats:ListStyleType/UPPER_GREEK' type='String' isStatic='true' isConst='true' defaultValue='upperGreek' >
<description><![CDATA[ Upper-case Greek alphabetic "numering".

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='UPPER_LATIN' fullname='flashx.textLayout.formats:ListStyleType/UPPER_LATIN' type='String' isStatic='true' isConst='true' defaultValue='upperLatin' >
<description><![CDATA[ Upper-case alphabetic "numbering": A-Z, AA-ZZ, and so on.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='UPPER_ROMAN' fullname='flashx.textLayout.formats:ListStyleType/UPPER_ROMAN' type='String' isStatic='true' isConst='true' defaultValue='upperRoman' >
<description><![CDATA[ Upper-case Roman numbering: I, II, III, IV, and so on.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='URDU' fullname='flashx.textLayout.formats:ListStyleType/URDU' type='String' isStatic='true' isConst='true' defaultValue='urdu' >
<description><![CDATA[ Numbering using Urdu.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<classRec name='BackgroundColor' fullname='flashx.textLayout.formats:BackgroundColor' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\BackgroundColor.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines a constant for specifying that the value of the <code>backgroundColor</code> property

	  of the <code>TextLayoutFormat</code> class is "transparent".

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat#backgroundColor TextLayoutFormat.backgroundColor

	 ]]></see>
</classRec>
<field name='TRANSPARENT' fullname='flashx.textLayout.formats:BackgroundColor/TRANSPARENT' type='String' isStatic='true' isConst='true' defaultValue='transparent' >
<description><![CDATA[ Transparent - no background color is applied.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<classRec name='TLFTypographicCase' fullname='flashx.textLayout.formats:TLFTypographicCase' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\TLFTypographicCase.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines values for the <code>typographicCase</code> property of the TextLayoutFormat

	  class. 

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[TextLayoutFormat#typographicCase

	 ]]></see>
</classRec>
<field name='CAPS_TO_SMALL_CAPS' fullname='flashx.textLayout.formats:TLFTypographicCase/CAPS_TO_SMALL_CAPS' type='String' isStatic='true' isConst='true' defaultValue='capsToSmallCaps' >
<description><![CDATA[ Specifies that uppercase characters use small-caps glyphs on output. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='DEFAULT' fullname='flashx.textLayout.formats:TLFTypographicCase/DEFAULT' type='String' isStatic='true' isConst='true' defaultValue='default' >
<description><![CDATA[ Specifies default typographic case -- no special features applied. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='LOWERCASE_TO_SMALL_CAPS' fullname='flashx.textLayout.formats:TLFTypographicCase/LOWERCASE_TO_SMALL_CAPS' type='String' isStatic='true' isConst='true' defaultValue='lowercaseToSmallCaps' >
<description><![CDATA[ Converts all lowercase characters to uppercase, then applies small caps to only the 

		 characters that the conversion changed. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='LOWERCASE' fullname='flashx.textLayout.formats:TLFTypographicCase/LOWERCASE' type='String' isStatic='true' isConst='true' defaultValue='lowercase' >
<description><![CDATA[ Specifies that all characters use lowercase glyphs on output. 

  	 	 
  	 	 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='UPPERCASE' fullname='flashx.textLayout.formats:TLFTypographicCase/UPPERCASE' type='String' isStatic='true' isConst='true' defaultValue='uppercase' >
<description><![CDATA[ Specifies that all characters use uppercase glyphs on output.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<classRec name='ListStylePosition' fullname='flashx.textLayout.formats:ListStylePosition' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\ListStylePosition.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	 Defines values for setting the <code>listStylePosition</code> property. These values control the placement

	 of a list item marker relative to the list item.

	 
	  ]]></description>
<langversion><![CDATA[3.0 

	 

	  ]]></langversion>
<playerversion><![CDATA[Flash 10

	  ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	  ]]></playerversion>
<see><![CDATA[TextLayoutFormat#listStylePosition

	 ]]></see>
</classRec>
<field name='INSIDE' fullname='flashx.textLayout.formats:ListStylePosition/INSIDE' type='String' isStatic='true' isConst='true' defaultValue='inside' >
<description><![CDATA[ Marker will appear inline with the list item. This style position lets you include trailing spaces.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='OUTSIDE' fullname='flashx.textLayout.formats:ListStylePosition/OUTSIDE' type='String' isStatic='true' isConst='true' defaultValue='outside' >
<description><![CDATA[ Marker will appear in the margin of the list. This style position does not recognize trailing spaces.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<classRec name='ColorName' fullname='flashx.textLayout.formats:ColorName' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\ColorName.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  Defines a constant for specifying that the value of the <code>color</code> property

	  of the <code>TextLayoutFormat</code> class is "transparent".

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat#color TextLayoutFormat.color

	 ]]></see>
</classRec>
<field name='AQUA' fullname='flashx.textLayout.formats:ColorName/AQUA' type='String' isStatic='true' isConst='true' defaultValue='aqua' >
</field>
<field name='BLACK' fullname='flashx.textLayout.formats:ColorName/BLACK' type='String' isStatic='true' isConst='true' defaultValue='black' >
<description><![CDATA[ Below are supported colorName values 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='BLUE' fullname='flashx.textLayout.formats:ColorName/BLUE' type='String' isStatic='true' isConst='true' defaultValue='blue' >
</field>
<field name='CYAN' fullname='flashx.textLayout.formats:ColorName/CYAN' type='String' isStatic='true' isConst='true' defaultValue='cyan' >
</field>
<field name='FUCHSIA' fullname='flashx.textLayout.formats:ColorName/FUCHSIA' type='String' isStatic='true' isConst='true' defaultValue='fuchsia' >
</field>
<field name='GRAY' fullname='flashx.textLayout.formats:ColorName/GRAY' type='String' isStatic='true' isConst='true' defaultValue='gray' >
</field>
<field name='GREEN' fullname='flashx.textLayout.formats:ColorName/GREEN' type='String' isStatic='true' isConst='true' defaultValue='green' >
</field>
<field name='LIME' fullname='flashx.textLayout.formats:ColorName/LIME' type='String' isStatic='true' isConst='true' defaultValue='lime' >
</field>
<field name='MAGENTA' fullname='flashx.textLayout.formats:ColorName/MAGENTA' type='String' isStatic='true' isConst='true' defaultValue='magenta' >
</field>
<field name='MAROON' fullname='flashx.textLayout.formats:ColorName/MAROON' type='String' isStatic='true' isConst='true' defaultValue='maroon' >
</field>
<field name='NAVY' fullname='flashx.textLayout.formats:ColorName/NAVY' type='String' isStatic='true' isConst='true' defaultValue='navy' >
</field>
<field name='OLIVE' fullname='flashx.textLayout.formats:ColorName/OLIVE' type='String' isStatic='true' isConst='true' defaultValue='olive' >
</field>
<field name='PURPLE' fullname='flashx.textLayout.formats:ColorName/PURPLE' type='String' isStatic='true' isConst='true' defaultValue='purple' >
</field>
<field name='RED' fullname='flashx.textLayout.formats:ColorName/RED' type='String' isStatic='true' isConst='true' defaultValue='red' >
</field>
<field name='SILVER' fullname='flashx.textLayout.formats:ColorName/SILVER' type='String' isStatic='true' isConst='true' defaultValue='silver' >
</field>
<field name='TEAL' fullname='flashx.textLayout.formats:ColorName/TEAL' type='String' isStatic='true' isConst='true' defaultValue='teal' >
</field>
<field name='WHITE' fullname='flashx.textLayout.formats:ColorName/WHITE' type='String' isStatic='true' isConst='true' defaultValue='white' >
</field>
<field name='YELLOW' fullname='flashx.textLayout.formats:ColorName/YELLOW' type='String' isStatic='true' isConst='true' defaultValue='yellow' >
</field>
<classRec name='TextLayoutFormat' fullname='flashx.textLayout.formats:TextLayoutFormat' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\TextLayoutFormat.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' interfaces='flashx.textLayout.formats:ITextLayoutFormat' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The TextLayoutFormat class holds all of the text layout properties. These properties affect the format and style of a text flow at the container level, paragraph level, and text level.  Both the ContainerController class and the FlowElement base class have <code>format</code> properties that enable you to assign a TextLayoutFormat instance to them. Assign a TextLayoutFormat object to a container to affect the format of all of the container's content. Assign a TextLayoutFormat object to a FlowElement descendant to specify formatting for that particular element: TextFlow, ParagraphElement, DivElement, SpanElement, InlineGraphicElement, LinkElement, and TCYElement.

	 In addition to the <code>format</code> property, these classes also define each of the individual TextLayoutFormat properties so that you can override the setting of a particular style property for that element, if you wish. <p>Because you can set a given style at multiple levels, it is possible to have conflicts. For example, the color of the text at the TextFlow level could be set to black while a SpanElement object sets it to blue. The general rule is that the setting at the lowest level on the text flow tree takes precedence. So if the ligature level is set for a TextFlow instance and also set for a DivElement, the DivElement setting takes precedence. </p><p>Cascading styles refers to the process of adopting styles from a higher level in the text flow if a style value is undefined at a lower level. When a style is undefined on an element at the point it is about to be rendered, it either takes its default value or the value cascades or descends from the value on a parent element. For example, if the transparency (<code>textAlpha</code> property) of the text is undefined on a SpanElement object, but is set on the TextFlow, the value of the <code>TextFlow.textAlpha</code> property cascades to the SpanElement object and is applied to the text for that span. The result of the cascade, or the sum of the styles that is applied to the element, is stored in the element's <code>computedFormat</code> property.</p><p>In the same way, you can apply user styles using the <code>userStyles</code> property of the ContainerController and FlowElement classes. This  property allows you to read or write a dictionary of user styles and apply its settings to a container or a text flow element. The user styles dictionary is an object that consists of <em>stylename-value</em> pairs. Styles specified by the <code>userStyles</code> property take precedence over all others.</p><p>Most styles that are undefined inherit the value of their immediate parent during a cascade. A small number of styles, however, do not inherit their parent�s value and take on their default values instead.</p><p><strong>Style properties that adopt their default values, if undefined, include:</strong> <code>backgroundAlpha</code>, <code>backgroundColor</code>, <code>columnCount</code>, <code>columnGap</code>, <code>columnWidth</code>, <code>lineBreak</code>, <code>paddingBottom</code>, <code>paddingLeft</code>, <code>paddingRight</code>, <code>paddingTop</code>, <code>verticalAlign</code></p>.

	 ]]></description>
<includeExample><![CDATA[examples\TextLayoutFormatExample.as -noswf

	 ]]></includeExample>
<includeExample><![CDATA[examples\TextLayoutFormatExample2.as -noswf

	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5 

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.FlowElement#format

	 ]]></see>
<see><![CDATA[flashx.textLayout.factory.TextFlowTextLineFactory

	 ]]></see>
</classRec>
<method name='TextLayoutFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/TextLayoutFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='initialValues' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='null' result_type='*'>
<description><![CDATA[

		 Creates a new TextLayoutFormat object. All settings are empty or, optionally, are initialized from the

		 supplied <code>initialValues</code> object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[initialValues optional instance from which to copy initial values.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[#defaultFormat

		 ]]></see>
</method>
<method name='apply' fullname='flashx.textLayout.formats:TextLayoutFormat/apply' isStatic='false' isFinal='false' isOverride='false'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Replaces property values in this TextLayoutFormat object with the values of properties that are set in

		 the <code>incoming</code> ITextLayoutFormat instance. Properties that are <code>undefined</code> in the <code>incoming</code>

		 ITextLayoutFormat instance are not changed in this object.

		 

		 ]]></description>
<includeExample><![CDATA[examples\TextLayoutFormat_applyExample.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[incoming instance whose property values are applied to this TextLayoutFormat object.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='clearStyles' fullname='flashx.textLayout.formats:TextLayoutFormat/tlf_internal:clearStyles' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='concatInheritOnly' fullname='flashx.textLayout.formats:TextLayoutFormat/concatInheritOnly' isStatic='false' isFinal='false' isOverride='false'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Concatenates the values of properties in the <code>incoming</code> ITextLayoutFormat instance

		 with the values of this TextLayoutFormat object. In this (the receiving) TextLayoutFormat object, properties whose values are <code>FormatValue.INHERIT</code>,

		 and inheriting properties whose values are <code>undefined</code> will get new values from the <code>incoming</code> object.

		 All other property values will remain unmodified.

		 

		 ]]></description>
<includeExample><![CDATA[examples\TextLayoutFormat_concatInheritOnlyExample.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[incoming instance from which values are concatenated.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue#INHERIT

		 

		 ]]></see>
</method>
<method name='concat' fullname='flashx.textLayout.formats:TextLayoutFormat/concat' isStatic='false' isFinal='false' isOverride='false'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Concatenates the values of properties in the <code>incoming</code> ITextLayoutFormat instance

		 with the values of this TextLayoutFormat object. In this (the receiving) TextLayoutFormat object, properties whose values are <code>FormatValue.INHERIT</code>,

		 and inheriting properties whose values are <code>undefined</code> will get new values from the <code>incoming</code> object.

		 Non-inheriting properties whose values are <code>undefined</code> will get their default values.

		 All other property values will remain unmodified.

		 

		 ]]></description>
<includeExample><![CDATA[examples\TextLayoutFormat_concatExample.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[incoming instance from which values are concatenated.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue#INHERIT

		 

		 ]]></see>
</method>
<method name='copy' fullname='flashx.textLayout.formats:TextLayoutFormat/copy' isStatic='false' isFinal='false' isOverride='false'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Copies TextLayoutFormat settings from the <code>values</code> ITextLayoutFormat instance into this TextLayoutFormat object.

		 If <code>values</code> is <code>null</code>, this TextLayoutFormat object is initialized with undefined values for all properties.

		 ]]></description>
<includeExample><![CDATA[examples\TextLayoutFormat_copyExample.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[values optional instance from which to copy values.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='createTextLayoutFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/createTextLayoutFormat' isStatic='true' isFinal='false' isOverride='false'  param_names='initialValues' param_types='Object' param_defaults='undefined' result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[

		 Creates a new TextLayoutFormat object. All settings are empty or, optionally, are initialized from the

		 supplied <code>initialValues</code> object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[initialValues optional instance from which to copy initial values. If an TextLayoutFormat object values are copied.

		 Otherwise initialValues is treated like a Dictionary or Object and iterated over.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='getStyle' fullname='flashx.textLayout.formats:TextLayoutFormat/getStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp' param_types='String' param_defaults='undefined' result_type='*'>
<description><![CDATA[ Returns the value of the style specified by the <code>styleProp</code> parameter, which specifies

		 the style name.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[styleProp The name of the style whose value is to be retrieved.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[The value of the specified style. The type varies depending on the type of the style being

		 accessed. Returns <code>undefined</code> if the style is not set.

		 

		 ]]></return>
</method>
<method name='getStyles' fullname='flashx.textLayout.formats:TextLayoutFormat/tlf_internal:getStyles' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='isEqual' fullname='flashx.textLayout.formats:TextLayoutFormat/isEqual' isStatic='true' isFinal='false' isOverride='false'  param_names='p1;p2' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Compares properties in ITextLayoutFormat instance <code>p1</code> with properties in ITextLayoutFormat instance <code>p2</code>

		 and returns <code>true</code> if all properties match.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[p1 instance to compare to <code>p2</code>.

		 ]]></param>
<param><![CDATA[p2 instance to compare to <code>p1</code>.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if all properties match, false otherwise.

		 

		 ]]></return>
</method>
<method name='removeClashing' fullname='flashx.textLayout.formats:TextLayoutFormat/removeClashing' isStatic='false' isFinal='false' isOverride='false'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets properties in this TextLayoutFormat object to <code>undefined</code> if they do not match those in the

		 <code>incoming</code> ITextLayoutFormat instance.

		 

		 ]]></description>
<includeExample><![CDATA[examples\TextLayoutFormat_removeClashingExample.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[incoming instance against which to compare this TextLayoutFormat object's property values.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='removeMatching' fullname='flashx.textLayout.formats:TextLayoutFormat/removeMatching' isStatic='false' isFinal='false' isOverride='false'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets properties in this TextLayoutFormat object to <code>undefined</code> if they match those in the <code>incoming</code>

		 ITextLayoutFormat instance.

		 

		 ]]></description>
<includeExample><![CDATA[examples\TextLayoutFormat_removeMatchingExample.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[incoming instance against which to compare this TextLayoutFormat object's property values.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='resetModifiedNoninheritedStyles' fullname='flashx.textLayout.formats:TextLayoutFormat/tlf_internal:resetModifiedNoninheritedStyles' isStatic='true' isFinal='false' isOverride='false'  param_names='stylesObject' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setStyleByName' fullname='flashx.textLayout.formats:TextLayoutFormat/tlf_internal:setStyleByName' isStatic='false' isFinal='false' isOverride='false'  param_names='name;newValue' param_types='String;*' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setStyleByProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:setStyleByProperty' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp;newValue' param_types='flashx.textLayout.property:Property;*' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ Intentionally hidden so that overriders can override individual property setters ]]></description>
</method>
<method name='setStyle' fullname='flashx.textLayout.formats:TextLayoutFormat/setStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp;newValue' param_types='String;*' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ Sets the style specified by the <code>styleProp</code> parameter to the value specified by the

		 <code>newValue</code> parameter. 

		 
		 ]]></description>
<langversion><![CDATA[3.0



		 ]]></langversion>
<param><![CDATA[styleProp The name of the style to set.

		 ]]></param>
<param><![CDATA[newValue The value to which to set the style.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='setStyles' fullname='flashx.textLayout.formats:TextLayoutFormat/tlf_internal:setStyles' isStatic='false' isFinal='false' isOverride='false'  param_names='val;shared' param_types='Object;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='writableStyles' fullname='flashx.textLayout.formats:TextLayoutFormat/private:writableStyles' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='alignmentBaselineProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/alignmentBaselineProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='alignmentBaseline' fullname='flashx.textLayout.formats:TextLayoutFormat/alignmentBaseline/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the baseline to which the dominant baseline aligns. For example, if you set <code>dominantBaseline</code> to ASCENT, setting <code>alignmentBaseline</code> to DESCENT aligns the top of the text with the DESCENT baseline, or below the line.  The largest element in the line generally determines the baselines.<p><img src='../../../images/textLayout_baselines.jpg' alt='baselines' /></p>

		 <p>Legal values are TextBaseline.ROMAN, TextBaseline.ASCENT, TextBaseline.DESCENT, TextBaseline.IDEOGRAPHIC_TOP, TextBaseline.IDEOGRAPHIC_CENTER, TextBaseline.IDEOGRAPHIC_BOTTOM, TextBaseline.USE_DOMINANT_BASELINE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextBaseline.USE_DOMINANT_BASELINE.</p>

		 ]]></description>
<includeExample><![CDATA[examples\TextLayoutFormat_alignmentBaselineExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextBaseline

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='backgroundAlphaProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/backgroundAlphaProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='backgroundAlpha' fullname='flashx.textLayout.formats:TextLayoutFormat/backgroundAlpha/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Alpha (transparency) value for the background (adopts default value if undefined during cascade). A value of 0 is fully transparent, and a value of 1 is fully opaque. Display objects with alpha set to 0 are active, even though they are invisible.

		 <p>Legal values are numbers from 0 to 1 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of 1.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='backgroundColorProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/backgroundColorProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='backgroundColor' fullname='flashx.textLayout.formats:TextLayoutFormat/backgroundColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Background color of the text (adopts default value if undefined during cascade). Can be either the constant value  <code>BackgroundColor.TRANSPARENT</code>, or a hexadecimal value that specifies the three 8-bit RGB (red, green, blue) values; for example, 0xFF0000 is red and 0x00FF00 is green.

		 <p>Legal values as a string are BackgroundColor.TRANSPARENT, FormatValue.INHERIT and uints from 0x0 to 0xffffffff.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BackgroundColor.TRANSPARENT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BackgroundColor

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='baselineShiftProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/baselineShiftProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='baselineShift' fullname='flashx.textLayout.formats:TextLayoutFormat/baselineShift/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Amount to shift the baseline from the <code>dominantBaseline</code> value. Units are in pixels, or a percentage of <code>fontSize</code> (in which case, enter a string value, like 140%).  Positive values shift the line up for horizontal text (right for vertical) and negative values shift it down for horizontal (left for vertical). 

		 <p>Legal values are BaselineShift.SUPERSCRIPT, BaselineShift.SUBSCRIPT, FormatValue.INHERIT.</p>

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000 to 1000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BaselineShift

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='blockProgressionProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/blockProgressionProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='blockProgression' fullname='flashx.textLayout.formats:TextLayoutFormat/blockProgression/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies a vertical or horizontal progression of line placement.

		 Lines are either placed top-to-bottom (<code>BlockProgression.TB</code>, used for horizontal text) or right-to-left (<code>BlockProgression.RL</code>, used for vertical text).

		 <p>Legal values are BlockProgression.RL, BlockProgression.TB, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BlockProgression.TB.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BlockProgression

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='breakOpportunityProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/breakOpportunityProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='breakOpportunity' fullname='flashx.textLayout.formats:TextLayoutFormat/breakOpportunity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls where lines are allowed to break when breaking wrapping text into multiple lines. Set to <code>BreakOpportunity.AUTO</code> to break text normally. Set to <code>BreakOpportunity.NONE</code> to <em>not</em> break the text unless the text would overrun the measure and there are no other places to break the line. Set to <code>BreakOpportunity.ANY</code> to allow the line to break anywhere, rather than just between words. Set to <code>BreakOpportunity.ALL</code> to have each typographic cluster put on a separate line (useful for text on a path).

		 <p>Legal values are BreakOpportunity.ALL, BreakOpportunity.ANY, BreakOpportunity.AUTO, BreakOpportunity.NONE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BreakOpportunity.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.BreakOpportunity

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='cffHintingProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/cffHintingProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='cffHinting' fullname='flashx.textLayout.formats:TextLayoutFormat/cffHinting/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The type of CFF hinting used for this text. CFF hinting determines whether the Flash runtime forces strong horizontal stems to fit to a sub pixel grid or not. This property applies only if the <code>renderingMode</code> property is set to <code>RenderingMode.CFF</code>, and the font is embedded (<code>fontLookup</code> property is set to <code>FontLookup.EMBEDDED_CFF</code>). At small screen sizes, hinting produces a clear, legible text for human readers.

		 <p>Legal values are CFFHinting.NONE, CFFHinting.HORIZONTAL_STEM, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of CFFHinting.HORIZONTAL_STEM.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.CFFHinting

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='clearFloatsProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/clearFloatsProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='clearFloats' fullname='flashx.textLayout.formats:TextLayoutFormat/clearFloats/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls how text wraps around a float. A value of none allows the text to wrap most closely around a float. A value of left causes the text to skip over any portion of the container that has a left float, and a value of right causes the text to skip over any portion of the container that has a right float. A value of both causes the text to skip over any floats.

		 <p>Legal values are ClearFloats.START, ClearFloats.END, ClearFloats.LEFT, ClearFloats.RIGHT, ClearFloats.BOTH, ClearFloats.NONE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of ClearFloats.NONE.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ClearFloats

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.ClearFloats

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='colorProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/colorProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='color' fullname='flashx.textLayout.formats:TextLayoutFormat/color/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Color of the text. A hexadecimal number that specifies three 8-bit RGB (red, green, blue) values; for example, 0xFF0000 is red and 0x00FF00 is green. It can also be enum value {BLACK, GREEN, GRAY, BLUE, SILVER, LIME, OLIVE, WHITE, YELLOW, MAROON, NAVY, RED, PURPLE, TEAL, FUCHSIA, AQUA, MAGENTA, CYAN}

		 <p>Legal values as a string are ColorName.BLACK, ColorName.GREEN, ColorName.GRAY, ColorName.BLUE, ColorName.SILVER, ColorName.LIME, ColorName.OLIVE, ColorName.WHITE, ColorName.YELLOW, ColorName.MAROON, ColorName.NAVY, ColorName.RED, ColorName.PURPLE, ColorName.TEAL, ColorName.FUCHSIA, ColorName.AQUA, ColorName.MAGENTA, ColorName.CYAN, FormatValue.INHERIT and uints from 0x0 to 0xffffffff.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ColorName

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnBreakAfterProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/columnBreakAfterProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='columnBreakAfter' fullname='flashx.textLayout.formats:TextLayoutFormat/columnBreakAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls column after before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnBreakBeforeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/columnBreakBeforeProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='columnBreakBefore' fullname='flashx.textLayout.formats:TextLayoutFormat/columnBreakBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls column break before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnCountProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/columnCountProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='columnCount' fullname='flashx.textLayout.formats:TextLayoutFormat/columnCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Number of text columns (adopts default value if undefined during cascade).

		 The column number overrides the  other column settings. Value is an integer, or <code>FormatValue.AUTO</code> if unspecified. If <code>columnCount</code> is not specified,<code>columnWidth</code> is used to create as many columns as can fit in the container.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and from ints from 1 to 50.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnGapProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/columnGapProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='columnGap' fullname='flashx.textLayout.formats:TextLayoutFormat/columnGap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade).

		 Value is a Number

		 <p>Legal values are numbers from 0 to 1000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of 20.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnWidthProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/columnWidthProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='columnWidth' fullname='flashx.textLayout.formats:TextLayoutFormat/columnWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Column width in pixels (adopts default value if undefined during cascade).

		 If you specify the width of the columns, but not the count, TextLayout will create as many columns of that width as possible, given the  container width and <code>columnGap</code> settings. Any remainder space is left after the last column. Value is a Number.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from 0 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='containerBreakAfterProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/containerBreakAfterProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='containerBreakAfter' fullname='flashx.textLayout.formats:TextLayoutFormat/containerBreakAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls container after before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='containerBreakBeforeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/containerBreakBeforeProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='containerBreakBefore' fullname='flashx.textLayout.formats:TextLayoutFormat/containerBreakBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls container break before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='coreStyles' fullname='flashx.textLayout.formats:TextLayoutFormat/coreStyles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Returns the <code>coreStyles</code> on this TextLayoutFormat.  

		 The coreStyles object includes the formats that are defined by TextLayoutFormat and are in TextLayoutFormat.description. The

		 returned <code>coreStyles</code> object consists of an array of <em>stylename-value</em> pairs.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat

		 

		 ]]></see>
</method>
<method name='defaultFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/defaultFormat/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[

		 Returns a TextLayoutFormat object with default settings.

		 This function always returns the same object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[a singleton instance of ITextLayoutFormat that is populated with default values.

		 

		 ]]></return>
</method>
<method name='description' fullname='flashx.textLayout.formats:TextLayoutFormat/tlf_internal:description/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Property descriptions accessible by name. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='digitCaseProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/digitCaseProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='digitCase' fullname='flashx.textLayout.formats:TextLayoutFormat/digitCase/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The type of digit case used for this text. Setting the value to <code>DigitCase.OLD_STYLE</code> approximates lowercase letterforms with varying ascenders and descenders. The figures are proportionally spaced. This style is only available in selected typefaces, most commonly in a supplemental or expert font. The <code>DigitCase.LINING</code> setting has all-cap height and is typically monospaced to line up in charts.<p><img src='../../../images/textLayout_digitcase.gif' alt='digitCase' /></p>

		 <p>Legal values are DigitCase.DEFAULT, DigitCase.LINING, DigitCase.OLD_STYLE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of DigitCase.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.DigitCase

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='digitWidthProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/digitWidthProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='digitWidth' fullname='flashx.textLayout.formats:TextLayoutFormat/digitWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Type of digit width used for this text. This can be <code>DigitWidth.PROPORTIONAL</code>, which looks best for individual numbers, or <code>DigitWidth.TABULAR</code>, which works best for numbers in tables, charts, and vertical rows.<p><img src='../../../images/textLayout_digitwidth.gif' alt='digitWidth' /></p>

		 <p>Legal values are DigitWidth.DEFAULT, DigitWidth.PROPORTIONAL, DigitWidth.TABULAR, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of DigitWidth.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.DigitWidth

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='directionProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/directionProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='direction' fullname='flashx.textLayout.formats:TextLayoutFormat/direction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the default bidirectional embedding level of the text in the text block. 

		 Left-to-right reading order, as in Latin-style scripts, or right-to-left reading order, as in Arabic or Hebrew. This property also affects column direction when it is applied at the container level. Columns can be either left-to-right or right-to-left, just like text. Below are some examples:<p><img src='../../../images/textLayout_direction.gif' alt='direction' /></p>

		 <p>Legal values are Direction.LTR, Direction.RTL, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Direction.LTR.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.Direction

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='dominantBaselineProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/dominantBaselineProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='dominantBaseline' fullname='flashx.textLayout.formats:TextLayoutFormat/dominantBaseline/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies which element baseline snaps to the <code>alignmentBaseline</code> to determine the vertical position of the element on the line. A value of <code>TextBaseline.AUTO</code> selects the dominant baseline based on the <code>locale</code> property of the parent paragraph.  For Japanese and Chinese, the selected baseline value is <code>TextBaseline.IDEOGRAPHIC_CENTER</code>; for all others it is <code>TextBaseline.ROMAN</code>. These baseline choices are determined by the choice of font and the font size.<p><img src='../../../images/textLayout_baselines.jpg' alt='baselines' /></p>

		 <p>Legal values are FormatValue.AUTO, TextBaseline.ROMAN, TextBaseline.ASCENT, TextBaseline.DESCENT, TextBaseline.IDEOGRAPHIC_TOP, TextBaseline.IDEOGRAPHIC_CENTER, TextBaseline.IDEOGRAPHIC_BOTTOM, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextBaseline

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='emptyTextLayoutFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/tlf_internal:emptyTextLayoutFormat/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[

		 Returns an ITextLayoutFormat instance with all properties set to <code>undefined</code>.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<private><![CDATA[]]></private>
</method>
<method name='firstBaselineOffsetProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/firstBaselineOffsetProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='firstBaselineOffset' fullname='flashx.textLayout.formats:TextLayoutFormat/firstBaselineOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the baseline position of the first line in the container. Which baseline this property refers to depends on the container-level locale.  For Japanese and Chinese, it is <code>TextBaseline.IDEOGRAPHIC_BOTTOM</code>; for all others it is <code>TextBaseline.ROMAN</code>.

		 The offset from the top inset (or right inset if <code>blockProgression</code> is RL) of the container to the baseline of the first line can be either <code>BaselineOffset.ASCENT</code>, meaning equal to the ascent of the line, <code>BaselineOffset.LINE_HEIGHT</code>, meaning equal to the height of that first line, or any fixed-value number to specify an absolute distance. <code>BaselineOffset.AUTO</code> aligns the ascent of the line with the container top inset.<p><img src='../../../images/textLayout_FBO1.png' alt='firstBaselineOffset1' /><img src='../../../images/textLayout_FBO2.png' alt='firstBaselineOffset2' /><img src='../../../images/textLayout_FBO3.png' alt='firstBaselineOffset3' /><img src='../../../images/textLayout_FBO4.png' alt='firstBaselineOffset4' /></p>

		 <p>Legal values as a string are BaselineOffset.AUTO, BaselineOffset.ASCENT, BaselineOffset.LINE_HEIGHT, FormatValue.INHERIT and numbers from 0 to 1000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BaselineOffset.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BaselineOffset

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontFamilyProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/fontFamilyProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='fontFamily' fullname='flashx.textLayout.formats:TextLayoutFormat/fontFamily/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		  The name of the font to use, or a comma-separated list of font names. The Flash runtime renders the element with the first available font in the list. For example Arial, Helvetica, _sans causes the player to search for Arial, then Helvetica if Arial is not found, then _sans if neither is found.

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Arial.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontLookupProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/fontLookupProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='fontLookup' fullname='flashx.textLayout.formats:TextLayoutFormat/fontLookup/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Font lookup to use. Specifying <code>FontLookup.DEVICE</code> uses the fonts installed on the system that is running the SWF file. Device fonts result in a smaller movie size, but text is not always rendered the same across different systems and platforms. Specifying <code>FontLookup.EMBEDDED_CFF</code> uses font outlines embedded in the published SWF file. Embedded fonts increase the size of the SWF file (sometimes dramatically), but text is consistently displayed in the chosen font.

		 <p>Legal values are FontLookup.DEVICE, FontLookup.EMBEDDED_CFF, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontLookup.DEVICE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontLookup

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontSizeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/fontSizeProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='fontSize' fullname='flashx.textLayout.formats:TextLayoutFormat/fontSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The size of the text in pixels.

		 <p>Legal values are numbers from 1 to 720 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 12.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontStyleProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/fontStyleProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='fontStyle' fullname='flashx.textLayout.formats:TextLayoutFormat/fontStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Style of text. May be <code>FontPosture.NORMAL</code>, for use in plain text, or <code>FontPosture.ITALIC</code> for italic. This property applies only to device fonts (<code>fontLookup</code> property is set to flash.text.engine.FontLookup.DEVICE).

		 <p>Legal values are FontPosture.NORMAL, FontPosture.ITALIC, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontPosture.NORMAL.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontPosture

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontWeightProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/fontWeightProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='fontWeight' fullname='flashx.textLayout.formats:TextLayoutFormat/fontWeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Weight of text. May be <code>FontWeight.NORMAL</code> for use in plain text, or <code>FontWeight.BOLD</code>. Applies only to device fonts (<code>fontLookup</code> property is set to flash.text.engine.FontLookup.DEVICE).

		 <p>Legal values are FontWeight.NORMAL, FontWeight.BOLD, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontWeight.NORMAL.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontWeight

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='justificationRuleProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/justificationRuleProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='justificationRule' fullname='flashx.textLayout.formats:TextLayoutFormat/justificationRule/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Rule used to justify text in a paragraph.

		 Default value is <code>FormatValue.AUTO</code>, which justifies text based on the paragraph's <code>locale</code> property. For all languages except Japanese and Chinese, <code>FormatValue.AUTO</code> becomes <code>JustificationRule.SPACE</code>, which adds extra space to the space characters.  For Japanese and Chinese, <code>FormatValue.AUTO</code> becomes <code>JustficationRule.EAST_ASIAN</code>. In part, justification changes the spacing of punctuation. In Roman text the comma and Japanese periods take a full character's width but in East Asian text only half of a character's width. Also, in the East Asian text the spacing between sequential punctuation marks becomes tighter, obeying traditional East Asian typographic conventions. Note, too, in the example below the leading that is applied to the second line of the paragraphs. In the East Asian version, the last two lines push left. In the Roman version, the second and following lines push left.<p><img src='../../../images/textLayout_justificationrule.png' alt='justificationRule' /></p>

		 <p>Legal values are JustificationRule.EAST_ASIAN, JustificationRule.SPACE, FormatValue.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.JustificationRule

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='justificationStyleProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/justificationStyleProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='justificationStyle' fullname='flashx.textLayout.formats:TextLayoutFormat/justificationStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The style used for justification of the paragraph. Used only in conjunction with a <code>justificationRule</code> setting of <code>JustificationRule.EAST_ASIAN</code>.

		 Default value of <code>FormatValue.AUTO</code> is resolved to <code>JustificationStyle.PUSH_IN_KINSOKU</code> for all locales.  The constants defined by the JustificationStyle class specify options for handling kinsoku characters, which are Japanese characters that cannot appear at either the beginning or end of a line. If you want looser text, specify <code>JustificationStyle.PUSH-OUT-ONLY</code>. If you want behavior that is like what you get with the  <code>justificationRule</code> of <code>JustificationRule.SPACE</code>, use <code>JustificationStyle.PRIORITIZE-LEAST-ADJUSTMENT</code>.

		 <p>Legal values are JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT, JustificationStyle.PUSH_IN_KINSOKU, JustificationStyle.PUSH_OUT_ONLY, FormatValue.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.JustificationStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='kerningProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/kerningProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='kerning' fullname='flashx.textLayout.formats:TextLayoutFormat/kerning/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Kerning adjusts the pixels between certain character pairs to improve readability. Kerning is supported for all fonts with kerning tables.

		 <p>Legal values are Kerning.ON, Kerning.OFF, Kerning.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Kerning.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.Kerning

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='leadingModelProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/leadingModelProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='leadingModel' fullname='flashx.textLayout.formats:TextLayoutFormat/leadingModel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the leading model, which is a combination of leading basis and leading direction.

		 Leading basis is the baseline to which the <code>lineHeight</code> property refers. Leading direction determines whether the <code>lineHeight</code> property refers to the distance of a line's baseline from that of the line before it or the line after it. The default value of <code>FormatValue.AUTO</code> is resolved based on the paragraph's <code>locale</code> property.  For Japanese and Chinese, it is <code>LeadingModel.IDEOGRAPHIC_TOP_DOWN</code> and for all others it is <code>LeadingModel.ROMAN_UP</code>.<p><strong>Leading Basis:</strong></p><p><img src='../../../images/textLayout_LB1.png' alt='leadingBasis1' />    <img src='../../../images/textLayout_LB2.png' alt='leadingBasis2' />    <img src='../../../images/textLayout_LB3.png' alt='leadingBasis3' /></p><p><strong>Leading Direction:</strong></p><p><img src='../../../images/textLayout_LD1.png' alt='leadingDirection1' />    <img src='../../../images/textLayout_LD2.png' alt='leadingDirection2' />    <img src='../../../images/textLayout_LD3.png' alt='leadingDirection3' /></p>

		 <p>Legal values are LeadingModel.ROMAN_UP, LeadingModel.IDEOGRAPHIC_TOP_UP, LeadingModel.IDEOGRAPHIC_CENTER_UP, LeadingModel.IDEOGRAPHIC_TOP_DOWN, LeadingModel.IDEOGRAPHIC_CENTER_DOWN, LeadingModel.APPROXIMATE_TEXT_FIELD, LeadingModel.ASCENT_DESCENT_UP, LeadingModel.BOX, LeadingModel.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of LeadingModel.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.LeadingModel

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='ligatureLevelProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/ligatureLevelProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='ligatureLevel' fullname='flashx.textLayout.formats:TextLayoutFormat/ligatureLevel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls which of the ligatures that are defined in the font may be used in the text. The ligatures that appear for each of these settings is dependent on the font. A ligature occurs where two or more letter-forms are joined as a single glyph. Ligatures usually replace consecutive characters sharing common components, such as the letter pairs 'fi', 'fl', or 'ae'. They are used with both Latin and Non-Latin character sets. The ligatures enabled by the values of the LigatureLevel class - <code>MINIMUM</code>, <code>COMMON</code>, <code>UNCOMMON</code>, and <code>EXOTIC</code> - are additive. Each value enables a new set of ligatures, but also includes those of the previous types.<p><b>Note: </b>When working with Arabic or Syriac fonts, <code>ligatureLevel</code> must be set to MINIMUM or above.</p><p><img src='../../../images/textLayout_ligatures.png' alt='ligatureLevel' /></p>

		 <p>Legal values are LigatureLevel.MINIMUM, LigatureLevel.COMMON, LigatureLevel.UNCOMMON, LigatureLevel.EXOTIC, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of LigatureLevel.COMMON.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.LigatureLevel

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineBreakProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/lineBreakProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='lineBreak' fullname='flashx.textLayout.formats:TextLayoutFormat/lineBreak/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls word wrapping within the container (adopts default value if undefined during cascade).

		 Text in the container may be set to fit the width of the container (<code>LineBreak.TO_FIT</code>), or can be set to break only at explicit return or line feed characters (<code>LineBreak.EXPLICIT</code>).

		 <p>Legal values are LineBreak.EXPLICIT, LineBreak.TO_FIT, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of LineBreak.TO_FIT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.LineBreak

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineHeightProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/lineHeightProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='lineHeight' fullname='flashx.textLayout.formats:TextLayoutFormat/lineHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Leading controls for the text. The distance from the baseline of the previous or the next line (based on <code>LeadingModel</code>) to the baseline of the current line is equal to the maximum amount of the leading applied to any character in the line. This is either a number or a percent.  If specifying a percent, enter a string value, like 140%.<p><img src='../../../images/textLayout_lineHeight1.jpg' alt='lineHeight1' /><img src='../../../images/textLayout_lineHeight2.jpg' alt='lineHeight2' /></p>

		 <p>Legal values as a number are from -720 to 720.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 120%.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineThroughProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/lineThroughProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='lineThrough' fullname='flashx.textLayout.formats:TextLayoutFormat/lineThrough/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 If <code>true</code>, applies strikethrough, a line drawn through the middle of the text.

		 <p>Legal values are true, false and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of false.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkActiveFormatProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/linkActiveFormatProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='linkActiveFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/linkActiveFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Defines the formatting attributes used for links in normal state. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkHoverFormatProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/linkHoverFormatProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='linkHoverFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/linkHoverFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Defines the formatting attributes used for links in hover state, when the mouse is within the bounds (rolling over) a link. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkNormalFormatProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/linkNormalFormatProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='linkNormalFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/linkNormalFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Defines the formatting attributes used for links in normal state. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listAutoPaddingProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/listAutoPaddingProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='listAutoPadding' fullname='flashx.textLayout.formats:TextLayoutFormat/listAutoPadding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 This specifies an auto indent for the start edge of lists when the padding value of the list on that side is <code>auto</code>.

		 <p>Legal values are numbers from -1000 to 1000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 40.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listMarkerFormatProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/listMarkerFormatProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='listMarkerFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/listMarkerFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Defines the formatting attributes list markers. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>IListMarkerFormat</code> or converts an array of objects with key and value as members to a ListMarkerFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listStylePositionProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/listStylePositionProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='listStylePosition' fullname='flashx.textLayout.formats:TextLayoutFormat/listStylePosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 <p>Legal values are ListStylePosition.INSIDE, ListStylePosition.OUTSIDE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of ListStylePosition.OUTSIDE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ListStylePosition

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listStyleTypeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/listStyleTypeProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='listStyleType' fullname='flashx.textLayout.formats:TextLayoutFormat/listStyleType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 <p>Legal values are ListStyleType.UPPER_ALPHA, ListStyleType.LOWER_ALPHA, ListStyleType.UPPER_ROMAN, ListStyleType.LOWER_ROMAN, ListStyleType.NONE, ListStyleType.DISC, ListStyleType.CIRCLE, ListStyleType.SQUARE, ListStyleType.BOX, ListStyleType.CHECK, ListStyleType.DIAMOND, ListStyleType.HYPHEN, ListStyleType.ARABIC_INDIC, ListStyleType.BENGALI, ListStyleType.DECIMAL, ListStyleType.DECIMAL_LEADING_ZERO, ListStyleType.DEVANAGARI, ListStyleType.GUJARATI, ListStyleType.GURMUKHI, ListStyleType.KANNADA, ListStyleType.PERSIAN, ListStyleType.THAI, ListStyleType.URDU, ListStyleType.CJK_EARTHLY_BRANCH, ListStyleType.CJK_HEAVENLY_STEM, ListStyleType.HANGUL, ListStyleType.HANGUL_CONSTANT, ListStyleType.HIRAGANA, ListStyleType.HIRAGANA_IROHA, ListStyleType.KATAKANA, ListStyleType.KATAKANA_IROHA, ListStyleType.LOWER_ALPHA, ListStyleType.LOWER_GREEK, ListStyleType.LOWER_LATIN, ListStyleType.UPPER_ALPHA, ListStyleType.UPPER_GREEK, ListStyleType.UPPER_LATIN, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of ListStyleType.DISC.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ListStyleType

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='localeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/localeProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='locale' fullname='flashx.textLayout.formats:TextLayoutFormat/locale/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The locale of the text. Controls case transformations and shaping. Standard locale identifiers as described in Unicode Technical Standard #35 are used. For example en, en_US and en-US are all English, ja is Japanese. 

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of en.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingBottomProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingBottomProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='paddingBottom' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingBottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Bottom inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45.  (adopts default value if undefined during cascade).

		 Space between the bottom edge of the container and the text.  Value is a Number  or auto. <p> With horizontal text, in scrollable containers with multiple columns, the first and following columns will show the padding as blank space at the bottom of the container, but for the last column, if the text doesn't all fit, you may have to scroll in order to see the padding.</p>

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingLeftProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingLeftProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='paddingLeft' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Left inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the left edge of the container and the text.  Value is a Number or auto.<p> With vertical text, in scrollable containers with multiple columns, the first and following columns will show the padding as blank space at the end of the container, but for the last column, if the text doesn't all fit, you may have to scroll in order to see the padding.</p>

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingRightProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingRightProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='paddingRight' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Right inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the right edge of the container and the text.  Value is a Number or auto. 

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingTopProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingTopProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='paddingTop' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Top inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the top edge of the container and the text.  Value is a Number or auto.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphEndIndentProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphEndIndentProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='paragraphEndIndent' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphEndIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A Number that specifies, in pixels, the amount to indent the paragraph's end edge. Refers to the right edge in left-to-right text and the left edge in right-to-left text. 

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphSpaceAfterProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphSpaceAfterProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='paragraphSpaceAfter' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphSpaceAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A Number that specifies the amount of space, in pixels, to leave after the paragraph.

		 Collapses in tandem with  <code>paragraphSpaceBefore</code>.

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphSpaceBeforeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphSpaceBeforeProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='paragraphSpaceBefore' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphSpaceBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A Number that specifies the amount of space, in pixels, to leave before the paragraph. 

		 Collapses in tandem with <code>paragraphSpaceAfter</code>.

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphStartIndentProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphStartIndentProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='paragraphStartIndent' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphStartIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A Number that specifies, in pixels, the amount to indent the paragraph's start edge. Refers to the left edge in left-to-right text and the right edge in right-to-left text. 

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='renderingModeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/renderingModeProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='renderingMode' fullname='flashx.textLayout.formats:TextLayoutFormat/renderingMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The rendering mode used for this text.  Applies only to embedded fonts (<code>fontLookup</code> property is set to <code>FontLookup.EMBEDDED_CFF</code>).

		 <p>Legal values are RenderingMode.NORMAL, RenderingMode.CFF, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of RenderingMode.CFF.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.RenderingMode

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='styleNameProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/styleNameProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='styleName' fullname='flashx.textLayout.formats:TextLayoutFormat/styleName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Assigns an identifying class to the element, making it possible to set a style for the element by referencing the <code>styleName</code>.

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='styles' fullname='flashx.textLayout.formats:TextLayoutFormat/styles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Returns the styles on this TextLayoutFormat.  Note that the getter makes a copy of the  

		 styles dictionary. The coreStyles object encapsulates all styles set in the format property including core and user styles. The

		 returned object consists of an array of <em>stylename-value</em> pairs.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat

		 

		 ]]></see>
</method>
<method name='tabStopsProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/tabStopsProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='tabStops' fullname='flashx.textLayout.formats:TextLayoutFormat/tabStops/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the tab stops associated with the paragraph.

		 Setters can take an array of TabStopFormat, a condensed string representation, undefined, or <code>FormatValue.INHERIT</code>. The condensed string representation is always converted into an array of TabStopFormat. <p>The string-based format is a list of tab stops, where each tab stop is delimited by one or more spaces.</p><p>A tab stop takes the following form: &lt;alignment type&gt;&lt;alignment position&gt;|&lt;alignment token&gt;.</p><p>The alignment type is a single character, and can be S, E, C, or D (or lower-case equivalents). S or s for start, E or e for end, C or c for center, D or d for decimal. The alignment type is optional, and if its not specified will default to S.</p><p>The alignment position is a Number, and is specified according to FXG spec for Numbers (decimal or scientific notation). The alignment position is required.</p><p>The vertical bar is used to separate the alignment position from the alignment token, and should only be present if the alignment token is present.</p><p> The alignment token is optional if the alignment type is D, and should not be present if the alignment type is anything other than D. The alignment token may be any sequence of characters terminated by the space that ends the tab stop (for the last tab stop, the terminating space is optional; end of alignment token is implied). A space may be part of the alignment token if it is escaped with a backslash (\ ). A backslash may be part of the alignment token if it is escaped with another backslash (\\). If the alignment type is D, and the alignment token is not specified, it will take on the default value of null.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TabStopFormat

		 

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlignLastProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/textAlignLastProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='textAlignLast' fullname='flashx.textLayout.formats:TextLayoutFormat/textAlignLast/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Alignment of the last (or only) line in the paragraph relative to the container in justified text.

		 If <code>textAlign</code> is set to <code>TextAlign.JUSTIFY</code>, <code>textAlignLast</code> specifies how the last line (or only line, if this is a one line block) is aligned. Values are similar to <code>textAlign</code>.

		 <p>Legal values are TextAlign.LEFT, TextAlign.RIGHT, TextAlign.CENTER, TextAlign.JUSTIFY, TextAlign.START, TextAlign.END, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextAlign.START.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlignProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/textAlignProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='textAlign' fullname='flashx.textLayout.formats:TextLayoutFormat/textAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Alignment of lines in the paragraph relative to the container.

		 <code>TextAlign.LEFT</code> aligns lines along the left edge of the container. <code>TextAlign.RIGHT</code> aligns on the right edge. <code>TextAlign.CENTER</code> positions the line equidistant from the left and right edges. <code>TextAlign.JUSTIFY</code> spreads the lines out so they fill the space. <code>TextAlign.START</code> is equivalent to setting left in left-to-right text, or right in right-to-left text. <code>TextAlign.END</code> is equivalent to setting right in left-to-right text, or left in right-to-left text.

		 <p>Legal values are TextAlign.LEFT, TextAlign.RIGHT, TextAlign.CENTER, TextAlign.JUSTIFY, TextAlign.START, TextAlign.END, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextAlign.START.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlphaProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/textAlphaProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='textAlpha' fullname='flashx.textLayout.formats:TextLayoutFormat/textAlpha/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Alpha (transparency) value for the text. A value of 0 is fully transparent, and a value of 1 is fully opaque. Display objects with <code>textAlpha</code> set to 0 are active, even though they are invisible.

		 <p>Legal values are numbers from 0 to 1 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 1.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textDecorationProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/textDecorationProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='textDecoration' fullname='flashx.textLayout.formats:TextLayoutFormat/textDecoration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Decoration on text. Use to apply underlining; default is none.

		 <p>Legal values are TextDecoration.NONE, TextDecoration.UNDERLINE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextDecoration.NONE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextDecoration

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textIndentProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/textIndentProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='textIndent' fullname='flashx.textLayout.formats:TextLayoutFormat/textIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A Number that specifies, in pixels, the amount to indent the first line of the paragraph.

		 A negative indent will push the line into the margin, and possibly out of the container.

		 <p>Legal values are numbers from -8000 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textJustifyProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/textJustifyProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='textJustify' fullname='flashx.textLayout.formats:TextLayoutFormat/textJustify/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies options for justifying text.

		 Default value is <code>TextJustify.INTER_WORD</code>, meaning that extra space is added to the space characters. <code>TextJustify.DISTRIBUTE</code> adds extra space to space characters and between individual letters. Used only in conjunction with a <code>justificationRule</code> value of <code>JustificationRule.SPACE</code>.

		 <p>Legal values are TextJustify.INTER_WORD, TextJustify.DISTRIBUTE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextJustify.INTER_WORD.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextJustify

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textRotationProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/textRotationProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='textRotation' fullname='flashx.textLayout.formats:TextLayoutFormat/textRotation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Determines the number of degrees to rotate this text.

		 <p>Legal values are TextRotation.ROTATE_0, TextRotation.ROTATE_180, TextRotation.ROTATE_270, TextRotation.ROTATE_90, TextRotation.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextRotation.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextRotation

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='trackingLeftProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/trackingLeftProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='trackingLeft' fullname='flashx.textLayout.formats:TextLayoutFormat/trackingLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the left of each character. If kerning is enabled, the <code>trackingLeft</code> value is added to the values in the kerning table for the font. If kerning is disabled, the <code>trackingLeft</code> value is used as a manual kerning value. Supports both positive and negative values. 

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='trackingRightProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/trackingRightProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='trackingRight' fullname='flashx.textLayout.formats:TextLayoutFormat/trackingRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the right of each character.  If kerning is enabled, the <code>trackingRight</code> value is added to the values in the kerning table for the font. If kerning is disabled, the <code>trackingRight</code> value is used as a manual kerning value. Supports both positive and negative values. 

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='typographicCaseProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/typographicCaseProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='typographicCase' fullname='flashx.textLayout.formats:TextLayoutFormat/typographicCase/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The type of typographic case used for this text. Here are some examples:<p><img src='../../../images/textLayout_typographiccase.png' alt='typographicCase' /></p>

		 <p>Legal values are TLFTypographicCase.DEFAULT, TLFTypographicCase.CAPS_TO_SMALL_CAPS, TLFTypographicCase.UPPERCASE, TLFTypographicCase.LOWERCASE, TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TLFTypographicCase.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TLFTypographicCase

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='userStyles' fullname='flashx.textLayout.formats:TextLayoutFormat/userStyles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Returns the <code>userStyles</code> on this TextLayoutFormat.  

		 The userStyles object includes the formats that are defined by TextLayoutFormat and are not in TextLayoutFormat.description. The

		 returned <code>userStyles</code> object consists of an array of <em>stylename-value</em> pairs.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat

		 

		 ]]></see>
</method>
<method name='verticalAlignProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/verticalAlignProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='verticalAlign' fullname='flashx.textLayout.formats:TextLayoutFormat/verticalAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Vertical alignment or justification (adopts default value if undefined during cascade).

		 Determines how TextFlow elements align within the container.

		 <p>Legal values are VerticalAlign.TOP, VerticalAlign.MIDDLE, VerticalAlign.BOTTOM, VerticalAlign.JUSTIFY, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of VerticalAlign.TOP.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.VerticalAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='whiteSpaceCollapseProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/whiteSpaceCollapseProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='whiteSpaceCollapse' fullname='flashx.textLayout.formats:TextLayoutFormat/whiteSpaceCollapse/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Collapses or preserves whitespace when importing text into a TextFlow. <code>WhiteSpaceCollapse.PRESERVE</code> retains all whitespace characters. <code>WhiteSpaceCollapse.COLLAPSE</code> removes newlines, tabs, and leading or trailing spaces within a block of imported text. Line break tags (<br/>) and Unicode line separator characters are retained.

		 <p>Legal values are WhiteSpaceCollapse.PRESERVE, WhiteSpaceCollapse.COLLAPSE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of WhiteSpaceCollapse.COLLAPSE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.WhiteSpaceCollapse

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='wordSpacingProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/wordSpacingProperty/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.property:Property'>
</method>
<method name='wordSpacing' fullname='flashx.textLayout.formats:TextLayoutFormat/wordSpacing/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the optimum, minimum, and maximum spacing (as a multiplier of the width of a normal space) between words to use during justification.

		 The optimum space is used to indicate the desired size of a space, as a fraction of the value defined in the font. The minimum and maximum values are the used when textJustify is distribute to determine how wide or narrow the spaces between the words may grow before letter spacing is used to justify the line.

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 100%, 50%, 150%.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='alignmentBaseline' fullname='flashx.textLayout.formats:TextLayoutFormat/alignmentBaseline/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='backgroundAlpha' fullname='flashx.textLayout.formats:TextLayoutFormat/backgroundAlpha/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='backgroundColor' fullname='flashx.textLayout.formats:TextLayoutFormat/backgroundColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='baselineShift' fullname='flashx.textLayout.formats:TextLayoutFormat/baselineShift/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='blockProgression' fullname='flashx.textLayout.formats:TextLayoutFormat/blockProgression/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='breakOpportunity' fullname='flashx.textLayout.formats:TextLayoutFormat/breakOpportunity/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='cffHinting' fullname='flashx.textLayout.formats:TextLayoutFormat/cffHinting/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='clearFloats' fullname='flashx.textLayout.formats:TextLayoutFormat/clearFloats/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='color' fullname='flashx.textLayout.formats:TextLayoutFormat/color/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnBreakAfter' fullname='flashx.textLayout.formats:TextLayoutFormat/columnBreakAfter/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnBreakBefore' fullname='flashx.textLayout.formats:TextLayoutFormat/columnBreakBefore/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnCount' fullname='flashx.textLayout.formats:TextLayoutFormat/columnCount/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnGap' fullname='flashx.textLayout.formats:TextLayoutFormat/columnGap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnWidth' fullname='flashx.textLayout.formats:TextLayoutFormat/columnWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='containerBreakAfter' fullname='flashx.textLayout.formats:TextLayoutFormat/containerBreakAfter/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='containerBreakBefore' fullname='flashx.textLayout.formats:TextLayoutFormat/containerBreakBefore/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='digitCase' fullname='flashx.textLayout.formats:TextLayoutFormat/digitCase/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='digitWidth' fullname='flashx.textLayout.formats:TextLayoutFormat/digitWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='direction' fullname='flashx.textLayout.formats:TextLayoutFormat/direction/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='dominantBaseline' fullname='flashx.textLayout.formats:TextLayoutFormat/dominantBaseline/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='firstBaselineOffset' fullname='flashx.textLayout.formats:TextLayoutFormat/firstBaselineOffset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontFamily' fullname='flashx.textLayout.formats:TextLayoutFormat/fontFamily/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontLookup' fullname='flashx.textLayout.formats:TextLayoutFormat/fontLookup/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontSize' fullname='flashx.textLayout.formats:TextLayoutFormat/fontSize/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontStyle' fullname='flashx.textLayout.formats:TextLayoutFormat/fontStyle/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontWeight' fullname='flashx.textLayout.formats:TextLayoutFormat/fontWeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='justificationRule' fullname='flashx.textLayout.formats:TextLayoutFormat/justificationRule/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='justificationStyle' fullname='flashx.textLayout.formats:TextLayoutFormat/justificationStyle/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='kerning' fullname='flashx.textLayout.formats:TextLayoutFormat/kerning/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='leadingModel' fullname='flashx.textLayout.formats:TextLayoutFormat/leadingModel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='ligatureLevel' fullname='flashx.textLayout.formats:TextLayoutFormat/ligatureLevel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='lineBreak' fullname='flashx.textLayout.formats:TextLayoutFormat/lineBreak/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='lineHeight' fullname='flashx.textLayout.formats:TextLayoutFormat/lineHeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='lineThrough' fullname='flashx.textLayout.formats:TextLayoutFormat/lineThrough/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='linkActiveFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/linkActiveFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='linkHoverFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/linkHoverFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='linkNormalFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/linkNormalFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listAutoPadding' fullname='flashx.textLayout.formats:TextLayoutFormat/listAutoPadding/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listMarkerFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/listMarkerFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listStylePosition' fullname='flashx.textLayout.formats:TextLayoutFormat/listStylePosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listStyleType' fullname='flashx.textLayout.formats:TextLayoutFormat/listStyleType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='locale' fullname='flashx.textLayout.formats:TextLayoutFormat/locale/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingBottom' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingBottom/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingLeft' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingLeft/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingRight' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingRight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingTop' fullname='flashx.textLayout.formats:TextLayoutFormat/paddingTop/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphEndIndent' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphEndIndent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphSpaceAfter' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphSpaceAfter/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphSpaceBefore' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphSpaceBefore/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphStartIndent' fullname='flashx.textLayout.formats:TextLayoutFormat/paragraphStartIndent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='renderingMode' fullname='flashx.textLayout.formats:TextLayoutFormat/renderingMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='styleName' fullname='flashx.textLayout.formats:TextLayoutFormat/styleName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='tabStops' fullname='flashx.textLayout.formats:TextLayoutFormat/tabStops/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textAlignLast' fullname='flashx.textLayout.formats:TextLayoutFormat/textAlignLast/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textAlign' fullname='flashx.textLayout.formats:TextLayoutFormat/textAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textAlpha' fullname='flashx.textLayout.formats:TextLayoutFormat/textAlpha/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textDecoration' fullname='flashx.textLayout.formats:TextLayoutFormat/textDecoration/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textIndent' fullname='flashx.textLayout.formats:TextLayoutFormat/textIndent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textJustify' fullname='flashx.textLayout.formats:TextLayoutFormat/textJustify/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textRotation' fullname='flashx.textLayout.formats:TextLayoutFormat/textRotation/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='trackingLeft' fullname='flashx.textLayout.formats:TextLayoutFormat/trackingLeft/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='trackingRight' fullname='flashx.textLayout.formats:TextLayoutFormat/trackingRight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='typographicCase' fullname='flashx.textLayout.formats:TextLayoutFormat/typographicCase/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='verticalAlign' fullname='flashx.textLayout.formats:TextLayoutFormat/verticalAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='whiteSpaceCollapse' fullname='flashx.textLayout.formats:TextLayoutFormat/whiteSpaceCollapse/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='wordSpacing' fullname='flashx.textLayout.formats:TextLayoutFormat/wordSpacing/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<field name='_alignmentBaselineProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_alignmentBaselineProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_backgroundAlphaProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_backgroundAlphaProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_backgroundColorProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_backgroundColorProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_baselineShiftProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_baselineShiftProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_blockProgressionProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_blockProgressionProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_breakOpportunityProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_breakOpportunityProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_cffHintingProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_cffHintingProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_clearFloatsProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_clearFloatsProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_colorProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_colorProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_columnBreakAfterProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_columnBreakAfterProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_columnBreakBeforeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_columnBreakBeforeProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_columnCountProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_columnCountProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_columnGapProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_columnGapProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_columnWidthProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_columnWidthProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_containerBreakAfterProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_containerBreakAfterProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_containerBreakBeforeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_containerBreakBeforeProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_defaults' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_defaults' type='flashx.textLayout.formats:TextLayoutFormat' isStatic='true' isConst='false' >
</field>
<field name='_description' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_description' type='Object' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_digitCaseProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_digitCaseProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_digitWidthProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_digitWidthProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_directionProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_directionProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_dominantBaselineProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_dominantBaselineProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_emptyStyles' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_emptyStyles' type='Object' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_emptyTextLayoutFormat' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_emptyTextLayoutFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_firstBaselineOffsetProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_firstBaselineOffsetProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_fontFamilyProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_fontFamilyProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_fontLookupProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_fontLookupProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_fontSizeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_fontSizeProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_fontStyleProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_fontStyleProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_fontWeightProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_fontWeightProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_justificationRuleProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_justificationRuleProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_justificationStyleProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_justificationStyleProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_kerningProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_kerningProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_leadingModelProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_leadingModelProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_ligatureLevelProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_ligatureLevelProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lineBreakProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_lineBreakProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lineHeightProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_lineHeightProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lineThroughProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_lineThroughProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_linkActiveFormatProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_linkActiveFormatProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_linkHoverFormatProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_linkHoverFormatProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_linkNormalFormatProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_linkNormalFormatProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_listAutoPaddingProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_listAutoPaddingProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_listMarkerFormatProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_listMarkerFormatProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_listStylePositionProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_listStylePositionProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_listStyleTypeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_listStyleTypeProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_localeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_localeProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_paddingBottomProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_paddingBottomProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_paddingLeftProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_paddingLeftProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_paddingRightProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_paddingRightProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_paddingTopProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_paddingTopProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_paragraphEndIndentProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_paragraphEndIndentProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_paragraphSpaceAfterProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_paragraphSpaceAfterProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_paragraphSpaceBeforeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_paragraphSpaceBeforeProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_paragraphStartIndentProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_paragraphStartIndentProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_renderingModeProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_renderingModeProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_sharedStyles' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_sharedStyles' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_styleNameProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_styleNameProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_styles' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_styles' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ _styles is never null ]]></description>
</field>
<field name='_tabStopsProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_tabStopsProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_textAlignLastProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_textAlignLastProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_textAlignProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_textAlignProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_textAlphaProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_textAlphaProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_textDecorationProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_textDecorationProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_textIndentProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_textIndentProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_textJustifyProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_textJustifyProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_textRotationProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_textRotationProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_trackingLeftProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_trackingLeftProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_trackingRightProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_trackingRightProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_typographicCaseProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_typographicCaseProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_verticalAlignProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_verticalAlignProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_whiteSpaceCollapseProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_whiteSpaceCollapseProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_wordSpacingProperty' fullname='flashx.textLayout.formats:TextLayoutFormat/private:_wordSpacingProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<interfaceRec name='IListMarkerFormat' fullname='flashx.textLayout.formats:IListMarkerFormat' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\IListMarkerFormat.as' namespace='flashx.textLayout.formats' access='public' baseClasses='flashx.textLayout.formats:ITextLayoutFormat' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface provides read access to ListMarkerFormat properties.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</interfaceRec>
<method name='afterContent' fullname='flashx.textLayout.formats:IListMarkerFormat/flashx.textLayout.formats:IListMarkerFormat:afterContent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[ListMarkerFormat#afterContent]]></copy>
</method>
<method name='beforeContent' fullname='flashx.textLayout.formats:IListMarkerFormat/flashx.textLayout.formats:IListMarkerFormat:beforeContent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[ListMarkerFormat#beforeContent]]></copy>
</method>
<method name='content' fullname='flashx.textLayout.formats:IListMarkerFormat/flashx.textLayout.formats:IListMarkerFormat:content/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[ListMarkerFormat#content]]></copy>
</method>
<method name='counterIncrement' fullname='flashx.textLayout.formats:IListMarkerFormat/flashx.textLayout.formats:IListMarkerFormat:counterIncrement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[ListMarkerFormat#counterIncrement]]></copy>
</method>
<method name='counterReset' fullname='flashx.textLayout.formats:IListMarkerFormat/flashx.textLayout.formats:IListMarkerFormat:counterReset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[ListMarkerFormat#counterReset]]></copy>
</method>
<method name='suffix' fullname='flashx.textLayout.formats:IListMarkerFormat/flashx.textLayout.formats:IListMarkerFormat:suffix/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[ListMarkerFormat#suffix]]></copy>
</method>
<classRec name='TabStopFormat' fullname='flashx.textLayout.formats:TabStopFormat' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\TabStopFormat.as' namespace='flashx.textLayout.formats' access='public' baseclass='Object' interfaces='flashx.textLayout.formats:ITabStopFormat' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The TabStopFormat class represents the properties of a tab stop in a paragraph. You can set the <code>TextLayoutFormat.tabstops</code> property to an array of TabStopFormat objects.

	 ]]></description>
<includeExample><![CDATA[examples\TabStopFormat_example.as -noswf

	 ]]></includeExample>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TabElement 

	 ]]></see>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat#tabStops

	 ]]></see>
</classRec>
<method name='TabStopFormat' fullname='flashx.textLayout.formats:TabStopFormat/TabStopFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='initialValues' param_types='flashx.textLayout.formats:ITabStopFormat' param_defaults='null' result_type='*'>
<description><![CDATA[

		 Creates a new TabStopFormat object. All settings are empty or, optionally, are initialized from the

		 supplied <code>initialValues</code> object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[initialValues optional instance from which to copy initial values.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[#defaultFormat

		 ]]></see>
</method>
<method name='apply' fullname='flashx.textLayout.formats:TabStopFormat/apply' isStatic='false' isFinal='false' isOverride='false'  param_names='incoming' param_types='flashx.textLayout.formats:ITabStopFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Replaces property values in this TabStopFormat object with the values of properties that are set in

		 the <code>incoming</code> ITabStopFormat instance. Properties that are <code>undefined</code> in the <code>incoming</code>

		 ITabStopFormat instance are not changed in this object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[incoming instance whose property values are applied to this TabStopFormat object.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='concatInheritOnly' fullname='flashx.textLayout.formats:TabStopFormat/concatInheritOnly' isStatic='false' isFinal='false' isOverride='false'  param_names='incoming' param_types='flashx.textLayout.formats:ITabStopFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Concatenates the values of properties in the <code>incoming</code> ITabStopFormat instance

		 with the values of this TabStopFormat object. In this (the receiving) TabStopFormat object, properties whose values are <code>FormatValue.INHERIT</code>,

		 and inheriting properties whose values are <code>undefined</code> will get new values from the <code>incoming</code> object.

		 All other property values will remain unmodified.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[incoming instance from which values are concatenated.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue#INHERIT

		 

		 ]]></see>
</method>
<method name='concat' fullname='flashx.textLayout.formats:TabStopFormat/concat' isStatic='false' isFinal='false' isOverride='false'  param_names='incoming' param_types='flashx.textLayout.formats:ITabStopFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Concatenates the values of properties in the <code>incoming</code> ITabStopFormat instance

		 with the values of this TabStopFormat object. In this (the receiving) TabStopFormat object, properties whose values are <code>FormatValue.INHERIT</code>,

		 and inheriting properties whose values are <code>undefined</code> will get new values from the <code>incoming</code> object.

		 Non-inheriting properties whose values are <code>undefined</code> will get their default values.

		 All other property values will remain unmodified.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[incoming instance from which values are concatenated.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue#INHERIT

		 

		 ]]></see>
</method>
<method name='copy' fullname='flashx.textLayout.formats:TabStopFormat/copy' isStatic='false' isFinal='false' isOverride='false'  param_names='values' param_types='flashx.textLayout.formats:ITabStopFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Copies TabStopFormat settings from the <code>values</code> ITabStopFormat instance into this TabStopFormat object.

		 If <code>values</code> is <code>null</code>, this TabStopFormat object is initialized with undefined values for all properties.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[values optional instance from which to copy values.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='getStyle' fullname='flashx.textLayout.formats:TabStopFormat/getStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleName' param_types='String' param_defaults='undefined' result_type='*'>
<description><![CDATA[

		 Return the value of the style specified by the <code>styleProp</code> parameter

		 which specifies the style name.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[styleProp The name of the style whose value is to be retrieved.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[The value of the specified style.  The type varies depending on the type of the style being

		 accessed.  Returns <code>undefined</code> if the style is not set.

		 

		 ]]></return>
</method>
<method name='isEqual' fullname='flashx.textLayout.formats:TabStopFormat/isEqual' isStatic='true' isFinal='false' isOverride='false'  param_names='p1;p2' param_types='flashx.textLayout.formats:ITabStopFormat;flashx.textLayout.formats:ITabStopFormat' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Compares properties in ITabStopFormat instance <code>p1</code> with properties in ITabStopFormat instance <code>p2</code>

		 and returns <code>true</code> if all properties match.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[p1 instance to compare to <code>p2</code>.

		 ]]></param>
<param><![CDATA[p2 instance to compare to <code>p1</code>.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if all properties match, false otherwise.

		 

		 ]]></return>
</method>
<method name='removeClashing' fullname='flashx.textLayout.formats:TabStopFormat/removeClashing' isStatic='false' isFinal='false' isOverride='false'  param_names='incoming' param_types='flashx.textLayout.formats:ITabStopFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets properties in this TabStopFormat object to <code>undefined</code> if they do not match those in the

		 <code>incoming</code> ITabStopFormat instance.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[incoming instance against which to compare this TabStopFormat object's property values.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='removeMatching' fullname='flashx.textLayout.formats:TabStopFormat/removeMatching' isStatic='false' isFinal='false' isOverride='false'  param_names='incoming' param_types='flashx.textLayout.formats:ITabStopFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets properties in this TabStopFormat object to <code>undefined</code> if they match those in the <code>incoming</code>

		 ITabStopFormat instance.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[incoming instance against which to compare this TabStopFormat object's property values.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='setStyle' fullname='flashx.textLayout.formats:TabStopFormat/setStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleName;value' param_types='String;*' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Set the value of the style specified by the <code>styleProp</code> parameter

		 which specifies the style name to <code>value</code>.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[styleProp The name of the style whose value is to be set.

		 ]]></param>
<param><![CDATA[value The value to set.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='alignment' fullname='flashx.textLayout.formats:TabStopFormat/alignment/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The tab alignment for this tab stop. 

		 <p>Legal values are TabAlignment.START, TabAlignment.CENTER, TabAlignment.END, TabAlignment.DECIMAL, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of TabAlignment.START.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[FormatValue#INHERIT

		 

		 ]]></see>
<see><![CDATA[flash.text.engine.TabAlignment

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='decimalAlignmentToken' fullname='flashx.textLayout.formats:TabStopFormat/decimalAlignmentToken/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The alignment token to be used if the alignment is DECIMAL.

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='defaultFormat' fullname='flashx.textLayout.formats:TabStopFormat/defaultFormat/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITabStopFormat'>
<description><![CDATA[

		 Returns a TabStopFormat object with default settings.

		 This function always returns the same object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[a singleton instance of ITabStopFormat that is populated with default values.

		 

		 ]]></return>
</method>
<method name='description' fullname='flashx.textLayout.formats:TabStopFormat/tlf_internal:description/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Property descriptions accessible by name. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='emptyTabStopFormat' fullname='flashx.textLayout.formats:TabStopFormat/tlf_internal:emptyTabStopFormat/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITabStopFormat'>
<description><![CDATA[

		 Returns an ITabStopFormat instance with all properties set to <code>undefined</code>.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<private><![CDATA[]]></private>
</method>
<method name='position' fullname='flashx.textLayout.formats:TabStopFormat/position/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The position of the tab stop, in pixels, relative to the start edge of the column.

		 <p>Legal values are numbers from 0 to 10000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of 0.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[FormatValue#INHERIT

		 

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='alignment' fullname='flashx.textLayout.formats:TabStopFormat/alignment/set' isStatic='false' isFinal='false' isOverride='false'  param_names='newValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='decimalAlignmentToken' fullname='flashx.textLayout.formats:TabStopFormat/decimalAlignmentToken/set' isStatic='false' isFinal='false' isOverride='false'  param_names='newValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='position' fullname='flashx.textLayout.formats:TabStopFormat/position/set' isStatic='false' isFinal='false' isOverride='false'  param_names='newValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<field name='_alignment' fullname='flashx.textLayout.formats:TabStopFormat/private:_alignment' type='' isStatic='false' isConst='false' >
</field>
<field name='_decimalAlignmentToken' fullname='flashx.textLayout.formats:TabStopFormat/private:_decimalAlignmentToken' type='' isStatic='false' isConst='false' >
</field>
<field name='_defaults' fullname='flashx.textLayout.formats:TabStopFormat/private:_defaults' type='flashx.textLayout.formats:TabStopFormat' isStatic='true' isConst='false' >
</field>
<field name='_description' fullname='flashx.textLayout.formats:TabStopFormat/private:_description' type='Object' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_emptyTabStopFormat' fullname='flashx.textLayout.formats:TabStopFormat/private:_emptyTabStopFormat' type='flashx.textLayout.formats:ITabStopFormat' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_position' fullname='flashx.textLayout.formats:TabStopFormat/private:_position' type='' isStatic='false' isConst='false' >
</field>
<field name='alignmentProperty' fullname='flashx.textLayout.formats:TabStopFormat/alignmentProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='decimalAlignmentTokenProperty' fullname='flashx.textLayout.formats:TabStopFormat/decimalAlignmentTokenProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='positionProperty' fullname='flashx.textLayout.formats:TabStopFormat/positionProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='ListMarkerFormat' fullname='flashx.textLayout.formats:ListMarkerFormat' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\formats\ListMarkerFormat.as' namespace='flashx.textLayout.formats' access='public' baseclass='flashx.textLayout.formats:TextLayoutFormat' interfaces='flashx.textLayout.formats:IListMarkerFormat' isFinal='false' isDynamic='false' >
<description><![CDATA[ Defines the marker format in a ListItemElement.

	  

	  ]]></description>
<langversion><![CDATA[3.0 

	 

	  ]]></langversion>
<playerversion><![CDATA[Flash 10

	  ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	  ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.ListItemElement

	 ]]></see>
</classRec>
<method name='ListMarkerFormat' fullname='flashx.textLayout.formats:ListMarkerFormat/ListMarkerFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='initialValues' param_types='flashx.textLayout.formats:IListMarkerFormat' param_defaults='null' result_type='*'>
<description><![CDATA[ Create a ListMarkerFormat that holds all the properties possible for a list marker.  

		 

		  ]]></description>
<langversion><![CDATA[3.0 

	 	 ]]></langversion>
<param><![CDATA[initialValues An optional instance from which to copy initial values.

		 

		  ]]></param>
<playerversion><![CDATA[Flash 10

		  ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		  ]]></playerversion>
</method>
<method name='apply' fullname='flashx.textLayout.formats:ListMarkerFormat/apply' isStatic='false' isFinal='false' isOverride='true'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='concatInheritOnly' fullname='flashx.textLayout.formats:ListMarkerFormat/concatInheritOnly' isStatic='false' isFinal='false' isOverride='true'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='concat' fullname='flashx.textLayout.formats:ListMarkerFormat/concat' isStatic='false' isFinal='false' isOverride='true'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='copy' fullname='flashx.textLayout.formats:ListMarkerFormat/copy' isStatic='false' isFinal='false' isOverride='true'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createCounterContentProperty' fullname='flashx.textLayout.formats:ListMarkerFormat/tlf_internal:createCounterContentProperty' isStatic='true' isFinal='false' isOverride='false'  param_names='nameValue;defaultValue;inherited;categories' param_types='String;String;Boolean;Vector$String' param_defaults='undefined;undefined;undefined;undefined' result_type='flashx.textLayout.property:Property'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createCounterIncrementProperty' fullname='flashx.textLayout.formats:ListMarkerFormat/tlf_internal:createCounterIncrementProperty' isStatic='true' isFinal='false' isOverride='false'  param_names='nameValue;defaultValue;inherited;categories' param_types='String;String;Boolean;Vector$String' param_defaults='undefined;undefined;undefined;undefined' result_type='flashx.textLayout.property:Property'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createCounterResetProperty' fullname='flashx.textLayout.formats:ListMarkerFormat/tlf_internal:createCounterResetProperty' isStatic='true' isFinal='false' isOverride='false'  param_names='nameValue;defaultValue;inherited;categories' param_types='String;String;Boolean;Vector$String' param_defaults='undefined;undefined;undefined;undefined' result_type='flashx.textLayout.property:Property'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createListMarkerFormat' fullname='flashx.textLayout.formats:ListMarkerFormat/createListMarkerFormat' isStatic='true' isFinal='false' isOverride='false'  param_names='initialValues' param_types='Object' param_defaults='undefined' result_type='flashx.textLayout.formats:ListMarkerFormat'>
<description><![CDATA[

		 Creates a new ListMarkerFormat object. All settings are empty or, optionally, are initialized from the

		 supplied <code>initialValues</code> object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[initialValues Optional instance from which to copy initial values. If the object is of type IListMarkerFormat or ITextLayoutFormat, the values are copied.  

		 Otherwise the <code>initialValues</code> parameter is treated like a Dictionary or Object and iterated over.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[The new ListMarkerFormat object.

		 

		 ]]></return>
<see><![CDATA[#defaultFormat

		 ]]></see>
</method>
<method name='removeClashing' fullname='flashx.textLayout.formats:ListMarkerFormat/removeClashing' isStatic='false' isFinal='false' isOverride='true'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeMatching' fullname='flashx.textLayout.formats:ListMarkerFormat/removeMatching' isStatic='false' isFinal='false' isOverride='true'  param_names='incoming' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setLMFStyle' fullname='flashx.textLayout.formats:ListMarkerFormat/private:setLMFStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp;newValue' param_types='flashx.textLayout.property:Property;*' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setStyle' fullname='flashx.textLayout.formats:ListMarkerFormat/setStyle' isStatic='false' isFinal='false' isOverride='true'  param_names='styleProp;newValue' param_types='String;*' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='afterContent' fullname='flashx.textLayout.formats:ListMarkerFormat/afterContent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Specifies a string that goes after the marker. Default is the empty string. 

		 ]]></description>
<langversion><![CDATA[3.0	

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='beforeContent' fullname='flashx.textLayout.formats:ListMarkerFormat/beforeContent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Specifies a string that goes before the marker. Default is the empty string. 

		 ]]></description>
<langversion><![CDATA[3.0	

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='content' fullname='flashx.textLayout.formats:ListMarkerFormat/content/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls the content of the marker. 

		 <p>Legal values for this string are:

		 <ul>

		 	<li><code>none</code> - No marker.</li>

		 	<li><code>counter(ordered)</code> - Display the marker.</li>

		 	<li><code>counter(ordered,ListStyleType)</code> - Display the marker but change the listStyleType to the specified value.</li>

		 	<li><code>counters(ordered)</code> - Starting from the top-most parent ListElement creating a string of values of the ordered counter in each counters specified listStyleType separated by the suffix for each.  This is used for outline number - for example I.1., I.2. etc.</li>

		 	<li><code>counters(ordered,"&lt;string&gt;")</code> - Similar to the previous value, except the suffix for each ordered counter is replaced by &lt;string&gt;.</li>

		 	<li><code>counters(ordered,"&lt;string&gt;",ListStyleType)</code> - Similar to the previous value, except each counter's <code>listStyleType</code> is replaced with the specified value.</li>

		 </ul>

		 </p>

		 <p>If undefined, the default vaule of this property is <code>"counter(ordered)"</code>.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='counterIncrement' fullname='flashx.textLayout.formats:ListMarkerFormat/counterIncrement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls incrementing the value of the counter.  

		 <p>Legal values for this string are:

		  <ul>

		 		<li><code>none</code> - No increment.</li>

		 		<li><code>ordered</code> - Increment the counter by one.</li>

		 		<li><code>ordered <i>integer</i></code> - Increment the counter by <code><i>integer</i></code>.</li>

		  </ul>

		 </p>

		 <p>If undefined, the default vaule of this property is <code>"ordered 1"</code>.</p>

		 <p>Note: The <code>counterIncrement</code> property is applied before the <code>counterReset</code> property.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='counterReset' fullname='flashx.textLayout.formats:ListMarkerFormat/counterReset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls resetting the value of the counter.  

		 <p>Legal values for this property are:

		  <ul>

		 	  <li><code>none</code> - No reset.</li>

		 	  <li><code>ordered</code> - Reset the counter to zero.</li>

		 	  <li><code>ordered <i>integer</i></code> - Reset the counter to <code><i>integer</i></code>.</li>

		  </ul>

		 </p>

		 <p>If <code>undefined</code>, the default value of this property is "none".</p>

		 <p>Note: The <code>counterReset</code> property is applied before the <code>counterIncrement</code> property.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='description' fullname='flashx.textLayout.formats:ListMarkerFormat/tlf_internal:description/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Property descriptions accessible by name. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='suffix' fullname='flashx.textLayout.formats:ListMarkerFormat/suffix/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Controls the application of the suffix in the generated text in the ListItemElement.

		 <p>Legal values are:

		 <ul>

		   <li><code>flashx.textLayout.formats.Suffix.NONE</code> - No suffix.</li>		 

		   <li><code>flashx.textLayout.formats.Suffix.AUTO</code> - Follow CSS rules for adding a suffix.</li>

		 </ul> 

		 </p>

		 <p>Default value is <code>Suffix.AUTO</code>.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.Suffix

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='afterContent' fullname='flashx.textLayout.formats:ListMarkerFormat/afterContent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='beforeContent' fullname='flashx.textLayout.formats:ListMarkerFormat/beforeContent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='content' fullname='flashx.textLayout.formats:ListMarkerFormat/content/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='*'>
</method>
<method name='counterIncrement' fullname='flashx.textLayout.formats:ListMarkerFormat/counterIncrement/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='*'>
</method>
<method name='counterReset' fullname='flashx.textLayout.formats:ListMarkerFormat/counterReset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='*'>
</method>
<method name='suffix' fullname='flashx.textLayout.formats:ListMarkerFormat/suffix/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<field name='_description' fullname='flashx.textLayout.formats:ListMarkerFormat/private:_description' type='Object' isStatic='true' isConst='false' >
</field>
<field name='_lmfDescription' fullname='flashx.textLayout.formats:ListMarkerFormat/private:_lmfDescription' type='Object' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='afterContentProperty' fullname='flashx.textLayout.formats:ListMarkerFormat/tlf_internal:afterContentProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='beforeContentProperty' fullname='flashx.textLayout.formats:ListMarkerFormat/tlf_internal:beforeContentProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='contentProperty' fullname='flashx.textLayout.formats:ListMarkerFormat/tlf_internal:contentProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='counterIncrementProperty' fullname='flashx.textLayout.formats:ListMarkerFormat/tlf_internal:counterIncrementProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='counterResetProperty' fullname='flashx.textLayout.formats:ListMarkerFormat/tlf_internal:counterResetProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='suffixProperty' fullname='flashx.textLayout.formats:ListMarkerFormat/tlf_internal:suffixProperty' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<interfaceRec name='IFlowComposer' fullname='flashx.textLayout.compose:IFlowComposer' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\compose\IFlowComposer.as' namespace='flashx.textLayout.compose' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 IFlowComposer defines the interface for managing the layout and display of a text flow.

	 

	 <p>Text flows displayed with a flow composer implementation can be dynamic and interactive.

	 A flow composer manages one or more display controller. Each controller is associated with

	 a display object container (such as a Sprite) through which the lines created for the text

	 flow are ultimately displayed. The following diagram illustrates the relationship between TextFlow,

	 IFlowComposer, ContainerController, and DisplayObjectContainer objects:</p>

	 

	 <p><img src="../../../images/textLayout_singleController.gif" alt="IFlowComposer"></img></p>

	 
	 <p>A flow composer calculates which portion of a text flow fits in each container and 

	 adds the appropriate text lines to the container's display object. The IFlowComposer interface 

	 defines separate methods for layout calculations and for updating the display. IFlowComposer also 

	 defines methods for incrementally composing and updating a text flow. These methods can be used 

	 to avoid blocking the user interface when updating long text flows.</p>

	 

	 <p>In addition to managing text composition and display, a flow composer controls which container has focus, 

	 manages the display of the selection highlight (which can cross container boundaries), and provides

	 direct access to all the TextLine objects in the flow.</p>

	 

	 <p>To use an IFlowComposer implementation, assign an instance of that implementation to the

	 <code>flowComposer</code> property of a TextFlow object. Call the <code>updateAllControllers()</code>

	 method to lay out and display the text in the containers attached to the flow composer.</p>

	 

	 <p><b>Note:</b> For simple, static text flows, you can also use the one of the text line factory classes.

	 These factory classes will typically create lines with less overhead than a flow composer, but do not

	 support editing, dynamic changes, or user interaction.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.container.ContainerController ContainerController

	 ]]></see>
<see><![CDATA[FlowComposerBase

	 ]]></see>
<see><![CDATA[StandardFlowComposer

	 ]]></see>
<see><![CDATA[flashx.textLayout.elements.TextFlow TextFlow

	 ]]></see>
<see><![CDATA[flashx.textLayout.factory.StringTextLineFactory StringTextLineFactory

	 ]]></see>
<see><![CDATA[flashx.textLayout.factory.TextFlowTextLineFactory TextFlowTextLineFactory

	 ]]></see>
</interfaceRec>
<method name='addControllerAt' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:addControllerAt' isStatic='false' isFinal='false' isOverride='false'  param_names='controller;index' param_types='flashx.textLayout.container:ContainerController;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 Adds a controller to this IFlowComposer instance at the specified index.

		 
		 <p>The list of controllers is 0-based (the first controller has an index of 0).</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[controller The ContainerController object to add.

		 ]]></param>
<param><![CDATA[index A numeric index that specifies the position in the controller list at which to insert the ContainerController object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='addController' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:addController' isStatic='false' isFinal='false' isOverride='false'  param_names='controller' param_types='flashx.textLayout.container:ContainerController' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Adds a controller to this IFlowComposer instance.

		 
		 <p>The container is added to the end of the container list.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[controller The ContainerController object to add.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='composeToController' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:composeToController' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='unknown' result_type='Boolean'>
<description><![CDATA[ 

		 Composes the content of the root element up to and including the container at the specified index.

		 

		 <p>If the contents of any container up to and including the container at the specified

		 index has changed, the method returns <code>true</code>. If <code>index</code> is greater than the number of controllers

		 (or not specified), then all containers are composed.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<param><![CDATA[controllerIndex compose at least up to this container in the TextFlow. If controllerIndex is greater than the number of controllers, compose to the end of the last container.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[true if anything changed.

		 
		 ]]></return>
<see><![CDATA[#updateAllControllers()

	 	 ]]></see>
<see><![CDATA[#updateToController()

		 ]]></see>
</method>
<method name='composeToPosition' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:composeToPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition' param_types='int' param_defaults='unknown' result_type='Boolean'>
<description><![CDATA[ 

		 Composes the content of the root element up to the specified position.

		 

		 <p>If the contents of any container up to and including the container holding the content at the specified

		 position has changed, the method returns <code>true</code>. If <code>absolutePosition</code> is greater than the length of the TextFlow 

		 (or not specified), then the entire flow is composed.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<param><![CDATA[absolutePosition compose at least up to this position in the TextFlow. By default or if absolutePosition is past the end of the flow compose to the end of the flow.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[true if anything changed.

		 
		 ]]></return>
<see><![CDATA[#updateAllControllers()

	 	 ]]></see>
<see><![CDATA[#updateToController()

		 ]]></see>
</method>
<method name='compose' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:compose' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Calculates how many lines are necessary to display the content in the root element of the flow and the positions of these 

		 lines in the flow's display containers.

		 

		 <p>Implementations of this method should not update the display, but should save the results so that subsequent

		 calls to <code>compose()</code> or <code>updateAllControllers()</code> do not perform an additional recomposition

		 if the flow content has not changed.</p>

		 

		 <p>If the contents of any container have changed, the method must return <code>true</code>.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[true if anything changed.

		 
		 ]]></return>
<see><![CDATA[#updateAllControllers()

	 	 ]]></see>
<see><![CDATA[#updateToController()

		 ]]></see>
</method>
<method name='damage' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:damage' isStatic='false' isFinal='false' isOverride='false'  param_names='startPosition;damageLength;damageType' param_types='int;int;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ Mark lines as damaged and needing a recompose.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[damageStart beginning of range to damage

		 ]]></param>
<param><![CDATA[damageLength number of characters to damage

		 ]]></param>
<param><![CDATA[damageType type of damage.  One of flashx.textLayout.compose.FlowDamageType

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.FlowDamageType

		 ]]></see>
</method>
<method name='findControllerIndexAtPosition' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:findControllerIndexAtPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition;preferPrevious' param_types='int;Boolean' param_defaults='undefined;false' result_type='int'>
<description><![CDATA[ 

		 Returns the index of the controller containing the content at the specified position. 

		 

		 <p>A position can be considered to be the division between two characters or other elements of a text flow. If 

		 the value in <code>absolutePosition</code> is a position between the last character of one 

		 container and the first character of the next, then the preceding container is returned if

		 the <code>preferPrevious</code> parameter is set to <code>true</code> and the later container is returned if

		 the <code>preferPrevious</code> parameter is set to <code>false</code>.</p>

		 
		 <p>The method must return -1 if the content at the specified position is not in any container or is outside

		 the range of positions in the text flow.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[absolutePosition The position of the content for which the container index is sought.

		 ]]></param>
<param><![CDATA[preferPrevious Specifies which container index to return when the position is between the last element in 

		 one container and the first element in the next.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the index of the container controller or -1 if not found.

		 
		 ]]></return>
</method>
<method name='findLineAtPosition' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:findLineAtPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition;preferPrevious' param_types='int;Boolean' param_defaults='undefined;false' result_type='flashx.textLayout.compose:TextFlowLine'>
<description><![CDATA[ 

		Returns the TextFlowLine object containing the content at the specified position.

		
		<p>A position can be considered to be the division between two characters or other elements of a text flow. If 

		the value in <code>absolutePosition</code> is a position between the last element of one 

		line and the first element of the next, then the preceding line is returned if

		the <code>preferPrevious</code> parameter is set to <code>true</code> and the later line is returned if

		the <code>preferPrevious</code> parameter is set to <code>false</code>.</p>

		

		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<param><![CDATA[absolutePosition	The position of the content for which you want the TextFlowLine object.

		]]></param>
<param><![CDATA[preferPrevious		Specifies which line to return when the position is between the last element of 

		one line and the first element of the next.

		
		]]></param>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<return><![CDATA[the TextFlowLine containing the content at the specified position, or null if not found.

		
		]]></return>
</method>
<method name='findLineIndexAtPosition' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:findLineIndexAtPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition;preferPrevious' param_types='int;Boolean' param_defaults='undefined;false' result_type='int'>
<description><![CDATA[ 

		 Returns the sequential line number of the TextFlowLine object that contains the content at the specified position. 

		 

		 <p>The number of the first line is 0 and the number of the last line is equal to the number of lines minus one.

		 If the position specified in <code>absolutePosition</code> is past the end of the text flow, this method must return

		 the number that will be assigned to the next new line added to the text flow (which is equal to the number of current lines).</p>

		 
		 <p>A position can be considered to be the division between two characters or other elements of a text flow. If 

		 the value in <code>absolutePosition</code> is a position between the last line of one 

		 container and the first line of the next, then the preceding container is returned if

		 the <code>preferPrevious</code> parameter is set to <code>true</code> and the later container is returned if

		 the <code>preferPrevious</code> parameter is set to <code>false</code>.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[absolutePosition	The position of the content for which you want the text line.

		 ]]></param>
<param><![CDATA[preferPrevious Specifies which container index to return when the position is between the last line in 

		 one container and the first line in the next.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the index of the text line at the specified position. If not found, treats as past the end and returns the

		 number of lines.

		 	 

		 ]]></return>
</method>
<method name='getControllerAt' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:getControllerAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.container:ContainerController'>
<description><![CDATA[ 

		 Returns the ContainerController object at the specified index. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[index The index of the ContainerController object to return.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the ContainerController object at the specified position.

		 
		 ]]></return>
</method>
<method name='getControllerIndex' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:getControllerIndex' isStatic='false' isFinal='false' isOverride='false'  param_names='controller' param_types='flashx.textLayout.container:ContainerController' param_defaults='undefined' result_type='int'>
<description><![CDATA[ 

		 Returns the index of the specified ContainerController object. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[controller A reference to the ContainerController object to find.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the index of the specified ContainerController object or -1 if the controller is not attached to this flow composer.

		 
		 ]]></return>
</method>
<method name='getLineAt' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:getLineAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.compose:TextFlowLine'>
<description><![CDATA[ 

		 Returns the line with the specified line number. 

		 
		 <p>The list of lines is numbered from zero to the number of lines minus one. If the value in <code>index</code>

		 is outside the bounds of the list of lines, then this function returns <code>null</code>.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[index		The line number of the TextFlowLine object to return.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the TextFlowLine with the specified line number, or <code>null</code>, if not found.

		 
		 ]]></return>
</method>
<method name='interactionManagerChanged' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:interactionManagerChanged' isStatic='false' isFinal='false' isOverride='false'  param_names='newInteractionManager' param_types='flashx.textLayout.edit:ISelectionManager' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Called by the TextFlow when the interaction manager changes. 

		 

		 <p>Implementations of IFlowComposer should update event listeners and properties

		 that reference the interaction manager.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[newInteractionManager The new ISelectionManager instance.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='isDamaged' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:isDamaged' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ 

		 Indicates whether any TextFlowLine objects between the beginning of the flow and the line containing the content at 

		 the specified position are marked as damaged. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[absolutePosition the last position in the area of interest

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[true if any of the TextFlowLine objects from the start of the flow up to the line containing the content at

		 <code>absolutePosition</code> are marked as damaged.

		 
		 ]]></return>
</method>
<method name='removeAllControllers' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:removeAllControllers' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Removes all controllers from this IFlowComposer instance. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='removeControllerAt' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:removeControllerAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Removes the controller at the specified index from this IFlowComposer instance.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[index The index of the ContainerController object to remove.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='removeController' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:removeController' isStatic='false' isFinal='false' isOverride='false'  param_names='controller' param_types='flashx.textLayout.container:ContainerController' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Removes a controller from this IFlowComposer instance. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[controller The ContainerController instance to remove.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='setFocus' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:setFocus' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition;preferPrevious' param_types='int;Boolean' param_defaults='undefined;false' result_type='void'>
<description><![CDATA[ 

		 Sets the focus to the container that contains the location specified by the <code>absolutePosition</code>

		 parameter. 

		 
		 <p>It is the responsibility of the implementation to define what setting the focus means. For example, an 

		 implementation could use the built-in <code>focus</code> property of the Stage object (as long as the

		 containers were InteractiveObjects) or the implementation could manage the focus some other way.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[absolutePosition Specifies the position in the text flow of the container to receive focus.

		 ]]></param>
<param><![CDATA[preferPrevious If true and the position is the before the first character in a container, sets focus to the end of 

		  the previous container.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flash.display.Stage#focus

		 

		 ]]></see>
</method>
<method name='setRootElement' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:setRootElement' isStatic='false' isFinal='false' isOverride='false'  param_names='newRootElement' param_types='flashx.textLayout.elements:ContainerFormattedElement' param_defaults='undefined' result_type='void'>
</method>
<method name='updateAllControllers' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:updateAllControllers' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Composes the content of the root element and updates the display.  

		 
		 <p>Text layout is typically conducted in two phases: composition and display. In the composition phase,

		 the flow composer calculates how many lines are necesary to display the content as well as the position of these 

		 lines in the flow's display containers. In the display phase, 

		 the flow composer updates the display object children of its containers. The <code>updateAllControllers()</code>

		 method is expected to carry out both phases. An efficient implementation will keep track of changes to content

		 so that a full cycle of composition and display is only performed when necessary.</p>

		 

		 <p>This method updates all the text lines and the display list immediately and synchronously.</p>

		 
		 <p>If the contents of any container is changed, the method must return <code>true</code>.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[true if anything changed.

		 
		 ]]></return>
</method>
<method name='updateLengths' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:updateLengths' isStatic='false' isFinal='false' isOverride='false'  param_names='startPosition;deltaLength' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ Update the lengths in the lines to maintain mapping to the TextFlow. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[startPosition beginning of change in length

		 ]]></param>
<param><![CDATA[deltaLength change in number of characters.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='updateToController' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:updateToController' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='unknown' result_type='Boolean'>
<description><![CDATA[ 

		 Composes and updates the display up to and including the container at the specified index.

		 

		 <p>The <code>updateToController()</code> method is expected to both compose the content and 

		 update the display so that all containers up to and including the container at the specified index are current.

		 For example, if you have a chain of twenty containers and specify an index of 10, 

		 <code>updateToController()</code> must ensures that the first through the tenth (indexes 0-9) containers

		 are composed and displayed. Composition can stop at that point. If <code>controllerIndex</code> 

		 is -1 (or not specified), then all containers should be updated.</p>

		 
		 <p>This method updates all the text lines and the display list immediately and synchronously.</p>

		 

		 <p>If the contents of any container is changed, the method must return <code>true</code>.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<param><![CDATA[controllerIndex index of the last container to update, by default will update all containers

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[true if anything changed.

		 
		 ]]></return>
</method>
<method name='composing' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:composing/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 True, if the flow composer is currently performing a composition operation.

		  

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='damageAbsoluteStart' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:damageAbsoluteStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The first invalid position in the root element, as an absolute position from the start of the flow.

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='numControllers' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:numControllers/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The number of containers assigned to this IFlowComposer instance. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='numLines' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:numLines/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The total number of lines composed in the flow.  By default TLF does not compose the entire flow and this value may be innacruate.

		 Use composeToPosition to get all lines composed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='rootElement' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:rootElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:ContainerFormattedElement'>
<description><![CDATA[ 

		 The root element associated with this IFlowComposer instance. 

		 

		 <p>Only a TextFlow object can be a root element.</p>

		  

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.ContainerFormattedElement ContainerFormattedElement

		 

		 ]]></see>
</method>
<method name='swfContext' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:swfContext/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:ISWFContext'>
<description><![CDATA[ 

		 The ISWFContext instance to be used for calls that must be made in a specific SWF context  

		 

		 <p>Implementations of IFlowComposer should allow this property to be set so that users

		 of the interface can create lines in a different SWF context than the one containing the 

		 implementation.  A default implementation of ISWFContext should also be supplied.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.elements.ISWFContext ISWFContext

		 ]]></see>
</method>
<method name='swfContext' fullname='flashx.textLayout.compose:IFlowComposer/flashx.textLayout.compose:IFlowComposer:swfContext/set' isStatic='false' isFinal='false' isOverride='false'  param_names='creator' param_types='flashx.textLayout.compose:ISWFContext' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='ISWFContext' fullname='flashx.textLayout.compose:ISWFContext' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\compose\ISWFContext.as' namespace='flashx.textLayout.compose' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The ISWFContext interface allows a SWF file to share its context with other SWF files that load it.

	 An application that loads a SWF file of type ISWFContext can call methods in the context of the loaded SWF file.

	 The main usage is for calling the FTE TextLine creation methods.

	 

	 <p>There are two reasons for an application to use 

	 this interface to control TextLine creation: </p>

	 <ul>

	   <li><strong>Reuse an embedded font: </strong> if an application wants to use a font embedded in a loaded SWF file,

	 the application can access the font if a TextLine

	 is created in the context of the loaded SWF file.</li>

	   <li><strong>Reuse existing TextLine instances</strong>: reusing existing TextLine instances can result in faster recompose times. 

	 TLF reuses existing TextLine instances internally. TLF reuses 

	 a TextLine by calling <code>TextBlock.recreateTextLine()</code>

	 instead of <code>TextBlock.createTextLine()</code> when TLF recognizes that a TextLine is extant.</li>

	 </ul>

	 
	 

	 <p>Your application may have additional TextLine instances that can be reused. 

	 To manually reuse existing TextLine instances:</p>

	 <ol>

	   <li>trap calls to <code>TextBlock.createTextLine()</code>, then</li>

	   <li>call <code>TextBlock.recreateTextLine()</code> with the extant TextLine instance instead 

	 of <code>TextBlock.createTextLine()</code>.</li>

	 </ol>

	 <p>Please note, however, that the <code>TextBlock.recreateTextLine()</code> is available

	 only in Flash Player 10.1 and later.</p>

	 
	 ]]></description>
<includeExample><![CDATA[examples\EmbeddedFontLineCreator.as -noswf

	 ]]></includeExample>
<includeExample><![CDATA[examples\FontConsumer.as -noswf

	 

	 ]]></includeExample>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextBlock#createTextLine()

	 ]]></see>
<see><![CDATA[flash.text.engine.TextBlock#recreateTextLine()

	 ]]></see>
</interfaceRec>
<method name='callInContext' fullname='flashx.textLayout.compose:ISWFContext/flashx.textLayout.compose:ISWFContext:callInContext' isStatic='false' isFinal='false' isOverride='false'  param_names='fn;thisArg;argArray;returns' param_types='Function;Object;Array;Boolean' param_defaults='undefined;undefined;undefined;true' result_type='*'>
<description><![CDATA[

	      A way to call a method in a client controlled context.

	     
	      ]]></description>
<langversion><![CDATA[3.0

	      ]]></langversion>
<param><![CDATA[fn The function or method to call

	      ]]></param>
<param><![CDATA[thisArg The this pointer for the function

	      ]]></param>
<param><![CDATA[argArray The arguments for the function

	      ]]></param>
<param><![CDATA[returns If true, the function returns a value

	     
	      ]]></param>
<playerversion><![CDATA[Flash 10

	      ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	     ]]></playerversion>
<return><![CDATA[Whatever the function returns, if anything.

	     
	      ]]></return>
<see><![CDATA[Function#apply()

	

	      ]]></see>
</method>
<classRec name='FlowDamageType' fullname='flashx.textLayout.compose:FlowDamageType' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\compose\FlowDamageType.as' namespace='flashx.textLayout.compose' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	  The FlowDamageType class is an enumeration class that defines types of damage for damage methods and events.

	 When the text content is updated, these changes are reflected in the TextLines after an update. TextLines are 

	 marked with a flag that specifies whether or not they are valid, or up to date with all text

	 changes. When the text is first updated, all lines are marked valid or static. After the text has been changed,

	 and before the next update, lines will be marked with a FlowDamageType that specifies what about the line

	 is invalid. Once the update is done, lines will again be marked as valid or static.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<field name='GEOMETRY' fullname='flashx.textLayout.compose:FlowDamageType/GEOMETRY' type='String' isStatic='true' isConst='true' defaultValue='geometry' >
<description><![CDATA[

		 Value is used to set the <code>validity</code> property if the line has been invalidated by other lines 

		 moving around. For instance, a line above may have been created, so this line needs to be moved down.

		 The text line might or might not need recreating at the next compose operation. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.TextFlowLine#validity

	 	 ]]></see>
</field>
<field name='INVALID' fullname='flashx.textLayout.compose:FlowDamageType/INVALID' type='String' isStatic='true' isConst='true' defaultValue='invalid' >
<description><![CDATA[ 

		 Value is used to set the <code>validity</code> property if the text content has changed since the

		 line was originally created. Invalid lines needs to be recreated before they are used for selection

		 or to display the text content changes.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.TextFlowLine#validity	 	 ]]></see>
</field>
<classRec name='FlowComposerBase' fullname='flashx.textLayout.compose:FlowComposerBase' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\compose\FlowComposerBase.as' namespace='flashx.textLayout.compose' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The FlowComposerBase class is the base class for Text Layout Framework flow composer classes, which control the 

	 composition of text lines in ContainerController objects.

	 
	 <p>FlowComposerBase is a utility class that implements methods and properties that are common

	 to several types of flow composer. Application code would not typically instantiate or use this class

	 (unless extending it to create a custom flow composer).</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow#flowComposer

	 ]]></see>
<metadata>
	<Exclude owner='flashx.textLayout.compose:FlowComposerBase' name='checkFirstDamage' kind='method' >
	</Exclude>
</metadata>
<metadata>
	<Exclude owner='flashx.textLayout.compose:FlowComposerBase' name='debugCheckTextFlowLines' kind='method' >
	</Exclude>
</metadata>
<metadata>
	<Exclude owner='flashx.textLayout.compose:FlowComposerBase' name='lines' kind='property' >
	</Exclude>
</metadata>
<metadata>
	<Exclude owner='flashx.textLayout.compose:FlowComposerBase' name='addLine' kind='method' >
	</Exclude>
</metadata>
<metadata>
	<Exclude owner='flashx.textLayout.compose:FlowComposerBase' name='initializeLines' kind='method' >
	</Exclude>
</metadata>
</classRec>
<method name='FlowComposerBase' fullname='flashx.textLayout.compose:FlowComposerBase/FlowComposerBase' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='addLine' fullname='flashx.textLayout.compose:FlowComposerBase/addLine' isStatic='false' isFinal='false' isOverride='false'  param_names='newLine;workIndex' param_types='flashx.textLayout.compose:TextFlowLine;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 add a new line 

		 Add a new line to the list of composed lines for the frame. Lines are sorted

		 by the start location, and each line has a span. The start of the next line

		 has to match the start of the previous line + the span of the previous line.

		 The last line needs to end at the end of the text. Therefore, when we add a

		 new line, we may need to adjust the span and/or start locations of other lines 

		 in the text.

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computeBaseSWFContext' fullname='flashx.textLayout.compose:FlowComposerBase/tlf_internal:computeBaseSWFContext' isStatic='true' isFinal='false' isOverride='false'  param_names='context' param_types='flashx.textLayout.compose:ISWFContext' param_defaults='undefined' result_type='flashx.textLayout.compose:ISWFContext'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='damage' fullname='flashx.textLayout.compose:FlowComposerBase/damage' isStatic='false' isFinal='false' isOverride='false'  param_names='startPosition;damageLength;damageType' param_types='int;int;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IFlowComposer#damage()

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='finalizeLinesAfterCompose' fullname='flashx.textLayout.compose:FlowComposerBase/protected:finalizeLinesAfterCompose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Make sure that there is a TextFlowLine for all the content - even if compose has stopped early. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='findLineAtPosition' fullname='flashx.textLayout.compose:FlowComposerBase/findLineAtPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition;preferPrevious' param_types='int;Boolean' param_defaults='undefined;false' result_type='flashx.textLayout.compose:TextFlowLine'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IFlowComposer#findLineAtPosition()

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='findLineIndexAtPosition' fullname='flashx.textLayout.compose:FlowComposerBase/findLineIndexAtPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition;preferPrevious' param_types='int;Boolean' param_defaults='undefined;false' result_type='int'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IFlowComposer#findLineIndexAtPosition()

		 

		 ]]></copy>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='getLineAt' fullname='flashx.textLayout.compose:FlowComposerBase/getLineAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.compose:TextFlowLine'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IFlowComposer#getLineAt()

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='initializeLines' fullname='flashx.textLayout.compose:FlowComposerBase/protected:initializeLines' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Initialize the lines for the TextFlow.  Creates a single TextFlowLine with no content. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='isDamaged' fullname='flashx.textLayout.compose:FlowComposerBase/isDamaged' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IFlowComposer#isDamaged()

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='updateLengths' fullname='flashx.textLayout.compose:FlowComposerBase/updateLengths' isStatic='false' isFinal='false' isOverride='false'  param_names='startPosition;deltaLength' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IFlowComposer#updateLengths()

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='damageAbsoluteStart' fullname='flashx.textLayout.compose:FlowComposerBase/damageAbsoluteStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 The absolute position immediately preceding the first element in the text

		 flow that requires composition and updating.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='lines' fullname='flashx.textLayout.compose:FlowComposerBase/lines/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[ Returns the array of lines. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='numLines' fullname='flashx.textLayout.compose:FlowComposerBase/numLines/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#numLines 

		 
		 ]]></copy>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='swfContext' fullname='flashx.textLayout.compose:FlowComposerBase/swfContext/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:ISWFContext'>
<description><![CDATA[ 

		The ISWFContext instance used to make FTE calls as needed. 

		
		<p>By default, the ISWFContext implementation is this FlowComposerBase object.

		Applications can provide a custom implementation to use fonts

		embedded in a different SWF file or to cache and reuse text lines.</p>

		

		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.ISWFContext

		

		]]></see>
</method>
<method name='textFlow' fullname='flashx.textLayout.compose:FlowComposerBase/textFlow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[ 

		The TextFlow object to which this flow composer is attached. 

		
		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow

		
		]]></see>
</method>
<method name='swfContext' fullname='flashx.textLayout.compose:FlowComposerBase/swfContext/set' isStatic='false' isFinal='false' isOverride='false'  param_names='context' param_types='flashx.textLayout.compose:ISWFContext' param_defaults='undefined' result_type='void'>
</method>
<field name='_damageAbsoluteStart' fullname='flashx.textLayout.compose:FlowComposerBase/protected:_damageAbsoluteStart' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ Absolute start of the damage area -- first character in the flow that is dirty and needs to be recomposed. ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_lines' fullname='flashx.textLayout.compose:FlowComposerBase/private:_lines' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_swfContext' fullname='flashx.textLayout.compose:FlowComposerBase/protected:_swfContext' type='flashx.textLayout.compose:ISWFContext' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_textFlow' fullname='flashx.textLayout.compose:FlowComposerBase/protected:_textFlow' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='VerticalJustifier' fullname='flashx.textLayout.compose:VerticalJustifier' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\compose\VerticalJustifier.as' namespace='flashx.textLayout.compose' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='applyVerticalAlignmentToColumn' fullname='flashx.textLayout.compose:VerticalJustifier/applyVerticalAlignmentToColumn' isStatic='true' isFinal='false' isOverride='false'  param_names='controller;verticalAlignAttr;lines;startIndex;numLines;beginFloatIndex;endFloatIndex' param_types='flashx.textLayout.container:ContainerController;String;Array;int;int;int;int' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[ Vertical justify the subset of lines from startIndext to startIndex to numLines according to the rule specified by verticalAlignAttr.  

		 The assumption is that they are all the lines in a single column of cont. 

		 ]]></description>
<return><![CDATA[adjustment applied to the first line in the column.

		 ]]></return>
<see><![CDATA[text.formats.VerticalAlign

		 ]]></see>
</method>
<classRec name='TextFlowLineLocation' fullname='flashx.textLayout.compose:TextFlowLineLocation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\compose\TextFlowLineLocation.as' namespace='flashx.textLayout.compose' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	 The TextFlowLineLocation class is an enumeration class that defines constants for specifying the location

	 of a line within a paragraph.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[ParagraphElement

	 ]]></see>
<see><![CDATA[TextFlow

	 ]]></see>
</classRec>
<field name='FIRST' fullname='flashx.textLayout.compose:TextFlowLineLocation/FIRST' type='uint' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[ Specifies the first line in a paragraph. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='LAST' fullname='flashx.textLayout.compose:TextFlowLineLocation/LAST' type='uint' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[ Specifies the last line in a paragraph.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='MIDDLE' fullname='flashx.textLayout.compose:TextFlowLineLocation/MIDDLE' type='uint' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[ Specifies a middle line in a paragraph - neither the first nor the last line. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='ONLY' fullname='flashx.textLayout.compose:TextFlowLineLocation/ONLY' type='uint' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[ Specifies both the first and last lines in a paragraph.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<interfaceRec name='IVerticalJustificationLine' fullname='flashx.textLayout.compose:IVerticalJustificationLine' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\compose\IVerticalJustificationLine.as' namespace='flashx.textLayout.compose' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The IVerticalJustificationLine interface defines the methods and properties required to allow

	 the vertical justification of text lines.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</interfaceRec>
<method name='ascent' fullname='flashx.textLayout.compose:IVerticalJustificationLine/flashx.textLayout.compose:IVerticalJustificationLine:ascent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flash.text.engine.TextLine#ascent

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='descent' fullname='flashx.textLayout.compose:IVerticalJustificationLine/flashx.textLayout.compose:IVerticalJustificationLine:descent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flash.text.engine.TextLine#descent

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='height' fullname='flashx.textLayout.compose:IVerticalJustificationLine/flashx.textLayout.compose:IVerticalJustificationLine:height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The height of the line in pixels.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='x' fullname='flashx.textLayout.compose:IVerticalJustificationLine/flashx.textLayout.compose:IVerticalJustificationLine:x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 The horizontal position of the line relative to its container, expressed as the offset in pixels from the 

		 left of the container.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[#y

		 ]]></see>
</method>
<method name='y' fullname='flashx.textLayout.compose:IVerticalJustificationLine/flashx.textLayout.compose:IVerticalJustificationLine:y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 The vertical position of the line relative to its container, expressed as the offset in pixels from the top 

		 of the container.

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[#x

		 ]]></see>
</method>
<method name='x' fullname='flashx.textLayout.compose:IVerticalJustificationLine/flashx.textLayout.compose:IVerticalJustificationLine:x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Set X location for the line.  Used only during vertical justification. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='y' fullname='flashx.textLayout.compose:IVerticalJustificationLine/flashx.textLayout.compose:IVerticalJustificationLine:y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Set Y location for the line.  Used only during vertical justification. ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='TextLineRecycler' fullname='flashx.textLayout.compose:TextLineRecycler' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\compose\TextLineRecycler.as' namespace='flashx.textLayout.compose' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The TextLineRecycler class provides support for recycling of TextLines.  Some player versions support a recreateTextLine.  Passing TextLines

	 to the recycler makes them available for reuse.  This improves Player performance.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='addLineForReuse' fullname='flashx.textLayout.compose:TextLineRecycler/addLineForReuse' isStatic='true' isFinal='false' isOverride='false'  param_names='textLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Add a TextLine to the pool for reuse. TextLines for reuse should have null userData and null parent. 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='emptyReusableLineCache' fullname='flashx.textLayout.compose:TextLineRecycler/tlf_internal:emptyReusableLineCache' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getLineForReuse' fullname='flashx.textLayout.compose:TextLineRecycler/getLineForReuse' isStatic='true' isFinal='false' isOverride='false'  result_type='flash.text.engine:TextLine'>
<description><![CDATA[

		 Return a TextLine from the pool for reuse. 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='textLineRecyclerEnabled' fullname='flashx.textLayout.compose:TextLineRecycler/textLineRecyclerEnabled/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Controls if the TLF recycler enabled.   It can only be enabled in 10.1 or later players.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='textLineRecyclerEnabled' fullname='flashx.textLayout.compose:TextLineRecycler/textLineRecyclerEnabled/set' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='_textLineRecyclerCanBeEnabled' fullname='flashx.textLayout.compose:TextLineRecycler/private:_textLineRecyclerCanBeEnabled' type='Boolean' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_textLineRecyclerEnabled' fullname='flashx.textLayout.compose:TextLineRecycler/private:_textLineRecyclerEnabled' type='Boolean' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='reusableLineCache' fullname='flashx.textLayout.compose:TextLineRecycler/private:reusableLineCache' type='flash.utils:Dictionary' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='StandardFlowComposer' fullname='flashx.textLayout.compose:StandardFlowComposer' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\compose\StandardFlowComposer.as' namespace='flashx.textLayout.compose' access='public' baseclass='flashx.textLayout.compose:FlowComposerBase' interfaces='flashx.textLayout.compose:IFlowComposer' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	The StandardFlowComposer class provides a standard composer and container manager. 

	
	<p>Each call to <code>compose()</code> or <code>updateAllControllers()</code> normalizes the text flow as a first step.  

	The normalizing process checks the parts of the TextFlow object that were modified and takes the following steps:

	<ol>

	<li> Deletes empty FlowLeafElement and SubParagraphGroupElement objects.</li>

	<li> Merges sibling spans that have identical attributes.</li>

	<li> Adds an empty paragraph if a flow is empty.</li>

 	</ol>

 	</p>

	
	<p>To use a StandardFlowComposer, assign it to the

	<code>flowComposer</code> property of a TextFlow object. Call the <code>updateAllControllers()</code>

	method to lay out and display the text in the containers attached to the flow composer.</p>

	

	<p><b>Note:</b> For simple, static text flows, you can also use the one of the text line factory classes.

	These factory classes will typically create lines with less overhead than a flow composer, but do not

	support editing, dynamic changes, or user interaction.</p>

	

	]]></description>
<includeExample><![CDATA[examples\StandardFlowComposer_ClassExample.as -noswf

	]]></includeExample>
<langversion><![CDATA[3.0

	]]></langversion>
<playerversion><![CDATA[Flash 10

	]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow#flowComposer

	]]></see>
</classRec>
<method name='StandardFlowComposer' fullname='flashx.textLayout.compose:StandardFlowComposer/StandardFlowComposer' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ 

		Creates a StandardFlowComposer object. 

		
		<p>To use an StandardFlowComposer object, assign it to the

		<code>flowComposer</code> property of a TextFlow object. Call the <code>updateAllControllers()</code>

		method to lay out and display the text in the containers attached to the flow composer.</p>

		

		]]></description>
<includeExample><![CDATA[examples\StandardFlowComposer_constructor.as -noswf

		

		]]></includeExample>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='addControllerAt' fullname='flashx.textLayout.compose:StandardFlowComposer/addControllerAt' isStatic='false' isFinal='false' isOverride='false'  param_names='controller;index' param_types='flashx.textLayout.container:ContainerController;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#addControllerAt()

		 
		 ]]></copy>
<includeExample><![CDATA[examples\StandardFlowComposer_addControllerAt.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='addController' fullname='flashx.textLayout.compose:StandardFlowComposer/addController' isStatic='false' isFinal='false' isOverride='false'  param_names='controller' param_types='flashx.textLayout.container:ContainerController' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#addController()

		 
		 ]]></copy>
<includeExample><![CDATA[examples\StandardFlowComposer_addController.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='areShapesDamaged' fullname='flashx.textLayout.compose:StandardFlowComposer/tlf_internal:areShapesDamaged' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='attachAllContainers' fullname='flashx.textLayout.compose:StandardFlowComposer/tlf_internal:attachAllContainers' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='callTheComposer' fullname='flashx.textLayout.compose:StandardFlowComposer/tlf_internal:callTheComposer' isStatic='false' isFinal='false' isOverride='false'  param_names='composeToPosition;controllerEndIndex' param_types='int;int' param_defaults='undefined;undefined' result_type='flashx.textLayout.container:ContainerController'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearCompositionResults' fullname='flashx.textLayout.compose:StandardFlowComposer/tlf_internal:clearCompositionResults' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Clear whatever computed values are left from the last composition, in the flow composer and

		 in each of its controllers. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearContainerAccessibilityImplementation' fullname='flashx.textLayout.compose:StandardFlowComposer/private:clearContainerAccessibilityImplementation' isStatic='true' isFinal='false' isOverride='false'  param_names='cont' param_types='flash.display:Sprite' param_defaults='undefined' result_type='void'>
</method>
<method name='composeToController' fullname='flashx.textLayout.compose:StandardFlowComposer/composeToController' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='unknown' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#composeToController()

		 
		 ]]></copy>
<includeExample><![CDATA[examples\StandardFlowComposer_composeToController.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='composeToPosition' fullname='flashx.textLayout.compose:StandardFlowComposer/composeToPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition' param_types='int' param_defaults='unknown' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#composeToPosition()

		 
		 ]]></copy>
<includeExample><![CDATA[examples\StandardFlowComposer_composeToPosition.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='compose' fullname='flashx.textLayout.compose:StandardFlowComposer/compose' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Calculates how many lines are necessary to display the content in the root element of the flow and the positions of these 

		 lines in the flow's display containers.

		 

		 <p>The <code>compose()</code> method only composes content if it has changed since the last composition operation. 

		 Results are saved so that subsequent

		 calls to <code>compose()</code> or <code>updateAllControllers()</code> do not perform an additional recomposition

		 if the flow content has not changed.</p>

		 

		 <p>If the contents of any container have changed, the method returns <code>true</code>.</p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\StandardFlowComposer_compose.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[true if anything changed.

		 
		 ]]></return>
<see><![CDATA[#updateAllControllers()

	 	 ]]></see>
<see><![CDATA[#updateToController()

		 ]]></see>
</method>
<method name='createBackgroundManager' fullname='flashx.textLayout.compose:StandardFlowComposer/tlf_internal:createBackgroundManager' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:BackgroundManager'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='detachAllContainers' fullname='flashx.textLayout.compose:StandardFlowComposer/tlf_internal:detachAllContainers' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='fastRemoveController' fullname='flashx.textLayout.compose:StandardFlowComposer/private:fastRemoveController' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ Removes a trailing controller with no content without doing any damage ]]></description>
</method>
<method name='findControllerIndexAtPosition' fullname='flashx.textLayout.compose:StandardFlowComposer/findControllerIndexAtPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition;preferPrevious' param_types='int;Boolean' param_defaults='undefined;false' result_type='int'>
<description><![CDATA[ 

		 Returns the index of the controller containing the content at the specified position. 

		 

		 <p>A position can be considered to be the division between two characters or other elements of a text flow. If 

		 the value in <code>absolutePosition</code> is a position between the last character of one 

		 container and the first character of the next, then the preceding container is returned if

		 the <code>preferPrevious</code> parameter is set to <code>true</code> and the later container is returned if

		 the <code>preferPrevious</code> parameter is set to <code>false</code>.</p>

		 
		 <p>The method returns -1 if the content at the specified position is not in any container or is outside

		 the range of positions in the text flow.</p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\StandardFlowComposer_findControllerIndexAtPosition.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[absolutePosition The position of the content for which the container index is sought.

		 ]]></param>
<param><![CDATA[preferPrevious Specifies which container index to return when the position is between the last element in 

		 one container and the first element in the next.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the index of the container controller or -1 if not found.

		 
		 ]]></return>
</method>
<method name='getAbsoluteStart' fullname='flashx.textLayout.compose:StandardFlowComposer/getAbsoluteStart' isStatic='false' isFinal='false' isOverride='false'  param_names='controller' param_types='flashx.textLayout.container:ContainerController' param_defaults='undefined' result_type='int'>
<description><![CDATA[ 

		 Returns the absolute position of the first content element in the specified ContainerController object.

		 
		 <p>A position is calculated by counting the division between two characters or other elements of a text flow. 

		 The position preceding the first element of a flow is zero. An absolute position is the position

		 counting from the beginning of the flow.</p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\StandardFlowComposer_getAbsoluteStart.as -noswf

		  

		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[controller A ContainerController object associated with this flow composer.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the position before the first character or graphic in the ContainerController.

		 
		 ]]></return>
</method>
<method name='getBPDirectionScrollPosition' fullname='flashx.textLayout.compose:StandardFlowComposer/private:getBPDirectionScrollPosition' isStatic='true' isFinal='false' isOverride='false'  param_names='bp;cont' param_types='String;flashx.textLayout.container:ContainerController' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='getComposeState' fullname='flashx.textLayout.compose:StandardFlowComposer/tlf_internal:getComposeState' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:ComposeState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getControllerAt' fullname='flashx.textLayout.compose:StandardFlowComposer/getControllerAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.container:ContainerController'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#getControllerAt()  

		 

		 ]]></copy>
<includeExample><![CDATA[examples\StandardFlowComposer_getControllerAt.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='getControllerIndex' fullname='flashx.textLayout.compose:StandardFlowComposer/getControllerIndex' isStatic='false' isFinal='false' isOverride='false'  param_names='controller' param_types='flashx.textLayout.container:ContainerController' param_defaults='undefined' result_type='int'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#getControllerIndex()  

		 
		 ]]></copy>
<includeExample><![CDATA[examples\StandardFlowComposer_getControllerIndex.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<player><![CDATA[version AIR 1.5

	 	 ]]></player>
</method>
<method name='interactionManagerChanged' fullname='flashx.textLayout.compose:StandardFlowComposer/interactionManagerChanged' isStatic='false' isFinal='false' isOverride='false'  param_names='newInteractionManager' param_types='flashx.textLayout.edit:ISelectionManager' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Called by the TextFlow when the interaction manager changes. 

		 

		 <p>This function is called automatically. Your code does not typically need to call this

		 method. Classes that extend StandardFlowComposer can override this method to update

		 event listeners and other properties that depend on the interaction manager.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[newInteractionManager The new ISelectionManager instance.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='internalCompose' fullname='flashx.textLayout.compose:StandardFlowComposer/private:internalCompose' isStatic='false' isFinal='false' isOverride='false'  param_names='composeToPosition;composeToControllerIndex' param_types='int;int' param_defaults='-1;-1' result_type='flashx.textLayout.container:ContainerController'>
<description><![CDATA[ Bottleneck function for all types of compose. Does the work of compose, no matter how it is called. ]]></description>
<return><![CDATA[first controller with changed shapes

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='isDamaged' fullname='flashx.textLayout.compose:StandardFlowComposer/isDamaged' isStatic='false' isFinal='false' isOverride='true'  param_names='absolutePosition' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='preCompose' fullname='flashx.textLayout.compose:StandardFlowComposer/protected:preCompose' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns true if composition is necessary, false otherwise ]]></description>
</method>
<method name='releaseComposeState' fullname='flashx.textLayout.compose:StandardFlowComposer/tlf_internal:releaseComposeState' isStatic='false' isFinal='false' isOverride='false'  param_names='state' param_types='flashx.textLayout.compose:ComposeState' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeAllControllers' fullname='flashx.textLayout.compose:StandardFlowComposer/removeAllControllers' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#removeAllControllers()

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='removeControllerAt' fullname='flashx.textLayout.compose:StandardFlowComposer/removeControllerAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#removeControllerAt()

		 
		 ]]></copy>
<includeExample><![CDATA[examples\StandardFlowController_removeControllerAt.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='removeController' fullname='flashx.textLayout.compose:StandardFlowComposer/removeController' isStatic='false' isFinal='false' isOverride='false'  param_names='controller' param_types='flashx.textLayout.container:ContainerController' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#removeController()

		 
		 ]]></copy>
<includeExample><![CDATA[examples\StandardFlowController_removeController.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='setFocus' fullname='flashx.textLayout.compose:StandardFlowComposer/setFocus' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition;leanLeft' param_types='int;Boolean' param_defaults='undefined;false' result_type='void'>
<description><![CDATA[ 

		 Sets the focus to the container that contains the location specified by the <code>absolutePosition</code>

		 parameter. 

		 
		 <p>The StandardFlowComposer calls the <code>setFocus()</code> method of the ContainerController object

		 containing the specified text flow position.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[absolutePosition Specifies the position in the text flow of the container to receive focus.

		 ]]></param>
<param><![CDATA[preferPrevious If true and the position is before the first character in a container, sets focus to the end of 

		  the previous container.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flash.display.Stage#focus

		 

		 ]]></see>
</method>
<method name='setRootElement' fullname='flashx.textLayout.compose:StandardFlowComposer/setRootElement' isStatic='false' isFinal='false' isOverride='false'  param_names='newRootElement' param_types='flashx.textLayout.elements:ContainerFormattedElement' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#setRootElement()

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='updateAllControllers' fullname='flashx.textLayout.compose:StandardFlowComposer/updateAllControllers' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Composes the content of the root element and updates the display.  

		 
		 <p>Text layout is conducted in two phases: composition and display. In the composition phase,

		 the flow composer calculates how many lines are necessary to display the content as well as the position of these 

		 lines in the flow's display containers. In the display phase, 

		 the flow composer updates the display object children of its containers. The <code>updateAllControllers()</code>

		 method initiates both phases in sequence. The StandardFlowComposer keeps track of changes to content

		 so that a full cycle of composition and display is only performed when necessary.</p>

		 

		 <p>This method updates all the text lines and the display list immediately and synchronously.</p>

		 
		 <p>If the contents of any container is changed, the method returns <code>true</code>.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[true if anything changed.

		 
		 ]]></return>
</method>
<method name='updateCompositionShapes' fullname='flashx.textLayout.compose:StandardFlowComposer/private:updateCompositionShapes' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='updateToController' fullname='flashx.textLayout.compose:StandardFlowComposer/updateToController' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='unknown' result_type='Boolean'>
<description><![CDATA[ 

		 Composes and updates the display up to and including the container at the specified index.

		 

		 <p>The <code>updateToController()</code> method composes the content and 

		 updates the display of all containers up to and including the container at the specified index.

		 For example, if you have a chain of 20 containers and specify an index of 10, 

		 <code>updateToController()</code> ensures that the first through the tenth (indexes 0-9) 

		 containers are composed and displayed. Composition stops at that point. If <code>controllerIndex</code> 

		 is -1 (or not specified), then all containers are updated.</p>

		 
		 <p>This method updates all the text lines and the display list immediately and synchronously.</p>

		 

		 <p>If the contents of any container is changed, the method returns <code>true</code>.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<param><![CDATA[controllerIndex index of the last container to update (by default updates all containers)

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[<code>true</code>, if anything changed.

		 
		 ]]></return>
</method>
<method name='composing' fullname='flashx.textLayout.compose:StandardFlowComposer/composing/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 True, if the flow composer is currently performing a composition operation. 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='numControllers' fullname='flashx.textLayout.compose:StandardFlowComposer/numControllers/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#numControllers

		
		]]></copy>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='rootElement' fullname='flashx.textLayout.compose:StandardFlowComposer/rootElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:ContainerFormattedElement'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IFlowComposer#rootElement

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<field name='_composing' fullname='flashx.textLayout.compose:StandardFlowComposer/private:_composing' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_controllerList' fullname='flashx.textLayout.compose:StandardFlowComposer/private:_controllerList' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_rootElement' fullname='flashx.textLayout.compose:StandardFlowComposer/tlf_internal:_rootElement' type='flashx.textLayout.elements:ContainerFormattedElement' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='lastBPDirectionScrollPosition' fullname='flashx.textLayout.compose:StandardFlowComposer/private:lastBPDirectionScrollPosition' type='Number' isStatic='false' isConst='false' defaultValue='-Infinity' >
</field>
<classRec name='TextFlowLine' fullname='flashx.textLayout.compose:TextFlowLine' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\compose\TextFlowLine.as' namespace='flashx.textLayout.compose' access='public' baseclass='Object' interfaces='flashx.textLayout.compose:IVerticalJustificationLine' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	 The TextFlowLine class represents a single line of text in a text flow.

	 

	 <p>Use this class to access information about how a line of text has been composed: its position, 

	 height, width, and so on. When the text flow (TextFlow) is modified, the lines immediately before and at the  

	 site of the modification are marked as invalid because they need to be recomposed. Lines after

	 the site of the modification might not be damaged immediately, but they might be regenerated once the

	 text is composed. You can access a TextFlowLine that has been damaged, but any values you access

	 reflect the old state of the TextFlow. When the TextFlow is recomposed, it generates new lines and you can 

	 get the new line for a given position by calling <code>TextFlow.flowComposer.findLineAtPosition()</code>.</p>

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='TextFlowLine' fullname='flashx.textLayout.compose:TextFlowLine/TextFlowLine' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine;paragraph;outerTargetWidth;lineOffset;absoluteStart;numChars' param_types='flash.text.engine:TextLine;flashx.textLayout.elements:ParagraphElement;Number;Number;int;int' param_defaults='undefined;undefined;0;0;0;0' result_type='*'>
<description><![CDATA[ Constructor - creates a new TextFlowLine instance. 

		  <p><strong>Note</strong>: No client should call this. It's exposed for writing your own composer.</p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<param><![CDATA[textLine The TextLine display object to use for this line.

		 ]]></param>
<param><![CDATA[paragraph The paragraph (ParagraphElement) in which to place the line.

		 ]]></param>
<param><![CDATA[outerTargetWidth The width the line is composed to, excluding indents.

		 ]]></param>
<param><![CDATA[lineOffset The line's offset in pixels from the appropriate container inset (as dictated by paragraph direction and container block progression), prior to alignment of lines in the paragraph. 

		 ]]></param>
<param><![CDATA[absoluteStart	The character position in the text flow at which the line begins.

		 ]]></param>
<param><![CDATA[numChars	The number of characters in the line.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextLine

	 	 ]]></see>
<see><![CDATA[flashx.textLayout.elements.ParagraphElement

	 	 ]]></see>
<see><![CDATA[#absoluteStart

	 	 ]]></see>
</method>
<method name='adjustEndElementForBidi' fullname='flashx.textLayout.compose:TextFlowLine/private:adjustEndElementForBidi' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine;begIdx;endIdx;begAtomIndex;direction' param_types='flash.text.engine:TextLine;int;int;int;String' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='cacheLineBounds' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:cacheLineBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='wmode;bndsx;bndsy;bndsw;bndsh' param_types='String;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='calculateSelectionBounds' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:calculateSelectionBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine;rectArray;begIdx;endIdx;blockProgression;heightAndAdj' param_types='flash.text.engine:TextLine;Array;int;int;String;Array' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearDamage' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:clearDamage' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computePointSelectionRectangle' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:computePointSelectionRectangle' isStatic='false' isFinal='false' isOverride='false'  param_names='idx;container;prevLine;nextLine;constrainSelRect' param_types='int;flash.display:DisplayObject;flashx.textLayout.compose:TextFlowLine;flashx.textLayout.compose:TextFlowLine;Boolean' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='flash.geom:Rectangle'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='constrainRectToColumn' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:constrainRectToColumn' isStatic='true' isFinal='false' isOverride='false'  param_names='tf;rect;columnRect;hScrollPos;vScrollPos;compositionWidth;compositionHeight' param_types='flashx.textLayout.elements:TextFlow;flash.geom:Rectangle;flash.geom:Rectangle;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='convertLineRectToContainer' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:convertLineRectToContainer' isStatic='false' isFinal='false' isOverride='false'  param_names='rect;constrainShape' param_types='flash.geom:Rectangle;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createAdornments' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:createAdornments' isStatic='false' isFinal='false' isOverride='false'  param_names='blockProgression;elem;elemStart;textLine;numberLine' param_types='String;flashx.textLayout.elements:FlowLeafElement;int;flash.text.engine:TextLine;flash.text.engine:TextLine' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createNumberLine' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:createNumberLine' isStatic='true' isFinal='false' isOverride='false'  param_names='listItemElement;curParaElement;swfContext;totalStartIndent' param_types='flashx.textLayout.elements:ListItemElement;flashx.textLayout.elements:ParagraphElement;flashx.textLayout.compose:ISWFContext;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='flash.text.engine:TextLine'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createSelectionRect' fullname='flashx.textLayout.compose:TextFlowLine/private:createSelectionRect' isStatic='true' isFinal='false' isOverride='false'  param_names='selObj;color;x;y;width;height' param_types='flash.display:Shape;uint;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='flash.display:DisplayObject'>
<description><![CDATA[ Create a rectangle for selection ]]></description>
</method>
<method name='createSelectionShapes' fullname='flashx.textLayout.compose:TextFlowLine/private:createSelectionShapes' isStatic='false' isFinal='false' isOverride='false'  param_names='selObj;selFormat;container;begIdx;endIdx;prevLine;nextLine' param_types='flash.display:Shape;flashx.textLayout.edit:SelectionFormat;flash.display:DisplayObject;int;int;flashx.textLayout.compose:TextFlowLine;flashx.textLayout.compose:TextFlowLine' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='createShapeY' fullname='flashx.textLayout.compose:TextFlowLine/private:createShapeY' isStatic='false' isFinal='false' isOverride='false'  param_names='bp' param_types='String' param_defaults='undefined' result_type='Number'>
</method>
<method name='createShape' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:createShape' isStatic='false' isFinal='false' isOverride='false'  param_names='bp;textLine' param_types='String;flash.text.engine:TextLine' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='damage' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:damage' isStatic='false' isFinal='false' isOverride='false'  param_names='damageType' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='findNumberLine' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:findNumberLine' isStatic='true' isFinal='false' isOverride='false'  param_names='textLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='flash.text.engine:TextLine'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getBounds' fullname='flashx.textLayout.compose:TextFlowLine/getBounds' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Rectangle'>
<description><![CDATA[ 

		 Returns the bounds of the line as a rectangle.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[a rectangle that represents the boundaries of the line.

		 
		 ]]></return>
</method>
<method name='getCSSLineBox' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:getCSSLineBox' isStatic='false' isFinal='false' isOverride='false'  param_names='bp;elem;elemStart;swfContext;effectiveListMarkerFormat;numberLine' param_types='String;flashx.textLayout.elements:FlowLeafElement;int;flashx.textLayout.compose:ISWFContext;flashx.textLayout.formats:ITextLayoutFormat;flash.text.engine:TextLine' param_defaults='undefined;undefined;undefined;undefined;null;null' result_type='flash.geom:Rectangle'>
<description><![CDATA[ ]]></description>
<return><![CDATA[A rectangle representing the line box. Top and Bottom are relative to the Roman baseline. Left and Right are ignored.

		 May return null, for example, if the line only contains a float.

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='getFlag' fullname='flashx.textLayout.compose:TextFlowLine/private:getFlag' isStatic='false' isFinal='false' isOverride='false'  param_names='mask' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='getLineLeading' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:getLineLeading' isStatic='false' isFinal='false' isOverride='false'  param_names='bp;elem;elemStart' param_types='String;flashx.textLayout.elements:FlowLeafElement;int' param_defaults='undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getLineTypographicAscent' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:getLineTypographicAscent' isStatic='false' isFinal='false' isOverride='false'  param_names='elem;elemStart;textLine' param_types='flashx.textLayout.elements:FlowLeafElement;int;flash.text.engine:TextLine' param_defaults='undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getListEndIndent' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:getListEndIndent' isStatic='true' isFinal='false' isOverride='false'  param_names='numberLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getNumberLineBackground' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:getNumberLineBackground' isStatic='true' isFinal='false' isOverride='false'  param_names='numberLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='flashx.textLayout.elements:BackgroundManager'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getNumberLineInsideLineWidth' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:getNumberLineInsideLineWidth' isStatic='true' isFinal='false' isOverride='false'  param_names='numberLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getNumberLineListStylePosition' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:getNumberLineListStylePosition' isStatic='true' isFinal='false' isOverride='false'  param_names='numberLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getNumberLineParagraphDirection' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:getNumberLineParagraphDirection' isStatic='true' isFinal='false' isOverride='false'  param_names='numberLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getNumberLineSpanFormat' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:getNumberLineSpanFormat' isStatic='true' isFinal='false' isOverride='false'  param_names='numberLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getRomanSelectionHeightAndVerticalAdjustment' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:getRomanSelectionHeightAndVerticalAdjustment' isStatic='false' isFinal='false' isOverride='false'  param_names='prevLine;nextLine' param_types='flashx.textLayout.compose:TextFlowLine;flashx.textLayout.compose:TextFlowLine' param_defaults='undefined;undefined' result_type='Array'>
<description><![CDATA[ ]]></description>
<return><![CDATA[An array with two elements

		 [0] height

		 [1] vertical adjustment to counter 'align bottom' behavior. The remainder of the selection code assumes selection shape

		 bottom is to be aligned with line descent. If this is not the case, vertical adjustment is set to an appropriate non-zero value. 

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='getSelectionShapesCacheEntry' fullname='flashx.textLayout.compose:TextFlowLine/private:getSelectionShapesCacheEntry' isStatic='false' isFinal='false' isOverride='false'  param_names='begIdx;endIdx;prevLine;nextLine;blockProgression' param_types='int;int;flashx.textLayout.compose:TextFlowLine;flashx.textLayout.compose:TextFlowLine;String' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='TextFlowLine.as$209:SelectionCache'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getTextLineInternal' fullname='flashx.textLayout.compose:TextFlowLine/private:getTextLineInternal' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text.engine:TextLine'>
</method>
<method name='getTextLineTypographicAscent' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:getTextLineTypographicAscent' isStatic='true' isFinal='false' isOverride='false'  param_names='textLine;elem;elemStart;textLineEnd' param_types='flash.text.engine:TextLine;flashx.textLayout.elements:FlowLeafElement;int;int' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getTextLine' fullname='flashx.textLayout.compose:TextFlowLine/getTextLine' isStatic='false' isFinal='false' isOverride='false'  param_names='forceValid' param_types='Boolean' param_defaults='false' result_type='flash.text.engine:TextLine'>
<description><![CDATA[ 

		 Returns the <code>flash.text.engine.TextLine</code> object for this line, which might be recreated 

		 if it does not exist due to garbage collection. Set <code>forceValid</code> to <code>true</code>

		 to cause the TextLine to be regenerated. Returns null if the TextLine cannot be recreated.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[forceValid	if true, the TextLine is regenerated, if it exists but is invalid.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[object for this line or <code>null</code> if the TextLine object cannot be 

		 recreated.

		 
		 ]]></return>
<see><![CDATA[flash.text.engine.TextLine TextLine

		 ]]></see>
</method>
<method name='hasLineBounds' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:hasLineBounds' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hiliteBlockSelection' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:hiliteBlockSelection' isStatic='false' isFinal='false' isOverride='false'  param_names='selObj;selFormat;container;begIdx;endIdx;prevLine;nextLine' param_types='flash.display:Shape;flashx.textLayout.edit:SelectionFormat;flash.display:DisplayObject;int;int;flashx.textLayout.compose:TextFlowLine;flashx.textLayout.compose:TextFlowLine' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<param><![CDATA[begIdx absolute index of start of selection on this line.

		 ]]></param>
<param><![CDATA[endIdx absolute index of end of selection on this line.

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='hilitePointSelection' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:hilitePointSelection' isStatic='false' isFinal='false' isOverride='false'  param_names='selFormat;idx;container;prevLine;nextLine' param_types='flashx.textLayout.edit:SelectionFormat;int;flash.display:DisplayObject;flashx.textLayout.compose:TextFlowLine;flashx.textLayout.compose:TextFlowLine' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<param><![CDATA[idx absolute index of the point selection.

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='initializeNumberLinePosition' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:initializeNumberLinePosition' isStatic='true' isFinal='false' isOverride='false'  param_names='numberLine;listItemElement;curParaElement;totalWidth' param_types='flash.text.engine:TextLine;flashx.textLayout.elements:ListItemElement;flashx.textLayout.elements:ParagraphElement;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialize' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:initialize' isStatic='false' isFinal='false' isOverride='false'  param_names='paragraph;outerTargetWidth;lineOffset;absoluteStart;numChars;textLine' param_types='flashx.textLayout.elements:ParagraphElement;Number;Number;int;int;flash.text.engine:TextLine' param_defaults='undefined;0;0;0;0;null' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='isAtomBidi' fullname='flashx.textLayout.compose:TextFlowLine/private:isAtomBidi' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine;elementIdx;direction' param_types='flash.text.engine:TextLine;int;String' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='isDamaged' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:isDamaged' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='isTextlineSubsetOfSpan' fullname='flashx.textLayout.compose:TextFlowLine/private:isTextlineSubsetOfSpan' isStatic='false' isFinal='false' isOverride='false'  param_names='element' param_types='flashx.textLayout.elements:FlowLeafElement' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='makeBlock' fullname='flashx.textLayout.compose:TextFlowLine/private:makeBlock' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine;begTextIndex;begAtomIndex;endAtomIndex;startMetrics;blockProgression;direction;heightAndAdj' param_types='flash.text.engine:TextLine;int;int;int;flash.geom:Rectangle;String;String;Array' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='flash.geom:Rectangle'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='makeSelectionBlocks' fullname='flashx.textLayout.compose:TextFlowLine/private:makeSelectionBlocks' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine;begIdx;endIdx;paraAbsStart;blockProgression;direction;heightAndAdj' param_types='flash.text.engine:TextLine;int;int;int;String;String;Array' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='Array'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='normalizeRects' fullname='flashx.textLayout.compose:TextFlowLine/private:normalizeRects' isStatic='false' isFinal='false' isOverride='false'  param_names='srcRects;dstRects;largestRise;blockProgression;direction' param_types='Array;Array;Number;String;String' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='oldTestLineVisible' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:oldTestLineVisible' isStatic='false' isFinal='false' isOverride='false'  param_names='wmode;x;y;w;h' param_types='String;int;int;int;int' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='Boolean'>
</method>
<method name='peekTextLine' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:peekTextLine' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text.engine:TextLine'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='recreateTextLine' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:recreateTextLine' isStatic='false' isFinal='false' isOverride='false'  param_names='textBlock;previousLine' param_types='flash.text.engine:TextBlock;flash.text.engine:TextLine' param_defaults='undefined;undefined' result_type='flash.text.engine:TextLine'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='selectionWillIntersectScrollRect' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:selectionWillIntersectScrollRect' isStatic='false' isFinal='false' isOverride='false'  param_names='scrollRect;begIdx;endIdx;prevLine;nextLine' param_types='flash.geom:Rectangle;int;int;flashx.textLayout.compose:TextFlowLine;flashx.textLayout.compose:TextFlowLine' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setAbsoluteStart' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:setAbsoluteStart' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setController' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:setController' isStatic='false' isFinal='false' isOverride='false'  param_names='cont;colNumber' param_types='flashx.textLayout.container:ContainerController;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setFlag' fullname='flashx.textLayout.compose:TextFlowLine/private:setFlag' isStatic='false' isFinal='false' isOverride='false'  param_names='value;mask' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='setListEndIndent' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:setListEndIndent' isStatic='true' isFinal='false' isOverride='false'  param_names='numberLine;listEndIndent' param_types='flash.text.engine:TextLine;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setNumberLineBackground' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:setNumberLineBackground' isStatic='true' isFinal='false' isOverride='false'  param_names='numberLine;background' param_types='flash.text.engine:TextLine;flashx.textLayout.elements:BackgroundManager' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setRectangleValues' fullname='flashx.textLayout.compose:TextFlowLine/private:setRectangleValues' isStatic='true' isFinal='false' isOverride='false'  param_names='rect;x;y;width;height' param_types='flash.geom:Rectangle;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='setTextLength' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:setTextLength' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setValidity' fullname='flashx.textLayout.compose:TextFlowLine/private:setValidity' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='setXYAndHeight' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:setXYAndHeight' isStatic='false' isFinal='false' isOverride='false'  param_names='lineX;lineY;lineHeight' param_types='Number;Number;Number' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='testLineVisible' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:testLineVisible' isStatic='false' isFinal='false' isOverride='false'  param_names='wmode;x;y;w;h' param_types='String;int;int;int;int' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='int'>
<description><![CDATA[

		 Check if the line is visible by comparing a set rectangle to the supplied

		 rectangle (all values in Twips).

		 -1 BEFORE visible bounds

		 0 Visible

		 1 AFTER visible bounds

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='absoluteStart' fullname='flashx.textLayout.compose:TextFlowLine/absoluteStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The location of the line as an absolute character position in the TextFlow object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

 		 
 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the character position in the text flow at which the line begins.

		 
		 ]]></return>
<see><![CDATA[flashx.textLayout.elements.TextFlow

		 ]]></see>
</method>
<method name='accumulatedLineExtent' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:accumulatedLineExtent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='accumulatedMinimumStart' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:accumulatedMinimumStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='adornCount' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:adornCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='alignment' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:alignment/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='ascentTW' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:ascentTW/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='ascent' fullname='flashx.textLayout.compose:TextFlowLine/ascent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flash.text.engine.TextLine#ascent

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='columnIndex' fullname='flashx.textLayout.compose:TextFlowLine/columnIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ The number of the column in which the line has been placed, with the first column being 0.

		 	

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='controller' fullname='flashx.textLayout.compose:TextFlowLine/controller/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.container:ContainerController'>
<description><![CDATA[ 

		 The controller (ContainerController object) for the container in which the line has been placed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.container.ContainerController 

		 ]]></see>
</method>
<method name='descent' fullname='flashx.textLayout.compose:TextFlowLine/descent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flash.text.engine.TextLine#descent

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='hasGraphicElement' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:hasGraphicElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hasNumberLine' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:hasNumberLine/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='heightTW' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:heightTW/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='height' fullname='flashx.textLayout.compose:TextFlowLine/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The height of the line in pixels.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='lineExtentTW' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:lineExtentTW/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='lineExtent' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:lineExtent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='lineOffsetTW' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:lineOffsetTW/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='lineOffset' fullname='flashx.textLayout.compose:TextFlowLine/lineOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 The line's offset in pixels from the appropriate container inset (as dictated by paragraph direction and container block progression), 

		 prior to alignment of lines in the paragraph.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='location' fullname='flashx.textLayout.compose:TextFlowLine/location/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 One of the values from TextFlowLineLocation for specifying a line's location within a paragraph.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.ParagraphElement

	 	 ]]></see>
<see><![CDATA[TextFlowLineLocation

		 ]]></see>
</method>
<method name='numberLinePosition' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:numberLinePosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='outerTargetWidthTW' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:outerTargetWidthTW/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='outerTargetWidth' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:outerTargetWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='paragraph' fullname='flashx.textLayout.compose:TextFlowLine/paragraph/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:ParagraphElement'>
<description><![CDATA[ 

		 The paragraph (ParagraphElement) in which the line resides.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.ParagraphElement

	 	 ]]></see>
</method>
<method name='spaceAfter' fullname='flashx.textLayout.compose:TextFlowLine/spaceAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 The amount of space to leave after the line.

		 <p>If the line is the last line of a paragraph that has a space-after, the line will have

		 a <code>spaceAfter</code> value. If the line comes at the bottom of a column, then the <code>spaceAfter</code>

		 is ignored. Otherwise, the line comes before another line in the column, and the following line must be positioned vertically to

		 insure that there is at least this much space left between this last line of the paragraph and the first

		 line of the following paragraph.</p> 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat#paragraphSpaceAfter TextLayoutFormat.paragraphSpaceAfter

		 ]]></see>
</method>
<method name='spaceBefore' fullname='flashx.textLayout.compose:TextFlowLine/spaceBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 The amount of space to leave before the line.

		 <p>If the line is the first line of a paragraph that has a space-before applied, the line will have

		 a <code>spaceBefore</code> value. If the line comes at the top of a column, <code>spaceBefore</code> is ignored. 

		 Otherwise, the line follows another line in the column, and it is positioned vertically to insure that there is

		 at least this much space left between this line and the last line of the preceding paragraph.</p> 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat#paragraphSpaceBefore TextLayoutFormat.paragraphSpaceBefore

		 ]]></see>
</method>
<method name='targetWidthTW' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:targetWidthTW/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='targetWidth' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:targetWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='textHeightTW' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:textHeightTW/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='textHeight' fullname='flashx.textLayout.compose:TextFlowLine/textHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The height of the text line, which is equal to <code>ascent</code> plus <code>descent</code>. The 

		 value is calculated based on the difference between the baselines that bound the line, either 

		 ideographic top and bottom or ascent and descent depending on whether the baseline at y=0 

		 is ideographic (for example, TextBaseline.IDEOGRAPHIC_TOP) or not. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextBaseline TextBaseline

		 ]]></see>
</method>
<method name='textLength' fullname='flashx.textLayout.compose:TextFlowLine/textLength/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The number of characters to the next line, including trailing spaces. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='textLineExists' fullname='flashx.textLayout.compose:TextFlowLine/textLineExists/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Indicates whether the <code>flash.text.engine.TextLine</code> object for this TextFlowLine exists.  

		 The value is <code>true</code> if the TextLine object has <em>not</em> been garbage collected and 

		 <code>false</code> if it has been.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextLine TextLine

		 ]]></see>
</method>
<method name='unjustifiedTextWidth' fullname='flashx.textLayout.compose:TextFlowLine/unjustifiedTextWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 The width of the line if it was not justified. For unjustified text, this value is the same as <code>textLength</code>. 

		 For justified text, this value is what the length would have been without justification, and <code>textLength</code> 

		 represents the actual line width. For example, when the following String is justified and assigned a width of 500, it 

		 has an actual width of 500 but an unjustified width of 268.9921875. 

		 
		 ]]></description>
<internal><![CDATA[TBD: add graphic of justified line

		 
		 ]]></internal>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='validity' fullname='flashx.textLayout.compose:TextFlowLine/validity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ The validity of the line. 

		 <p>A line can be invalid if the text, the attributes applied to it, or the controller settings have

		 changed since the line was created. An invalid line can still be displayed, and you can use it, but the values

		 used will be the values at the time it was created. The line returned by <code>getTextLine()</code> also will be in an

		 invalid state. </p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[#getTextLine()

	 	 ]]></see>
<see><![CDATA[flash.text.engine.TextLine#validity TextLine.validity

	 	 ]]></see>
<see><![CDATA[FlowDamageType#GEOMETRY

		 ]]></see>
</method>
<method name='xTW' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:xTW/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='x' fullname='flashx.textLayout.compose:TextFlowLine/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 The horizontal position of the line relative to its container, expressed as the offset in pixels from the 

		 left of the container.

		 <p><strong>Note: </strong>Although this property is technically <code>read-write</code>, 

		 you should treat it as <code>read-only</code>. The setter exists only to satisfy the

		 requirements of the IVerticalJustificationLine interface that defines both a getter and setter for this property.

		 Use of the setter, though possible, will lead to unpredictable results.

		 </p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[#y

		 ]]></see>
</method>
<method name='yTW' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:yTW/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='y' fullname='flashx.textLayout.compose:TextFlowLine/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 The vertical position of the line relative to its container, expressed as the offset in pixels from the top 

		 of the container.

		 <p><strong>Note: </strong>Although this property is technically <code>read-write</code>, 

		 you should treat it as <code>read-only</code>. The setter exists only to satisfy the

		 requirements of the IVerticalJustificationLine interface that defines both a getter and setter for this property.

		 Use of the setter, though possible, will lead to unpredictable results.

		 </p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[#x

		 ]]></see>
</method>
<method name='accumulatedLineExtent' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:accumulatedLineExtent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='accumulatedMinimumStart' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:accumulatedMinimumStart/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='alignment' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:alignment/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='lineExtent' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:lineExtent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='numberLinePosition' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:numberLinePosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='position' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='outerTargetWidth' fullname='flashx.textLayout.compose:TextFlowLine/tlf_internal:outerTargetWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='x' fullname='flashx.textLayout.compose:TextFlowLine/x/set' isStatic='false' isFinal='false' isOverride='false'  param_names='lineX' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 This comment is ignored, but the setter should not be used and exists only to satisfy

		 the IVerticalJustificationLine interface.

		 ]]></description>
<see><![CDATA[flashx.textLayout.compose.IVerticalJustificationLine 

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='y' fullname='flashx.textLayout.compose:TextFlowLine/y/set' isStatic='false' isFinal='false' isOverride='false'  param_names='lineY' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ This comment is ignored, but the setter should not be used and exists only to satisfy

		 the IVerticalJustificationLine interface.

		 ]]></description>
<see><![CDATA[flashx.textLayout.compose.IVerticalJustificationLine

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<field name='ALIGNMENT_MASK' fullname='flashx.textLayout.compose:TextFlowLine/private:ALIGNMENT_MASK' type='uint' isStatic='true' isConst='true' defaultValue='24' >
</field>
<field name='ALIGNMENT_SHIFT' fullname='flashx.textLayout.compose:TextFlowLine/private:ALIGNMENT_SHIFT' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='GRAPHICELEMENT_MASK' fullname='flashx.textLayout.compose:TextFlowLine/private:GRAPHICELEMENT_MASK' type='uint' isStatic='true' isConst='true' defaultValue='64' >
</field>
<field name='NUMBERLINE_MASK' fullname='flashx.textLayout.compose:TextFlowLine/private:NUMBERLINE_MASK' type='uint' isStatic='true' isConst='true' defaultValue='32' >
</field>
<field name='VALIDITY_MASK' fullname='flashx.textLayout.compose:TextFlowLine/private:VALIDITY_MASK' type='uint' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='_absoluteStart' fullname='flashx.textLayout.compose:TextFlowLine/private:_absoluteStart' type='int' isStatic='false' isConst='false' >
</field>
<field name='_accumulatedLineExtent' fullname='flashx.textLayout.compose:TextFlowLine/private:_accumulatedLineExtent' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_accumulatedMinimumStart' fullname='flashx.textLayout.compose:TextFlowLine/private:_accumulatedMinimumStart' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_adornCount' fullname='flashx.textLayout.compose:TextFlowLine/private:_adornCount' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_alignments' fullname='flashx.textLayout.compose:TextFlowLine/private:_alignments' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_ascent' fullname='flashx.textLayout.compose:TextFlowLine/private:_ascent' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_boundsLeftTW' fullname='flashx.textLayout.compose:TextFlowLine/private:_boundsLeftTW' type='int' isStatic='false' isConst='false' defaultValue='2' >
</field>
<field name='_boundsRightTW' fullname='flashx.textLayout.compose:TextFlowLine/private:_boundsRightTW' type='int' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='_columnIndex' fullname='flashx.textLayout.compose:TextFlowLine/private:_columnIndex' type='int' isStatic='false' isConst='false' >
</field>
<field name='_controller' fullname='flashx.textLayout.compose:TextFlowLine/private:_controller' type='flashx.textLayout.container:ContainerController' isStatic='false' isConst='false' >
</field>
<field name='_descent' fullname='flashx.textLayout.compose:TextFlowLine/private:_descent' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_flags' fullname='flashx.textLayout.compose:TextFlowLine/private:_flags' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_height' fullname='flashx.textLayout.compose:TextFlowLine/private:_height' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_lineExtent' fullname='flashx.textLayout.compose:TextFlowLine/private:_lineExtent' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_lineOffset' fullname='flashx.textLayout.compose:TextFlowLine/private:_lineOffset' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_numberLinePosition' fullname='flashx.textLayout.compose:TextFlowLine/private:_numberLinePosition' type='int' isStatic='false' isConst='false' >
</field>
<field name='_outerTargetWidth' fullname='flashx.textLayout.compose:TextFlowLine/private:_outerTargetWidth' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_para' fullname='flashx.textLayout.compose:TextFlowLine/private:_para' type='flashx.textLayout.elements:ParagraphElement' isStatic='false' isConst='false' >
</field>
<field name='_selectionBlockCache' fullname='flashx.textLayout.compose:TextFlowLine/private:_selectionBlockCache' type='flash.utils:Dictionary' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_targetWidth' fullname='flashx.textLayout.compose:TextFlowLine/private:_targetWidth' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_textLength' fullname='flashx.textLayout.compose:TextFlowLine/private:_textLength' type='int' isStatic='false' isConst='false' >
</field>
<field name='_validities' fullname='flashx.textLayout.compose:TextFlowLine/private:_validities' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_x' fullname='flashx.textLayout.compose:TextFlowLine/private:_x' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_y' fullname='flashx.textLayout.compose:TextFlowLine/private:_y' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='localOnePoint' fullname='flashx.textLayout.compose:TextFlowLine/private:localOnePoint' type='flash.geom:Point' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='localZeroPoint' fullname='flashx.textLayout.compose:TextFlowLine/private:localZeroPoint' type='flash.geom:Point' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='numberLineFactory' fullname='flashx.textLayout.compose:TextFlowLine/private:numberLineFactory' type='TextFlowLine.as$209:NumberLineFactory' isStatic='true' isConst='false' >
</field>
<field name='rlLocalOnePoint' fullname='flashx.textLayout.compose:TextFlowLine/private:rlLocalOnePoint' type='flash.geom:Point' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<classRec name='ModelChange' fullname='flashx.textLayout.events:ModelChange' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\events\ModelChange.as' namespace='flashx.textLayout.events' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[ ModelChange values.  These are various types of model change. ]]></description>
<private><![CDATA[]]></private>
</classRec>
<field name='ELEMENT_ADDED' fullname='flashx.textLayout.events:ModelChange/ELEMENT_ADDED' type='String' isStatic='true' isConst='true' defaultValue='elementAdded' >
</field>
<field name='ELEMENT_MODIFIED' fullname='flashx.textLayout.events:ModelChange/ELEMENT_MODIFIED' type='String' isStatic='true' isConst='true' defaultValue='elementModified' >
</field>
<field name='ELEMENT_REMOVAL' fullname='flashx.textLayout.events:ModelChange/ELEMENT_REMOVAL' type='String' isStatic='true' isConst='true' defaultValue='elementRemoval' >
</field>
<field name='STYLE_SELECTOR_CHANGED' fullname='flashx.textLayout.events:ModelChange/STYLE_SELECTOR_CHANGED' type='String' isStatic='true' isConst='true' defaultValue='styleSelectorChanged' >
</field>
<field name='TEXTLAYOUT_FORMAT_CHANGED' fullname='flashx.textLayout.events:ModelChange/TEXTLAYOUT_FORMAT_CHANGED' type='String' isStatic='true' isConst='true' defaultValue='formatChanged' >
</field>
<field name='TEXT_DELETED' fullname='flashx.textLayout.events:ModelChange/TEXT_DELETED' type='String' isStatic='true' isConst='true' defaultValue='textDeleted' >
</field>
<field name='TEXT_INSERTED' fullname='flashx.textLayout.events:ModelChange/TEXT_INSERTED' type='String' isStatic='true' isConst='true' defaultValue='textInserted' >
</field>
<field name='USER_STYLE_CHANGED' fullname='flashx.textLayout.events:ModelChange/USER_STYLE_CHANGED' type='String' isStatic='true' isConst='true' defaultValue='userStyleChanged' >
</field>
<classRec name='ScrollEventDirection' fullname='flashx.textLayout.events:ScrollEventDirection' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\events\ScrollEventDirection.as' namespace='flashx.textLayout.events' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

      Constants for the values of the <code>direction</code> property

      of a ScrollEvent.

     
      ]]></description>
<langversion><![CDATA[3.0

     ]]></langversion>
<playerversion><![CDATA[Flash 10.0

     ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

     ]]></playerversion>
<see><![CDATA[flashx.textLayout.events.ScrollEvent

     

     ]]></see>
</classRec>
<field name='HORIZONTAL' fullname='flashx.textLayout.events:ScrollEventDirection/HORIZONTAL' type='String' isStatic='true' isConst='true' defaultValue='horizontal' >
<description><![CDATA[

          The user scrolled horizontally.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10.0

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
</field>
<field name='VERTICAL' fullname='flashx.textLayout.events:ScrollEventDirection/VERTICAL' type='String' isStatic='true' isConst='true' defaultValue='vertical' >
<description><![CDATA[

          The user scrolled vertically.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10.0

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
</field>
<classRec name='FlowOperationEvent' fullname='flashx.textLayout.events:FlowOperationEvent' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\events\FlowOperationEvent.as' namespace='flashx.textLayout.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[ A TextFlow instance dispatches this event just before an operation commences

	 and again just after an operation completes. Although the event object

	 dispatched in both cases is an instance of FlowOperationEvent, the events

	 dispatched before and after an operation differ in significant ways.

	 
	 <p>Before any operation is carried out, a TextFlow object dispatches a FlowOperationEvent

	 with its <code>type</code> property set to <code>FlowOperationEvent.FLOW_OPERATION_BEGIN.</code>

	 You can determine what type of operation is about to commence by checking

	 the <code>operation</code> property. Events of type FLOW_OPERATION_BEGIN are

	 cancellable, which means that if you decide that the operation should not proceed,

	 you can call <code>Event.PreventDefault()</code> to cancel the operation.

	 If you cancel the operation, the operation is not performed and the 

	 FLOW_OPERATION_END event is not dispatched. You may also choose to call back into the

	 EditManager to do another operation before the operation that triggered the event is done. If you do

	 this, the operations you initiate in your event handler will be undone as a single

	 operation with the operation that triggered the event.</p>

	 
	 <p>If you allow the operation to proceed, TextFlow will dispatch a FlowOperationEvent

	 upon completion of the operation with its <code>type</code> property set to

	 <code>FlowOperationEvent.FLOW_OPERATION_END</code>. This event is dispatched

	 before Flash Player throws any errors that may have occurred as a result of the

	 operation. This gives you an opportunity to process the error before Flash Player

	 throws the error. You can access the error through the event's <code>error</code>

	 property. If you choose to handle the error in your event handler, you can prevent

	 Flash Player from throwing the error by cancelling the FLOW_OPERATION_END event

	 by calling <code>Event.preventDefault()</code>. You may also choose to call back into the

	 EditManager to do some additional operations. If you do this, the operations that result

	 will be undone as a unit with the operation that triggered the event.

	 </p> 

	 
	 ]]></description>
<includeExample><![CDATA[examples\FlowOperationEvent_example.as -noswf

	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.operations.FlowOperation

	 ]]></see>
</classRec>
<method name='FlowOperationEvent' fullname='flashx.textLayout.events:FlowOperationEvent/FlowOperationEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;operation;level;error' param_types='String;Boolean;Boolean;flashx.textLayout.operations:FlowOperation;int;Error' param_defaults='undefined;false;false;null;0;null' result_type='*'>
<description><![CDATA[ Creates an event object that contains information about a flow operation.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[type			The type of the event. Event listeners can access this information through the

		 inherited <code>type</code> property. There are two types: 

		 <code>FlowOperationEvent.FLOW_OPERATION_BEGIN</code>; 

		 <code>FlowOperationEvent.FLOW_OPERATION_END</code>.

		 ]]></param>
<param><![CDATA[bubbles 		Indicates whether an event is a bubbling event.This event does not bubble.

		 ]]></param>
<param><![CDATA[cancelable 	Indicates whether the behavior associated with the event can be prevented.

		 This event can be cancelled by calling the <code>Event.preventDefault()</code> method in

		 your event handler function.

		 ]]></param>
<param><![CDATA[operation		The FlowOperation that is about to commence or that has just ended.

		 ]]></param>
<param><![CDATA[error			Any Error generating during the operation.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='clone' fullname='flashx.textLayout.events:FlowOperationEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='error' fullname='flashx.textLayout.events:FlowOperationEvent/error/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Error'>
<description><![CDATA[ 

		 The error thrown, if any, during an operation.  

		 If an error occurs during an operation, a reference to the error object is attached to the 

		 FLOW_OPERATION_END event. This give you the opportunity to deal with the error

		 before Flash Player throws the error. If you cancel the event, Flash Player will not throw the error.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='level' fullname='flashx.textLayout.events:FlowOperationEvent/level/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 Operations may be merged into composite operations through nesting.  This flag describes the nesting level of the operation.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='operation' fullname='flashx.textLayout.events:FlowOperationEvent/operation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.operations:FlowOperation'>
<description><![CDATA[ 

		 The operation that is about to begin or has just ended.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

	         ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.operations.FlowOperation

		 ]]></see>
</method>
<method name='error' fullname='flashx.textLayout.events:FlowOperationEvent/error/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Error' param_defaults='undefined' result_type='void'>
</method>
<method name='level' fullname='flashx.textLayout.events:FlowOperationEvent/level/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='operation' fullname='flashx.textLayout.events:FlowOperationEvent/operation/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='void'>
</method>
<field name='FLOW_OPERATION_BEGIN' fullname='flashx.textLayout.events:FlowOperationEvent/FLOW_OPERATION_BEGIN' type='String' isStatic='true' isConst='true' defaultValue='flowOperationBegin' >
<description><![CDATA[ 

		 Defines the value of the <code>type</code> property of a <code>flowOperationBegin</code> event object.

		 Dispatched before an operation is executed.   Cancelling this event blocks the operation. 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='FLOW_OPERATION_COMPLETE' fullname='flashx.textLayout.events:FlowOperationEvent/FLOW_OPERATION_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='flowOperationComplete' >
<description><![CDATA[  

		 Defines the value of the <code>type</code> property of a <code>flowOperationComplete</code> event object.

		 Dispatched after all operations including pending and composite operations are completed, composition is finished and the display is scrolled.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='FLOW_OPERATION_END' fullname='flashx.textLayout.events:FlowOperationEvent/FLOW_OPERATION_END' type='String' isStatic='true' isConst='true' defaultValue='flowOperationEnd' >
<description><![CDATA[  

		 Defines the value of the <code>type</code> property of a <code>flowOperationEnd</code> event object.

		 Dispatched after an operation completes. Any errors are stored in <code>OperationEvent.error</code>.

	 	 If there is an error, cancelling this event blocks the rethrow of the error.

	 	 Generally speaking all errors are likely to be fatal.

	 	 <p>Changing an operation at this time (after it has been executed) may fail.</p> 

		 ]]></description>
<langversion><![CDATA[3.0 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='_e' fullname='flashx.textLayout.events:FlowOperationEvent/private:_e' type='Error' isStatic='false' isConst='false' >
</field>
<field name='_level' fullname='flashx.textLayout.events:FlowOperationEvent/private:_level' type='int' isStatic='false' isConst='false' >
</field>
<field name='_op' fullname='flashx.textLayout.events:FlowOperationEvent/private:_op' type='flashx.textLayout.operations:FlowOperation' isStatic='false' isConst='false' >
</field>
<classRec name='SelectionEvent' fullname='flashx.textLayout.events:SelectionEvent' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\events\SelectionEvent.as' namespace='flashx.textLayout.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 A TextFlow instance dispatches a SelectionEvent object when

	 an EditManager or SelectionManager changes or selects a range of text. 

	 For example, this event is dispatched not only when a range of text is

	 selected, but also when the selection changes because the

	 user clicks elsewhere in the text flow. Moreover, this

	 event is also dispatched when an EditManager changes

	 the text or text formatting within a range of text.

	 
	 ]]></description>
<includeExample><![CDATA[examples\SelectionEvent_example.as -noswf

	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='SelectionEvent' fullname='flashx.textLayout.events:SelectionEvent/SelectionEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;selectionState' param_types='String;Boolean;Boolean;flashx.textLayout.edit:SelectionState' param_defaults='undefined;false;false;null' result_type='*'>
<description><![CDATA[ 

		 Creates an event object that contains information about a flow operation.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[type		The type of the event. Event listeners can access this information through the

		 inherited <code>type</code> property. There is only one type of SelectionEvent: 

		 <code>SelectionEvent.SELECTION_CHANGE</code>; 

		 ]]></param>
<param><![CDATA[bubbles 	Indicates whether an event is a bubbling event.This event does not bubble.

		 ]]></param>
<param><![CDATA[cancelable 	Indicates whether the behavior associated with the event can be prevented.

		 ]]></param>
<param><![CDATA[range		An object of type ElementRange that describes the range of text selected.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='clone' fullname='flashx.textLayout.events:SelectionEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='selectionState' fullname='flashx.textLayout.events:SelectionEvent/selectionState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ 

		 An object of type SelectionState that represents the selected range associated with this SelectionEvent.

		 

		 <p>You can use this property, along with the ElementRange class, to create an ElementRange

		 instance that represents the range of selected text.

		 You can use the following line of code to create an instance of the

		 ElementRange class that represents the range of selected text

		 (the <code>ev</code> variable represents the event object, and the conditional operator 

		 is used to guard against a <code>null</code> value for the <code>selectionState</code>

		 property):</p>

		 <listing>

		 // Find selected element range

		 var range:ElementRange = ev.selectionState ?  

		 	ElementRange.createElementRange(ev.selectionState.textFlow,

		 	ev.selectionState.absoluteStart, ev.selectionState.absoluteEnd) : null;</listing>

		 

		 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.ElementRange

		 ]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionState

		 ]]></see>
</method>
<method name='selectionState' fullname='flashx.textLayout.events:SelectionEvent/selectionState/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.edit:SelectionState' param_defaults='undefined' result_type='void'>
</method>
<field name='SELECTION_CHANGE' fullname='flashx.textLayout.events:SelectionEvent/SELECTION_CHANGE' type='String' isStatic='true' isConst='true' defaultValue='selectionChange' >
<description><![CDATA[ 

		 The SelectionEvent.SELECTION_CHANGE constant defines the value of the 

		 type property of the event object for a selection event. 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</field>
<field name='_selectionState' fullname='flashx.textLayout.events:SelectionEvent/private:_selectionState' type='flashx.textLayout.edit:SelectionState' isStatic='false' isConst='false' >
</field>
<classRec name='FlowElementMouseEvent' fullname='flashx.textLayout.events:FlowElementMouseEvent' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\events\FlowElementMouseEvent.as' namespace='flashx.textLayout.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[ A link element dispatches this event when it detects mouse activity.

	 The Text Layout Framework includes this special version of mouse events

	 because mouse events are generally unwanted when a flow element is

	 embedded in an editable text flow, and because link elements are not in

	 the display list (they are not DisplayObjects).

	 <p>You can add an event listener to a link element to listen for this

	 type of event. If you choose to cancel the event by calling

	 <code>Event.preventDefault()</code>, the default behavior associated

	 with the event will not occur.

	 </p>

	 <p>If you choose not to add an event listener to the link element, or

	 your event listener function does not cancel the behavior, the 

	 event is again dispatched, but this time by the link element's

	 associated TextFlow instance rather than by the link element itself. 

	 This provides a second opportunity to listen for this event with

	 an event listener attached to the TextFlow. 

	 </p>

	 <p>FlowElementMouseEvents are

	 dispatched only when the text cannot be edited or when the control key 

	 is pressed concurrently with the mouse activity.</p>

	 <p>

	 The following six event types are dispatched only when the text

	 cannot be edited or when the control key is pressed:

	 <ul>

	   <li><code>FlowElementMouseEvent.CLICK</code></li>

	   <li><code>FlowElementMouseEvent.MOUSE_DOWN</code></li>

	   <li><code>FlowElementMouseEvent.MOUSE_UP</code></li>

	   <li><code>FlowElementMouseEvent.MOUSE_MOVE</code></li>

	   <li><code>FlowElementMouseEvent.ROLL_OVER</code></li>

	   <li><code>FlowElementMouseEvent.ROLL_OUT</code></li>

	 </ul>

	 </p>

	 
	 ]]></description>
<includeExample><![CDATA[examples\FlowElementMouseEvent_example.as -noswf

	 

	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.LinkElement

     ]]></see>
<see><![CDATA[flash.events.MouseEvent

	 ]]></see>
</classRec>
<method name='FlowElementMouseEvent' fullname='flashx.textLayout.events:FlowElementMouseEvent/FlowElementMouseEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;flowElement;originalEvent' param_types='String;Boolean;Boolean;flashx.textLayout.elements:FlowElement;flash.events:MouseEvent' param_defaults='undefined;false;true;null;null' result_type='*'>
<description><![CDATA[ 

		 Creates an event object that contains information about mouse activity.

		 Event objects are passed as parameters to event listeners. Use the

		 constructor if you plan to manually dispatch an event. You do not need

		 to use the constructor to listen for FlowElementMouseEvent objects

		 generated by a FlowElement.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[type  The type of the event. Event listeners can access this information through the

		 inherited <code>type</code> property. There are six types:

		 <code>FlowElementMouseEvent.CLICK</code>; <code>FlowElementMouseEvent.MOUSE_DOWN</code>; <code>FlowElementMouseEvent.MOUSE_MOVE</code>;

		 <code>FlowElementMouseEvent.MOUSE_UP</code>; <code>FlowElementMouseEvent.ROLL_OVER</code>; and <code>FlowElementMouseEvent.ROLL_OUT</code>.

		 ]]></param>
<param><![CDATA[bubbles Determines whether the Event object participates in the bubbling phase of the

		 event flow. FlowElementMouseEvent objects do not bubble.

		 ]]></param>
<param><![CDATA[cancelable Determines whether the Event object can be canceled. Event listeners can

		 access this information through the inherited <code>cancelable</code> property. FlowElementMouseEvent

		 objects can be cancelled. You can cancel the default behavior associated with this event

		 by calling the <code>preventDefault()</code> method in your event listener.

		 ]]></param>
<param><![CDATA[flowElement The instance of FlowElement, currently a LinkElement, associated with this

		 event. Event listeners can access this information through the <code>flowElement</code> property.

		 ]]></param>
<param><![CDATA[originalEvent The original mouse event that occurred on the flowElement. Event listeners can 

		 access this information through the <code>originalEvent</code> property.



		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='clone' fullname='flashx.textLayout.events:FlowElementMouseEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='flowElement' fullname='flashx.textLayout.events:FlowElementMouseEvent/flowElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 The FlowElement that dispatched the event.

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.FlowElement

		 ]]></see>
</method>
<method name='originalEvent' fullname='flashx.textLayout.events:FlowElementMouseEvent/originalEvent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.events:MouseEvent'>
<description><![CDATA[ 

		 The original mouse event generated by the mouse activity. 

		 This property can contain any of the following values:

		 <ul>

		   <li><code>MouseEvent.CLICK</code></li>

		   <li><code>MouseEvent.MOUSE_DOWN</code></li>

		   <li><code>MouseEvent.MOUSE_UP</code></li>

		   <li><code>MouseEvent.MOUSE_MOVE</code></li>

		   <li><code>MouseEvent.MOUSE_OVER</code></li>

		   <li><code>MouseEvent.MOUSE_OUT</code></li>

		 </ul>

		 <p>

		 In most cases the original event matches the event that the

		 link element dispatches. The events match for the <code>click</code>,

		 <code>mouseDown</code>, <code>mouseOut</code>, and <code>mouseOver</code>

		 events. There are two cases, however, in which the original event

		 is converted by the link element to a related event. 

		 If a link element detects a <code>mouseOver</code> event, it dispatches

		 a <code>rollOver</code> event. Likewise, if a link element detects

		 a <code>mouseOut</code> event, it dispatches a <code>rollOut</code> event.

		 Usually, the event target and the mouse coordinates are related to

		 the TextLine instance containing the link element.

		 </p>

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent

		 ]]></see>
</method>
<method name='flowElement' fullname='flashx.textLayout.events:FlowElementMouseEvent/flowElement/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='void'>
</method>
<method name='originalEvent' fullname='flashx.textLayout.events:FlowElementMouseEvent/originalEvent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
</method>
<field name='CLICK' fullname='flashx.textLayout.events:FlowElementMouseEvent/CLICK' type='String' isStatic='true' isConst='true' defaultValue='click' >
<description><![CDATA[

		 Defines the value of the <code>type</code> property of a <code>click</code> event object. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#CLICK

		 

		 ]]></see>
</field>
<field name='MOUSE_DOWN' fullname='flashx.textLayout.events:FlowElementMouseEvent/MOUSE_DOWN' type='String' isStatic='true' isConst='true' defaultValue='mouseDown' >
<description><![CDATA[

		 Defines the value of the <code>type</code> property of a <code>mouseDown</code> event object. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_DOWN

		 

		 ]]></see>
</field>
<field name='MOUSE_MOVE' fullname='flashx.textLayout.events:FlowElementMouseEvent/MOUSE_MOVE' type='String' isStatic='true' isConst='true' defaultValue='mouseMove' >
<description><![CDATA[

		 Defines the value of the <code>type</code> property of a <code>mouseMove</code> event object. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_MOVE

		 

		 ]]></see>
</field>
<field name='MOUSE_UP' fullname='flashx.textLayout.events:FlowElementMouseEvent/MOUSE_UP' type='String' isStatic='true' isConst='true' defaultValue='mouseUp' >
<description><![CDATA[

		 Defines the value of the <code>type</code> property of a <code>mouseUp</code> event object. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_UP

		 

		 ]]></see>
</field>
<field name='ROLL_OUT' fullname='flashx.textLayout.events:FlowElementMouseEvent/ROLL_OUT' type='String' isStatic='true' isConst='true' defaultValue='rollOut' >
<description><![CDATA[

		 Defines the value of the <code>type</code> property of a <code>rollOut</code> event object. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#ROLL_OUT

		 

		 ]]></see>
</field>
<field name='ROLL_OVER' fullname='flashx.textLayout.events:FlowElementMouseEvent/ROLL_OVER' type='String' isStatic='true' isConst='true' defaultValue='rollOver' >
<description><![CDATA[

		 Defines the value of the <code>type</code> property of a <code>rollOver</code> event object. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#ROLL_OVER

		 

		 ]]></see>
</field>
<field name='_flowElement' fullname='flashx.textLayout.events:FlowElementMouseEvent/private:_flowElement' type='flashx.textLayout.elements:FlowElement' isStatic='false' isConst='false' >
</field>
<field name='_originalEvent' fullname='flashx.textLayout.events:FlowElementMouseEvent/private:_originalEvent' type='flash.events:MouseEvent' isStatic='false' isConst='false' >
</field>
<classRec name='TextLayoutEvent' fullname='flashx.textLayout.events:TextLayoutEvent' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\events\TextLayoutEvent.as' namespace='flashx.textLayout.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A TextLayoutEvent instance represents an event, such as the 

	 <code>TextLayoutEvent.SCROLL</code> event, that does not require

	 custom properties. 

	 <p>A scroll event is represented by a TextLayoutEvent instance with its 

	 <code>type</code> property set to <code>TextLayoutEvent.SCROLL</code>.

	 A class specifically for scroll events is not necessary because there are

	 no custom properties for a scroll event, as there are for the other

	 events that have specific event classes.

	 If a new text layout event is needed, and the event does not require

	 custom properties, the new event will also be represented by a

	 TextLayoutEvent object, but with its <code>type</code> property

	 set to a new static constant.

	 </p>

	 
	 ]]></description>
<includeExample><![CDATA[examples\TextLayoutEvent_example.as -noswf

	 ]]></includeExample>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='TextLayoutEvent' fullname='flashx.textLayout.events:TextLayoutEvent/TextLayoutEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable' param_types='String;Boolean;Boolean' param_defaults='undefined;false;false' result_type='*'>
<description><![CDATA[

		  The TextLayoutEvent class represents the event object passed to

		  the event listener for many Text Layout events.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='clone' fullname='flashx.textLayout.events:TextLayoutEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='SCROLL' fullname='flashx.textLayout.events:TextLayoutEvent/SCROLL' type='String' isStatic='true' isConst='true' defaultValue='scroll' >
<description><![CDATA[

	      The <code>TextLayoutEvent.SCROLL</code> constant defines the value of the

	      <code>type</code> property of the event object for a <code>scroll</code> event.

	     ]]></description>
<langversion><![CDATA[3.0

	     ]]></langversion>
<playerversion><![CDATA[Flash 10

	     ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	     ]]></playerversion>
</field>
<classRec name='DamageEvent' fullname='flashx.textLayout.events:DamageEvent' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\events\DamageEvent.as' namespace='flashx.textLayout.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 A TextFlow instance dispatches this each time it is marked as damaged.  Damage can be caused by changes to the model or changes to the layout.

	 

	 ]]></description>
<includeExample><![CDATA[examples\DamageEvent_example.as -noswf

	 

	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow 

	 ]]></see>
</classRec>
<method name='DamageEvent' fullname='flashx.textLayout.events:DamageEvent/DamageEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;textFlow;damageAbsoluteStart;damageLength' param_types='String;Boolean;Boolean;flashx.textLayout.elements:TextFlow;int;int' param_defaults='undefined;false;false;null;0;0' result_type='*'>
<description><![CDATA[ Constructor

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[damageAbsoluteStart text index of the start of the damage

		 ]]></param>
<param><![CDATA[damageLength length of text that was damaged

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='clone' fullname='flashx.textLayout.events:DamageEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='damageAbsoluteStart' fullname='flashx.textLayout.events:DamageEvent/damageAbsoluteStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Absolute start of the damage 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='damageLength' fullname='flashx.textLayout.events:DamageEvent/damageLength/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Length of the damage 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='textFlow' fullname='flashx.textLayout.events:DamageEvent/textFlow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[

		 TextFlow owning the damage 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<field name='DAMAGE' fullname='flashx.textLayout.events:DamageEvent/DAMAGE' type='String' isStatic='true' isConst='true' defaultValue='damage' >
<description><![CDATA[ Event type for DamageEvent ]]></description>
</field>
<field name='_damageAbsoluteStart' fullname='flashx.textLayout.events:DamageEvent/private:_damageAbsoluteStart' type='int' isStatic='false' isConst='false' >
</field>
<field name='_damageLength' fullname='flashx.textLayout.events:DamageEvent/private:_damageLength' type='int' isStatic='false' isConst='false' >
</field>
<field name='_textFlow' fullname='flashx.textLayout.events:DamageEvent/private:_textFlow' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
</field>
<classRec name='StatusChangeEvent' fullname='flashx.textLayout.events:StatusChangeEvent' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\events\StatusChangeEvent.as' namespace='flashx.textLayout.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 A TextFlow instance dispatches this event when the status of a FlowElement changes. 

	 This event can be used to detect when an inline graphic element has

	 completed loading. You can use your event handler to recompose the text flow

	 based on the presence of the newly loaded inline graphic element.

	 
	 ]]></description>
<includeExample><![CDATA[examples\StatusChangeEvent_example.as -noswf

	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='StatusChangeEvent' fullname='flashx.textLayout.events:StatusChangeEvent/StatusChangeEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;element;status;errorEvent' param_types='String;Boolean;Boolean;flashx.textLayout.elements:FlowElement;String;flash.events:ErrorEvent' param_defaults='undefined;false;false;null;null;null' result_type='*'>
<description><![CDATA[ Creates an event object that contains information about a status change.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[type		The type of the event. Event listeners can access this information through the

		 inherited <code>type</code> property. There is only one type of StatusChangeEvent: 

		 <code>StatusChangeEvent.INLINE_GRAPHIC_STATUS_CHANGE</code>; 

		 ]]></param>
<param><![CDATA[bubbles 	Indicates whether an event is a bubbling event.This event does not bubble.

		 ]]></param>
<param><![CDATA[cancelable 	Indicates whether the behavior associated with the event can be prevented.

		 This event cannot be cancelled.

		 ]]></param>
<param><![CDATA[element The FlowElement instance that has experienced a change in status.

		 ]]></param>
<param><![CDATA[newStatus The FlowElement instance's new status.

		 ]]></param>
<param><![CDATA[e The ErrorEvent object, if any, associated with the status.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='clone' fullname='flashx.textLayout.events:StatusChangeEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='element' fullname='flashx.textLayout.events:StatusChangeEvent/element/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 The FlowElement instance that has experienced a change in status. 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.FlowElement

		 ]]></see>
</method>
<method name='errorEvent' fullname='flashx.textLayout.events:StatusChangeEvent/errorEvent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.events:ErrorEvent'>
<description><![CDATA[ 

		 The ErrorEvent object that was dispatched as a result of the status change. 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.ErrorEvent

		 ]]></see>
</method>
<method name='status' fullname='flashx.textLayout.events:StatusChangeEvent/status/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 The FlowElement's new status. The possible values of this property are

		 defined by the InlineGraphicElementStatus class. There are five static constants

		 available in the InlineGraphicElementStatus class:

		 <ul>

		   <li>ERROR : String = "error". An error occurred during loading of a referenced graphic.</li>

		   <li>LOADING : String = "loading". Load has been initiated (but not completed) on a graphic element that is a URL.</li>

		   <li>LOAD_PENDING : String = "loadPending". Graphic element is an URL that has not been loaded.</li>

		   <li>READY : String = "ready". Graphic is completely loaded and properly sized.</li>

		   <li>SIZE_PENDING : String = "sizePending". Graphic element with auto or percentage width/height has completed loading but has not been recomposed.</li>

		 </ul>

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.InlineGraphicElementStatus

		 ]]></see>
</method>
<method name='element' fullname='flashx.textLayout.events:StatusChangeEvent/element/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='void'>
</method>
<method name='errorEvent' fullname='flashx.textLayout.events:StatusChangeEvent/errorEvent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.events:ErrorEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='status' fullname='flashx.textLayout.events:StatusChangeEvent/status/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='INLINE_GRAPHIC_STATUS_CHANGE' fullname='flashx.textLayout.events:StatusChangeEvent/INLINE_GRAPHIC_STATUS_CHANGE' type='String' isStatic='true' isConst='true' defaultValue='inlineGraphicStatusChange' >
<description><![CDATA[ 

	     Defines the value of the <code>type</code> property of a <code>inlineGraphicStatusChanged</code> event object.

	     ]]></description>
<langversion><![CDATA[3.0 

	     ]]></langversion>
<playerversion><![CDATA[Flash 10

	     ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	     ]]></playerversion>
</field>
<field name='_element' fullname='flashx.textLayout.events:StatusChangeEvent/private:_element' type='flashx.textLayout.elements:FlowElement' isStatic='false' isConst='false' >
</field>
<field name='_errorEvent' fullname='flashx.textLayout.events:StatusChangeEvent/private:_errorEvent' type='flash.events:ErrorEvent' isStatic='false' isConst='false' >
</field>
<field name='_status' fullname='flashx.textLayout.events:StatusChangeEvent/private:_status' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='CompositionCompleteEvent' fullname='flashx.textLayout.events:CompositionCompleteEvent' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\events\CompositionCompleteEvent.as' namespace='flashx.textLayout.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 A TextFlow instance dispatches this event after a compose operation completes. 

	 Each text container has two states: composition and display. This event notifies

	 you when the composition phase has ended. This provides an opportunity to make any

	 necessary and appropriate changes to the container before you display the text. 

	 For example, you can use this event to add highlighting of certain words or

	 characters in the text flow before the text is displayed.

	 

	 <p>The three main methods that dispatch this event are <code>compose()</code>, 

	 <code>updateToController()</code>, and <code>updateAllControllers()</code>.

	 All three of these methods are in the StandardFlowComposer class.</p>

	 
	 <p><strong>Note: </strong>If the event is dispatched by the

	 <code>updateAllControllers()</code> method, do not call 

	 <code>updateAllControllers()</code> again in your event handler function.

	 Such a call would be a recursive call because the <code>updateAllControllers()</code> 

	 method executes both the composition and display steps. The <code>updateAllControllers()</code>

	 dispatches this event after composition completes, but before the display step executes.

	 The same reasoning applies to the <code>updateToController()</code> method.

	 </p>

	 
	 ]]></description>
<includeExample><![CDATA[examples\CompositionCompleteEvent_example.as -noswf

	 
	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow 

	 ]]></see>
</classRec>
<method name='CompositionCompleteEvent' fullname='flashx.textLayout.events:CompositionCompleteEvent/CompositionCompleteEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;textFlow;compositionStart;compositionLength' param_types='String;Boolean;Boolean;flashx.textLayout.elements:TextFlow;int;int' param_defaults='undefined;false;false;null;0;0' result_type='*'>
<description><![CDATA[ Constructor

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[type event type - use the static property COMPOSITION_COMPLETE.

		 ]]></param>
<param><![CDATA[bubbles Indicates whether an event is a bubbling event. This event does not bubble.

		 ]]></param>
<param><![CDATA[cancelable Indicates whether the behavior associated with the event can be prevented.

		 This event cannot be cancelled.

		 ]]></param>
<param><![CDATA[textFlow The TextFlow which was composed

		 ]]></param>
<param><![CDATA[compositionStart start of composition, in terms of an index into the text flow.

		 ]]></param>
<param><![CDATA[compositionLength length number of characters composed

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='clone' fullname='flashx.textLayout.events:CompositionCompleteEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='compositionLength' fullname='flashx.textLayout.events:CompositionCompleteEvent/compositionLength/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The number of characters composed.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='compositionStart' fullname='flashx.textLayout.events:CompositionCompleteEvent/compositionStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The start location of the text range affected by the composition, expressed as an index into the text flow.

		 ]]></description>
<langversion><![CDATA[3.0 		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='textFlow' fullname='flashx.textLayout.events:CompositionCompleteEvent/textFlow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[

		 TextFlow on which composition has been completed. 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='compositionLength' fullname='flashx.textLayout.events:CompositionCompleteEvent/compositionLength/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='compositionStart' fullname='flashx.textLayout.events:CompositionCompleteEvent/compositionStart/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='textFlow' fullname='flashx.textLayout.events:CompositionCompleteEvent/textFlow/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='void'>
</method>
<field name='COMPOSITION_COMPLETE' fullname='flashx.textLayout.events:CompositionCompleteEvent/COMPOSITION_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='compositionComplete' >
<description><![CDATA[ 

	     Defines the value of the <code>type</code> property of a <code>compositionComplete</code> event object 

	     ]]></description>
<langversion><![CDATA[3.0 

	     ]]></langversion>
<playerversion><![CDATA[Flash 10

	     ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	     ]]></playerversion>
</field>
<field name='_compositionLength' fullname='flashx.textLayout.events:CompositionCompleteEvent/private:_compositionLength' type='int' isStatic='false' isConst='false' >
</field>
<field name='_compositionStart' fullname='flashx.textLayout.events:CompositionCompleteEvent/private:_compositionStart' type='int' isStatic='false' isConst='false' >
</field>
<field name='_textFlow' fullname='flashx.textLayout.events:CompositionCompleteEvent/private:_textFlow' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
</field>
<classRec name='UpdateCompleteEvent' fullname='flashx.textLayout.events:UpdateCompleteEvent' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\events\UpdateCompleteEvent.as' namespace='flashx.textLayout.events' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 A TextFlow instance dispatches this event after any of its containers completes 

	 an update. Each text container has two states: composition and display. This 

	 event notifies you when the display phase has ended. This provides an 

	 opportunity to make any necessary changes to the container when it is ready to

	 be displayed, but hasn't yet been painted to the screen.

	 

	 ]]></description>
<includeExample><![CDATA[examples\DamageEvent_example.as -noswf

	 ]]></includeExample>
<internal><![CDATA[Note: the DamageEvent_example class contains a good example of 

	 using the UpdateCompleteEvent, so I have included it as the class example

	 instead of creating a new example. I've updated the description of the

	 DamageEvent_example file to include prominent mention of the UpdateCompleteEvent.

	 
	 ]]></internal>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow 

	 ]]></see>
</classRec>
<method name='UpdateCompleteEvent' fullname='flashx.textLayout.events:UpdateCompleteEvent/UpdateCompleteEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;textFlow;controller' param_types='String;Boolean;Boolean;flashx.textLayout.elements:TextFlow;flashx.textLayout.container:ContainerController' param_defaults='undefined;false;false;null;null' result_type='*'>
<description><![CDATA[ Constructor

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[type event type - use the static property UPDATE_COMPLETE.

		 ]]></param>
<param><![CDATA[bubbles Indicates whether an event is a bubbling event. This event does not bubble.

		 ]]></param>
<param><![CDATA[cancelable Indicates whether the behavior associated with the event can be prevented.

		 This event cannot be cancelled.

		 ]]></param>
<param><![CDATA[controller The ContainerController whose container was updated

		 ]]></param>
<param><![CDATA[textFlow The TextFlow which was updated

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='clone' fullname='flashx.textLayout.events:UpdateCompleteEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='controller' fullname='flashx.textLayout.events:UpdateCompleteEvent/controller/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.container:ContainerController'>
<description><![CDATA[ 

		 The controller of the container being updated

		 ]]></description>
<langversion><![CDATA[3.0 		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='textFlow' fullname='flashx.textLayout.events:UpdateCompleteEvent/textFlow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[

		 TextFlow which has been updated. 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='controller' fullname='flashx.textLayout.events:UpdateCompleteEvent/controller/set' isStatic='false' isFinal='false' isOverride='false'  param_names='c' param_types='flashx.textLayout.container:ContainerController' param_defaults='undefined' result_type='void'>
</method>
<method name='textFlow' fullname='flashx.textLayout.events:UpdateCompleteEvent/textFlow/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='void'>
</method>
<field name='UPDATE_COMPLETE' fullname='flashx.textLayout.events:UpdateCompleteEvent/UPDATE_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='updateComplete' >
<description><![CDATA[ 

	     Defines the value of the <code>type</code> property of an <code>UpdateCompleteEvent</code> object 

	     ]]></description>
<langversion><![CDATA[3.0 

	     ]]></langversion>
<playerversion><![CDATA[Flash 10

	     ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	     ]]></playerversion>
</field>
<field name='_controller' fullname='flashx.textLayout.events:UpdateCompleteEvent/private:_controller' type='flashx.textLayout.container:ContainerController' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_textFlow' fullname='flashx.textLayout.events:UpdateCompleteEvent/private:_textFlow' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='ScrollEvent' fullname='flashx.textLayout.events:ScrollEvent' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\events\ScrollEvent.as' namespace='flashx.textLayout.events' access='public' baseclass='flashx.textLayout.events:TextLayoutEvent' isFinal='false' isDynamic='false' >
<description><![CDATA[

	  Represents events that are dispatched when the TextFlow does automatic scrolling.

	 
	  ]]></description>
<langversion><![CDATA[3.0

	  ]]></langversion>
<playerversion><![CDATA[Flash 9

	  ]]></playerversion>
<playerversion><![CDATA[AIR 1.1

	  ]]></playerversion>
<productversion><![CDATA[Flex 3

	 ]]></productversion>
</classRec>
<method name='ScrollEvent' fullname='flashx.textLayout.events:ScrollEvent/ScrollEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;bubbles;cancelable;direction;delta' param_types='String;Boolean;Boolean;String;Number' param_defaults='undefined;false;false;null;unknown' result_type='*'>
<description><![CDATA[

		  Constructor.

		 

		  Scroll events are dispatched when a container has scrolled. 

		 
		  ]]></description>
<param><![CDATA[type The event type; indicates the action that caused the event.

		 
		  ]]></param>
<param><![CDATA[bubbles Specifies whether the event can bubble

		  up the display list hierarchy.

		 
		  ]]></param>
<param><![CDATA[cancelable Specifies whether the behavior associated with the event

		  can be prevented.

		 
		 
		  ]]></param>
<param><![CDATA[delta The change in scroll position, expressed in pixels.

		  

		 ]]></param>
</method>
<method name='clone' fullname='flashx.textLayout.events:ScrollEvent/clone' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:Event'>
<description><![CDATA[

		  ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='delta' fullname='flashx.textLayout.events:ScrollEvent/delta' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[

		  The change in the scroll position value that resulted from 

		  the scroll. The value is expressed in pixels. A positive value indicates the 

		  scroll was down or to the right. A negative value indicates the scroll  

		 	was up or to the left.

		  

		  ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 9

		  ]]></playerversion>
<playerversion><![CDATA[AIR 1.1

		  ]]></playerversion>
<productversion><![CDATA[Flex 3

		 ]]></productversion>
</field>
<field name='direction' fullname='flashx.textLayout.events:ScrollEvent/direction' type='String' isStatic='false' isConst='false' >
<description><![CDATA[

		  The direction of motion.

		  The possible values are <code>ScrollEventDirection.VERTICAL</code>

		  or <code>ScrollEventDirection.HORIZONTAL</code>.

		 
		  ]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 9

		  ]]></playerversion>
<playerversion><![CDATA[AIR 1.1

		  ]]></playerversion>
<productversion><![CDATA[Flex 3

		 ]]></productversion>
<see><![CDATA[flashx.textLayout.events.ScrollEventDirection

		  

		  ]]></see>
</field>
<interfaceRec name='IFormatResolver' fullname='flashx.textLayout.elements:IFormatResolver' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\IFormatResolver.as' namespace='flashx.textLayout.elements' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ Interface to a format resolver. An implementation allows you to attach a styling mechanism of your choosing, such as

	  Flex CSS styling and named styles, to a TextFlow.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow#formatResolver TextFlow.formatResolver

	 ]]></see>
</interfaceRec>
<method name='getResolverForNewFlow' fullname='flashx.textLayout.elements:IFormatResolver/flashx.textLayout.elements:IFormatResolver:getResolverForNewFlow' isStatic='false' isFinal='false' isOverride='false'  param_names='oldFlow;newFlow' param_types='flashx.textLayout.elements:TextFlow;flashx.textLayout.elements:TextFlow' param_defaults='undefined;undefined' result_type='flashx.textLayout.elements:IFormatResolver'>
<description><![CDATA[ Returns the format resolver when a TextFlow is copied.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[the format resolver for the copy of the TextFlow.

		 
		 ]]></return>
</method>
<method name='invalidateAll' fullname='flashx.textLayout.elements:IFormatResolver/flashx.textLayout.elements:IFormatResolver:invalidateAll' isStatic='false' isFinal='false' isOverride='false'  param_names='textFlow' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Invalidates any cached formatting information for a TextFlow so that formatting must be recomputed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='invalidate' fullname='flashx.textLayout.elements:IFormatResolver/flashx.textLayout.elements:IFormatResolver:invalidate' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Invalidates cached formatting information on this element because, for example, the <code>parent</code> changed, 

		  or the <code>id</code> or the <code>styleName</code> changed or the <code>typeName</code> changed. 

		 
		 ]]></description>
<langversion><![CDATA[3.0]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	  	 ]]></playerversion>
</method>
<method name='resolveFormat' fullname='flashx.textLayout.elements:IFormatResolver/flashx.textLayout.elements:IFormatResolver:resolveFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='Object' param_defaults='undefined' result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ Given a FlowElement or ContainerController object, return any format settings for it.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[format settings for the specified object.

		 

		 ]]></return>
</method>
<method name='resolveUserFormat' fullname='flashx.textLayout.elements:IFormatResolver/flashx.textLayout.elements:IFormatResolver:resolveUserFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='target;userFormat' param_types='Object;String' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[ Given a FlowElement or ContainerController object and the name of a format property, return the format value

		 or <code>undefined</code> if the value is not found.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[the value of the specified format for the specified object.

		 
		 ]]></return>
</method>
<interfaceRec name='IConfiguration' fullname='flashx.textLayout.elements:IConfiguration' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\IConfiguration.as' namespace='flashx.textLayout.elements' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ Read-only interface to a configuration object.  Used by TextFlow to guarantee it has an unchangeable 

	 configuration once its constructed.

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</interfaceRec>
<method name='clone' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:clone' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:Configuration'>
<description><![CDATA[ Creates a writeable clone of the IConfiguration object.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.2

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='cursorFunction' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:cursorFunction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[ Specifies the callback used for custom cursor.

		 The callback takes a <code>String</code> object, string is cursor name and returns the value to

		 be used in MouseCursor.cursor.

		 

		 This callback provides the user to customize the cursor

		 

		 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.2

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='defaultLinkActiveFormat' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:defaultLinkActiveFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		Specifies the active character format attributes that initially apply for all links (LinkElement objects) in the text 

		flow. These are defaults for new LinkElement objects that don't specify values for these attributes. 

		
		<p>Default is <code>null</code>.</p>

		
		]]></description>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[FlowElement#linkActiveFormat 

		]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

		]]></see>
<see><![CDATA[LinkElement

		]]></see>
</method>
<method name='defaultLinkHoverFormat' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:defaultLinkHoverFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		Specifies the initial character format attributes that apply to a link (LinkElement) in the text flow when

		the cursor hovers over it. These are defaults for new LinkElement objects that don't specify values

		for these attributes.

		
		<p>Default is <code>null</code>.</p>

		
		]]></description>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[FlowElement#linkHoverFormat

		]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

		]]></see>
<see><![CDATA[LinkElement

		]]></see>
</method>
<method name='defaultLinkNormalFormat' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:defaultLinkNormalFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		Specifies the initial link attributes for all LinkElement objects in the text flow. These are default

		values for new LinkElement objects that don't specify values for these attributes.

		
		The default normal format displays the link in blue with underlining.

		
		]]></description>
<langversion><![CDATA[3.0

	 	
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[FlowElement#linkNormalFormat

		]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

		]]></see>
<see><![CDATA[LinkElement

		]]></see>
</method>
<method name='defaultListMarkerFormat' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:defaultListMarkerFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:IListMarkerFormat'>
<description><![CDATA[ 

		 Specifies the active character format attributes that initially apply for all ListItems in the text 

		 flow. These are defaults for new ListItemElements objects that don't specify values for these attributes. 

		 
		 <p>Default is <code>null</code>.</p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[FlowElement#linkActiveFormat 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

		 ]]></see>
<see><![CDATA[LinkElement

		 ]]></see>
</method>
<method name='enableAccessibility' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:enableAccessibility/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		Specifies whether accessibility support is turned on or not.  If <code>true</code>, screen readers can read the TextFlow contents.

		
		<p>Default value is <code>false</code>.</p>

		
		]]></description>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[TextFlow

		]]></see>
</method>
<method name='flowComposerClass' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:flowComposerClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Class'>
<description><![CDATA[ Specifies the type of flow composer to attach to a new TextFlow object by default. Default value is StandardFlowComposer.

		
		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.StandardFlowComposer StandardFlowComposer

		]]></see>
<see><![CDATA[flashx.textLayout.elements.TextFlow TextFlow

		

		]]></see>
</method>
<method name='focusedSelectionFormat' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:focusedSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[ 

		The initial selection format (SelectionFormat) for a text flow (TextFlow) when its window has focus. 

		Text Layout Framework uses <code>focusedSelectionFormat</code> to draw the selection when the window is active and one of 

		the containers in the TextFlow has focus. You can override this format using 

		<code>SelectionManager.focusedSelectionFormat</code>, if desired.

		
		<p>The SelectionFormat class specifies the default values, which invert the color of the text and its background.</p>

		
		]]></description>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat SelectionFormat

		]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionManager#focusedSelectionFormat SelectionManager.focusedSelectionFormat

		]]></see>
<see><![CDATA[TextFlow

		]]></see>
</method>
<method name='inactiveSelectionFormat' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:inactiveSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[ 

		The initial selection format (SelectionFormat) for a text flow (TextFlow) when its window is inactive. Text Layout Framework uses 

		<code>inactiveSelectionFormat</code> for drawing the selection when the window is inactive. You can override 

		this format using <code>SelectionManager.inactiveSelectionFormat</code>, if desired.

		
		<p>If you do not override <code>unfocusedSelectionFormat</code> the SelectionFormat values used are:</p> 

		<ul>

		  <li><code>color = 0xffffff</code> (white)</li>

		  <li><code>alpha = 0</code></li>

		  <li><code>blendMode = flash.display.BlendMode.DIFFERENCE</code></li>

		</ul>

		<p>The result is no selection is displayed.</p>

		
		]]></description>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat SelectionFormat

		]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionManager#inactiveSelectionFormat SelectionManager.inactiveSelectionFormat

		]]></see>
<see><![CDATA[TextFlow

		]]></see>
</method>
<method name='inlineGraphicResolverFunction' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:inlineGraphicResolverFunction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[ Specifies the callback used for resolving an inline graphic element.

		The callback takes a <code>flashx.textLayout.elements.InlineGraphicElement</code> object and returns

		the value to be used as the element's <code>flashx.textLayout.elements.InlineGraphicElement#source</code>.

		

		This callback provides the mechanism to delay providing an inline graphic element's source until just before it is composed.

		<p><strong>Note:</strong> this callback will be invoked only if a 

		placeholder source of String type is already set. Moreover, it may be invoked

		multiple times. </p>

		

		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.InlineGraphicElement InlineGraphicElement

		

		]]></see>
</method>
<method name='manageEnterKey' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:manageEnterKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		Specifies whether the Enter / Return key is entered as text by Text Layout Framework, to split a paragraph for example,

		or the client code handles it. The client code might handle it by committing a form that has a default button 

		for that purpose, for example. 

		
		<p>Default value is <code>true</code>.</p>

		
		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</method>
<method name='manageTabKey' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:manageTabKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		Specifies whether the TAB key is entered as text by Text Layout Framework, or Flash Player or AIR handles it and 

		turns it into a tabbed panel event. 

		
		<p>Default value is <code>false</code>.</p>

		
		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</method>
<method name='overflowPolicy' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:overflowPolicy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		Policy used for deciding whether the last line of a container fits in the container, or whether it overflows.

		Use the constants of the OverflowPolicy class to set this property.

		
		<p>Default value is OverflowPolicy.FIT_DESCENDERS, which fits the line in the composition area if the area

		from the top to the baseline fits.</p>

		
		]]></description>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[OverflowPolicy

		]]></see>
</method>
<method name='releaseLineCreationData' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:releaseLineCreationData/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Requests that the process of composing text release line creation data after composing each paragraph.  

		This request saves memory but slows down the composing process.

		
		<p>Default value is <code>false</code>.</p>

		
		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.StandardFlowComposer StandardFlowComposer

		]]></see>
<see><![CDATA[flash.text.engine.TextBlock#releaseLineCreationData() TextBlock.releaseLineCreationData()

		

		]]></see>
</method>
<method name='scrollDragDelay' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:scrollDragDelay/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		Specifies a timed delay between one scroll and the next to prevent scrolling from going 

		too fast. This value specifies what the delay is in milliseconds. The default value is 35.

		
		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</method>
<method name='scrollDragPixels' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:scrollDragPixels/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Specifies the default number of pixels to scroll when the user initiates auto scrolling by dragging 

		the selection. Default value is 20.

		
		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</method>
<method name='scrollMouseWheelMultiplier' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:scrollMouseWheelMultiplier/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Specifies the default number of pixels to scroll for Mouse wheel events. Default value is 20.

		
		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</method>
<method name='scrollPagePercentage' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:scrollPagePercentage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		Specifies the default percentage of the text flow to scroll for page scrolls. Default value is

		7.0 / 8.0, or .875.

		
		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</method>
<method name='textFlowInitialFormat' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:textFlowInitialFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		Specifies the initial format TextLayoutFormat configuration for a text flow (TextFlow object).

		
		<p>Default is <code>null</code>.</p>

		
		]]></description>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[TextFlow

		]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

		]]></see>
</method>
<method name='unfocusedSelectionFormat' fullname='flashx.textLayout.elements:IConfiguration/flashx.textLayout.elements:IConfiguration:unfocusedSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[ 

		The initial selection format that Text Layout Framework uses to draw the selection when the window is active but none of the containers

		in the TextFlow have focus. You can override this format using <code>SelectionManager.unfocusedSelectionFormat</code>, if desired.

		
		<p>If you do not override <code>unfocusedSelectionFormat</code> the SelectionFormat values used are:</p>

		
		<ul>

		  <li><code>color = 0xffffff</code> (white)</li>

		  <li><code>alpha = 0</code></li>

		  <li><code>blendMode = flash.display.BlendMode.DIFFERENCE</code></li>

		</ul>

		<p>The result is no selection is displayed.</p>

		
		]]></description>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat SelectionFormat

		]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionManager#unfocusedSelectionFormat SelectionManager.unfocusedSelectionFormat

		]]></see>
<see><![CDATA[TextFlow

		]]></see>
</method>
<classRec name='TextRange' fullname='flashx.textLayout.elements:TextRange' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\TextRange.as' namespace='flashx.textLayout.elements' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A read only class that describes a range of contiguous text. Such a range occurs when you select a

	 section of text. The range consists of the anchor point of the selection, <code>anchorPosition</code>,

	 and the point that is to be modified by actions, <code>activePosition</code>.  As block selections are 

	 modified and extended <code>anchorPosition</code> remains fixed and <code>activePosition</code> is modified.  

	 The anchor position may be placed in the text before or after the active position.

	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow TextFlow

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionState SelectionState

	 ]]></see>
</classRec>
<method name='TextRange' fullname='flashx.textLayout.elements:TextRange/TextRange' isStatic='false' isFinal='false' isOverride='false'  param_names='root;anchorIndex;activeIndex' param_types='flashx.textLayout.elements:TextFlow;int;int' param_defaults='undefined;undefined;undefined' result_type='*'>
<description><![CDATA[ Constructor - creates a new TextRange instance.  A TextRange can be (-1,-1), indicating no range, or a pair of 

		values from 0 to <code>TextFlow.textLength</code>.

		
		]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[root	the TextFlow associated with the selection.

		 ]]></param>
<param><![CDATA[anchorIndex	the index position of the anchor in the selection. The first position in the text is position 0.

		 ]]></param>
<param><![CDATA[activeIndex	the index position of the active location in the selection. The first position in the text is position 0. 

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[FlowElement#textLength

		 ]]></see>
</method>
<method name='clampToRange' fullname='flashx.textLayout.elements:TextRange/private:clampToRange' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='int'>
</method>
<method name='updateRange' fullname='flashx.textLayout.elements:TextRange/updateRange' isStatic='false' isFinal='false' isOverride='false'  param_names='newAnchorPosition;newActivePosition' param_types='int;int' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[ Update the range with new anchor or active position values.

		
		]]></description>
<langversion><![CDATA[3.0

		  ]]></langversion>
<param><![CDATA[newAnchorPosition	the anchor index of the selection.

		  ]]></param>
<param><![CDATA[newActivePosition	the active index of the selection.

		  ]]></param>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<return><![CDATA[true if selection is changed.

		 ]]></return>
</method>
<method name='absoluteEnd' fullname='flashx.textLayout.elements:TextRange/absoluteEnd/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ End of the selection, as an absolute position in the TextFlow.

		]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='absoluteStart' fullname='flashx.textLayout.elements:TextRange/absoluteStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Start of the selection, as an absolute position in the TextFlow.

		]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='activePosition' fullname='flashx.textLayout.elements:TextRange/activePosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Active position of the selection, as an absolute position in the TextFlow.

		]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='anchorPosition' fullname='flashx.textLayout.elements:TextRange/anchorPosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Anchor position of the selection, as an absolute position in the TextFlow.

		]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='textFlow' fullname='flashx.textLayout.elements:TextRange/textFlow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[ Returns the TextFlow associated with the selection.

		]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='absoluteEnd' fullname='flashx.textLayout.elements:TextRange/absoluteEnd/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='absoluteStart' fullname='flashx.textLayout.elements:TextRange/absoluteStart/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='activePosition' fullname='flashx.textLayout.elements:TextRange/activePosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='anchorPosition' fullname='flashx.textLayout.elements:TextRange/anchorPosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='textFlow' fullname='flashx.textLayout.elements:TextRange/textFlow/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='void'>
</method>
<field name='_activePosition' fullname='flashx.textLayout.elements:TextRange/private:_activePosition' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ Active end of the current selection, as an absolute position in the TextFlow. ]]></description>
</field>
<field name='_anchorPosition' fullname='flashx.textLayout.elements:TextRange/private:_anchorPosition' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ Anchor point of the current selection, as an absolute position in the TextFlow. ]]></description>
</field>
<field name='_textFlow' fullname='flashx.textLayout.elements:TextRange/private:_textFlow' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
<description><![CDATA[ The TextFlow of the selection.

 	 	 ]]></description>
</field>
<classRec name='OverflowPolicy' fullname='flashx.textLayout.elements:OverflowPolicy' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\OverflowPolicy.as' namespace='flashx.textLayout.elements' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  The OverflowPolicy class defines a set of constants for the <code>overflowPolicy</code> property

	  of the IConfiguration class. This defines how the composer will treat lines at the end of the composition area.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<field name='FIT_ANY' fullname='flashx.textLayout.elements:OverflowPolicy/FIT_ANY' type='String' isStatic='true' isConst='true' defaultValue='fitAny' >
<description><![CDATA[ 

	 Fit the line in the composition area if any part of the line fits.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</field>
<field name='FIT_DESCENDERS' fullname='flashx.textLayout.elements:OverflowPolicy/FIT_DESCENDERS' type='String' isStatic='true' isConst='true' defaultValue='fitDescenders' >
<description><![CDATA[ 

	 Fit the line in the composition area if the area from the top to the baseline fits.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</field>
<classRec name='GlobalSettings' fullname='flashx.textLayout.elements:GlobalSettings' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\GlobalSettings.as' namespace='flashx.textLayout.elements' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ Configuration that applies to all TextFlow objects.

     ]]></description>
<playerversion><![CDATA[Flash 10

     ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

     ]]></playerversion>
</classRec>
<method name='defaultResourceStringFunction' fullname='flashx.textLayout.elements:GlobalSettings/tlf_internal:defaultResourceStringFunction' isStatic='true' isFinal='false' isOverride='false'  param_names='resourceName;parameters' param_types='String;Array' param_defaults='undefined;null' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='substitute' fullname='flashx.textLayout.elements:GlobalSettings/tlf_internal:substitute' isStatic='true' isFinal='false' isOverride='false'  param_names='str;rest' param_types='String;restParam' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='alwaysCalculateWhitespaceBounds' fullname='flashx.textLayout.elements:GlobalSettings/tlf_internal:alwaysCalculateWhitespaceBounds/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='enableDefaultTabStops' fullname='flashx.textLayout.elements:GlobalSettings/tlf_internal:enableDefaultTabStops/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

         ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='enableSearch' fullname='flashx.textLayout.elements:GlobalSettings/enableSearch/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Controls whether the text will be visible to a search engine indexer. Defaults to <code>true</code>.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='fontMapperFunction' fullname='flashx.textLayout.elements:GlobalSettings/fontMapperFunction/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[ 

        Specifies the callback used for font mapping.

        The callback takes a <code>flash.text.engine.FontDescription</code> object and updates it as needed.

        

        After setting a new font mapping callback, or changing the behavior of the exisiting font mapping callback, 

        the client must explicitly call <code>flashx.textLayout.elements.TextFlow.invalidateAllFormats</code> for each impacted text flow.

        This ensures that whenever a leaf element in the text flow is next recomposed, the FontDescription applied to it is recalculated, and the the callback is invoked. 

        

        ]]></description>
<langversion><![CDATA[3.0

        ]]></langversion>
<playerversion><![CDATA[Flash 10

        ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

        ]]></playerversion>
<see><![CDATA[flash.text.engine.FontDescription FontDescription

        ]]></see>
<see><![CDATA[TextFlow.invalidateAllFormats invalidateAllFormats

        

        ]]></see>
</method>
<method name='resolveFontLookupFunction' fullname='flashx.textLayout.elements:GlobalSettings/resolveFontLookupFunction/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[ 

         Specifies the callback used for changing the FontLookup based on swfcontext.  The function will be called each time an ElementFormat is computed.

         It gives the client the opportunity to modify the FontLookup setting.  The function is called with two parameters an ISWFContext and an ITextLayoutFormat.

         It must return a valid FontLookup.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.ISWFContext

         ]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat

         ]]></see>
<see><![CDATA[flash.text.engine.ElementFormat

         ]]></see>
<see><![CDATA[flash.text.engine.FontLookup

         

         ]]></see>
</method>
<method name='resourceStringFunction' fullname='flashx.textLayout.elements:GlobalSettings/resourceStringFunction/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[ Function that takes two parameters, a resource id and an optional array of parameters to substitute into the string.

         The string is of form "Content {0} more content {1}".  The parameters are read from the optional array and substituted for the bracketed substrings.

         TLF provides a default implementation with

         default strings.  Clients may replace this function with their own implementation for localization.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='alwaysCalculateWhitespaceBounds' fullname='flashx.textLayout.elements:GlobalSettings/tlf_internal:alwaysCalculateWhitespaceBounds/set' isStatic='true' isFinal='false' isOverride='false'  param_names='val' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='enableDefaultTabStops' fullname='flashx.textLayout.elements:GlobalSettings/tlf_internal:enableDefaultTabStops/set' isStatic='true' isFinal='false' isOverride='false'  param_names='val' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='enableSearch' fullname='flashx.textLayout.elements:GlobalSettings/enableSearch/set' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='fontMapperFunction' fullname='flashx.textLayout.elements:GlobalSettings/fontMapperFunction/set' isStatic='true' isFinal='false' isOverride='false'  param_names='val' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='resolveFontLookupFunction' fullname='flashx.textLayout.elements:GlobalSettings/resolveFontLookupFunction/set' isStatic='true' isFinal='false' isOverride='false'  param_names='val' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='resourceStringFunction' fullname='flashx.textLayout.elements:GlobalSettings/resourceStringFunction/set' isStatic='true' isFinal='false' isOverride='false'  param_names='val' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<field name='_alwaysCalculateWhitespaceBounds' fullname='flashx.textLayout.elements:GlobalSettings/private:_alwaysCalculateWhitespaceBounds' type='Boolean' isStatic='true' isConst='false' defaultValue='false' >
</field>
<field name='_enableDefaultTabStops' fullname='flashx.textLayout.elements:GlobalSettings/private:_enableDefaultTabStops' type='Boolean' isStatic='true' isConst='false' defaultValue='false' >
</field>
<field name='_enableSearch' fullname='flashx.textLayout.elements:GlobalSettings/private:_enableSearch' type='Boolean' isStatic='true' isConst='false' defaultValue='true' >
</field>
<field name='_fontMapperFunction' fullname='flashx.textLayout.elements:GlobalSettings/private:_fontMapperFunction' type='Function' isStatic='true' isConst='false' >
</field>
<field name='_resolveFontLookupFunction' fullname='flashx.textLayout.elements:GlobalSettings/private:_resolveFontLookupFunction' type='Function' isStatic='true' isConst='false' >
</field>
<field name='_resourceStringFunction' fullname='flashx.textLayout.elements:GlobalSettings/private:_resourceStringFunction' type='Function' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='resourceDict' fullname='flashx.textLayout.elements:GlobalSettings/private:resourceDict' type='Object' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='InlineGraphicElementStatus' fullname='flashx.textLayout.elements:InlineGraphicElementStatus' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\InlineGraphicElementStatus.as' namespace='flashx.textLayout.elements' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[ The InlineGraphicElementStatus class defines a set of constants for checking the value of

     <code>InlineGraphicElement.status</code>.

     
     ]]></description>
<langversion><![CDATA[3.0

     
     ]]></langversion>
<playerversion><![CDATA[Flash 10

     ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

     ]]></playerversion>
<see><![CDATA[InlineGraphicElement#status

     ]]></see>
</classRec>
<field name='ERROR' fullname='flashx.textLayout.elements:InlineGraphicElementStatus/ERROR' type='String' isStatic='true' isConst='true' defaultValue='error' >
<description><![CDATA[ An error occurred during loading of a referenced graphic. 

         
         ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</field>
<field name='LOADING' fullname='flashx.textLayout.elements:InlineGraphicElementStatus/LOADING' type='String' isStatic='true' isConst='true' defaultValue='loading' >
<description><![CDATA[ Load has been initiated (but not completed) on a graphic element that is a URL.  

         
         ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</field>
<field name='LOAD_PENDING' fullname='flashx.textLayout.elements:InlineGraphicElementStatus/LOAD_PENDING' type='String' isStatic='true' isConst='true' defaultValue='loadPending' >
<description><![CDATA[ Graphic element is an URL that has not been loaded.  

    	 
    	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</field>
<field name='READY' fullname='flashx.textLayout.elements:InlineGraphicElementStatus/READY' type='String' isStatic='true' isConst='true' defaultValue='ready' >
<description><![CDATA[ Graphic is completely loaded and properly sized. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</field>
<field name='SIZE_PENDING' fullname='flashx.textLayout.elements:InlineGraphicElementStatus/SIZE_PENDING' type='String' isStatic='true' isConst='true' defaultValue='sizePending' >
<description><![CDATA[ 

         Graphic element with auto or percentage width/height has completed loading but has not been recomposed.  At the next 

         recompose the actual size of the graphic element is calculated. 

         
         ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</field>
<classRec name='LinkState' fullname='flashx.textLayout.elements:LinkState' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\LinkState.as' namespace='flashx.textLayout.elements' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  The LinkState class defines a set of constants for the <code>linkState</code> property

	  of the LinkElement class. 

	 
	 ]]></description>
<includeExample><![CDATA[examples\LinkStateExample.as -noswf

	 
	 ]]></includeExample>
<langversion><![CDATA[3.0

	 
	  ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[LinkElement#linkState

	 ]]></see>
</classRec>
<field name='ACTIVE' fullname='flashx.textLayout.elements:LinkState/ACTIVE' type='String' isStatic='true' isConst='true' defaultValue='active' >
<description><![CDATA[ 

	 Value for the active state, which occurs when you hold the mouse down over a link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</field>
<field name='HOVER' fullname='flashx.textLayout.elements:LinkState/HOVER' type='String' isStatic='true' isConst='true' defaultValue='hover' >
<description><![CDATA[ 

	 Value for the hover state, which occurs when you drag the mouse over a link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</field>
<field name='LINK' fullname='flashx.textLayout.elements:LinkState/LINK' type='String' isStatic='true' isConst='true' defaultValue='link' >
<description><![CDATA[ 

	 Value for the normal, default link state. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</field>
<field name='SUPPRESSED' fullname='flashx.textLayout.elements:LinkState/tlf_internal:SUPPRESSED' type='String' isStatic='true' isConst='true' defaultValue='supressed' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='FlowElement' fullname='flashx.textLayout.elements:FlowElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\FlowElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='Object' interfaces='flashx.textLayout.formats:ITextLayoutFormat' isFinal='false' isDynamic='false' >
<description><![CDATA[

 The text in a flow is stored in tree form with the elements of the tree representing logical

 divisions within the text. The FlowElement class is the abstract base class of all the objects in this tree.

 FlowElement objects represent paragraphs, spans of text within paragraphs, and

 groups of paragraphs.

 
 <p>The root of a composable FlowElement tree is always a TextFlow object. Leaf elements of the tree are always 

 subclasses of the FlowLeafElement class. All leaves arranged in a composable TextFlow have a ParagraphElement ancestor.

 </p> 

 
 <p>You cannot create a FlowElement object directly. Invoking <code>new FlowElement()</code> throws an error 

 exception.</p>

 
 ]]></description>
<langversion><![CDATA[3.0

 

 ]]></langversion>
<playerversion><![CDATA[Flash 10

 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 ]]></playerversion>
<see><![CDATA[FlowGroupElement

 ]]></see>
<see><![CDATA[FlowLeafElement

 ]]></see>
<see><![CDATA[InlineGraphicElement

 ]]></see>
<see><![CDATA[ParagraphElement

 ]]></see>
<see><![CDATA[SpanElement

 ]]></see>
<see><![CDATA[TextFlow

 ]]></see>
</classRec>
<method name='FlowElement' fullname='flashx.textLayout.elements:FlowElement/FlowElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Base class - invoking <code>new FlowElement()</code> throws an error exception.

		
		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='appendElementsForDelayedUpdate' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:appendElementsForDelayedUpdate' isStatic='false' isFinal='false' isOverride='false'  param_names='tf;changeType' param_types='flashx.textLayout.elements:TextFlow;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='applyDelayedElementUpdate' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:applyDelayedElementUpdate' isStatic='false' isFinal='false' isOverride='false'  param_names='textFlow;okToUnloadGraphics;hasController' param_types='flashx.textLayout.elements:TextFlow;Boolean;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='applyFunctionToElements' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:applyFunctionToElements' isStatic='false' isFinal='false' isOverride='false'  param_names='func' param_types='Function' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='applyWhiteSpaceCollapse' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:applyWhiteSpaceCollapse' isStatic='false' isFinal='false' isOverride='false'  param_names='collapse' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Strips white space from the element and its children, according to the whitespaceCollaspse

		  value that has been applied to the element or inherited from its parent.

		  If a FlowLeafElement's attrs are set to WhiteSpaceCollapse.PRESERVE, then collapse is

		  skipped.

		  ]]></description>
<see><![CDATA[text.formats.WhiteSpaceCollapse

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='attributesChanged' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:attributesChanged' isStatic='false' isFinal='false' isOverride='false'  param_names='notifyModelChanged' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearStyle' fullname='flashx.textLayout.elements:FlowElement/clearStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Clears the style specified by the <code>styleProp</code> parameter from this FlowElement object. Sets 

		 the value to <code>undefined</code>.

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowElement_clearStyleExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[styleProp The name of the style to clear.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[#getStyle()

		 ]]></see>
<see><![CDATA[#setStyle()

		 ]]></see>
<see><![CDATA[#userStyles

		 

		 ]]></see>
</method>
<method name='createContentElement' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:createContentElement' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createTextLayoutFormatPrototype' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:createTextLayoutFormatPrototype' isStatic='true' isFinal='false' isOverride='false'  param_names='localStyles;parentPrototype' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:TextLayoutFormat' param_defaults='undefined;undefined' result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='deepCopy' fullname='flashx.textLayout.elements:FlowElement/deepCopy' isStatic='false' isFinal='false' isOverride='false'  param_names='relativeStart;relativeEnd' param_types='int;int' param_defaults='0;-1' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[

		 Makes a deep copy of this FlowElement object, including any children, copying the content between the two specified

		 character positions and returning the copy as a FlowElement object.

		 

		 <p>With no arguments, <code>deepCopy()</code> defaults to copying the entire element.</p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\FlowElement_deepCopyExample.as -noswf

	 	 

	 	 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<param><![CDATA[relativeStart	relative text position of the first character to copy. First position is 0.

		 ]]></param>
<param><![CDATA[relativeEnd	relative text position of the last character to copy. A value of -1 indicates copy to end.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the object created by the deep copy operation.

		 ]]></return>
<see><![CDATA[#shallowCopy()

		 ]]></see>
</method>
<method name='deleteContainerText' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:deleteContainerText' isStatic='false' isFinal='false' isOverride='false'  param_names='endPos;deleteTotal' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='doComputeTextLayoutFormat' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:doComputeTextLayoutFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='equalStylesForMerge' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:equalStylesForMerge' isStatic='false' isFinal='false' isOverride='false'  param_names='elem' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='equalUserStyles' fullname='flashx.textLayout.elements:FlowElement/equalUserStyles' isStatic='false' isFinal='false' isOverride='false'  param_names='otherElement' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ Compare the userStyles of this with otherElement's userStyles. 

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowElement_equalUserStylesExample.as -noswf

	 	 

	 	 ]]></includeExample>
<langversion><![CDATA[3.0

		 
	 	 ]]></langversion>
<param><![CDATA[otherElement the FlowElement object with which to compare user styles

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if the user styles are equal; false otherwise.

		 
		 ]]></return>
<see><![CDATA[#getStyle()

	 	 ]]></see>
<see><![CDATA[#setStyle()

	 	 ]]></see>
<see><![CDATA[#userStyles

		 ]]></see>
</method>
<method name='formatChanged' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:formatChanged' isStatic='false' isFinal='false' isOverride='false'  param_names='notifyModelChanged' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[ This gets called when an element has changed its attributes. This may happen because an

		 ancestor element changed it attributes.

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getAbsoluteStart' fullname='flashx.textLayout.elements:FlowElement/getAbsoluteStart' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns the start location of the element in the text flow as an absolute index. The first character in the flow

		 is position 0.

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowElement_getAbsoluteStartExample.as -noswf

		 
 		 ]]></includeExample>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[The index of the start of the element from the start of the TextFlow object.

 		 
 		 ]]></return>
<see><![CDATA[#parentRelativeStart

 		 ]]></see>
<see><![CDATA[TextFlow

	 	 ]]></see>
</method>
<method name='getAncestorWithContainer' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:getAncestorWithContainer' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:ContainerFormattedElement'>
<description><![CDATA[ Returns the ContainerFormattedElement that specifies its containers for filling. This ContainerFormattedElement

		 object has its own columns and can control ColumnDirection and BlockProgression. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the ancestor, with its container, of this FlowElement object.

		 
		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='getCharAtPosition' fullname='flashx.textLayout.elements:FlowElement/getCharAtPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ 

		Returns the character at the specified position, relative to this FlowElement object. The first

		character is at relative position 0.

		

		]]></description>
<includeExample><![CDATA[examples\FlowElement_getCharAtPositionExample.as -noswf

	 	

	 	]]></includeExample>
<langversion><![CDATA[3.0

	 	
	 	]]></langversion>
<param><![CDATA[relativePosition	The relative position of the character in this FlowElement object.

		]]></param>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<return><![CDATA[String containing the character.

		
		]]></return>
<see><![CDATA[#getCharCodeAtPosition()

	 	]]></see>
</method>
<method name='getCharCodeAtPosition' fullname='flashx.textLayout.elements:FlowElement/getCharCodeAtPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[ Returns the character code at the specified position, relative to this FlowElement. The first

		character is at relative position 0.

		
		]]></description>
<includeExample><![CDATA[examples\FlowElement_getCharCodeAtPositionExample.as -noswf

	 	
	 	]]></includeExample>
<langversion><![CDATA[3.0

	 	
	 	]]></langversion>
<param><![CDATA[relativePosition 	The relative position of the character in this FlowElement object.

		
		]]></param>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<return><![CDATA[the Unicode value for the character at the specified position.

		
		]]></return>
<see><![CDATA[#getCharAtPosition()

	 	]]></see>
</method>
<method name='getEffectivePaddingBottom' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:getEffectivePaddingBottom' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingLeft' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:getEffectivePaddingLeft' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingRight' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:getEffectivePaddingRight' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingTop' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:getEffectivePaddingTop' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getElementRelativeStart' fullname='flashx.textLayout.elements:FlowElement/getElementRelativeStart' isStatic='false' isFinal='false' isOverride='false'  param_names='ancestorElement' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='int'>
<description><![CDATA[

		 Returns the start of this element relative to an ancestor element. Assumes that the

		 ancestor element is in the parent chain. If the ancestor element is the parent, this is the

		 same as <code>this.parentRelativeStart</code>.  If the ancestor element is the grandparent, this is the same as 

		 <code>parentRelativeStart</code> plus <code>parent.parentRelativeStart</code> and so on.

		 

		 ]]></description>
<includeExample><![CDATA[examples\FlowElement_getElementRelativeStartExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<param><![CDATA[ancestorElement The element from which you want to find the relative start of this element.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the offset of this element.

		 
		 ]]></return>
<see><![CDATA[#getAbsoluteStart()

		 ]]></see>
</method>
<method name='getEnclosingController' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:getEnclosingController' isStatic='false' isFinal='false' isOverride='false'  param_names='relativePos' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.container:ContainerController'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEventMirror' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:getEventMirror' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.events:IEventDispatcher'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.EventDispatcher

		 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowElementMouseEvent

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='getNextSibling' fullname='flashx.textLayout.elements:FlowElement/getNextSibling' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ Returns the next FlowElement sibling in the text flow hierarchy. 

		
		]]></description>
<includeExample><![CDATA[examples\FlowElement_getNextSiblingExample.as -noswf

		
		]]></includeExample>
<langversion><![CDATA[3.0

	 	
	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<return><![CDATA[the next FlowElement object of the same type, or null if there is no sibling.

		
		]]></return>
<see><![CDATA[#getPreviousSibling()

	 	]]></see>
</method>
<method name='getParagraph' fullname='flashx.textLayout.elements:FlowElement/getParagraph' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:ParagraphElement'>
<description><![CDATA[

		 Returns the ParagraphElement object associated with this element. It looks up the text flow hierarchy and returns 

		 the first ParagraphElement object.

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowElement_getParagraphExample.as -noswf

	 	 

	 	 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the ParagraphElement object that's associated with this FlowElement object.

		 
		 ]]></return>
<see><![CDATA[#getTextFlow()

	 	 ]]></see>
<see><![CDATA[ParagraphElement

		 ]]></see>
</method>
<method name='getParentByType' fullname='flashx.textLayout.elements:FlowElement/getParentByType' isStatic='false' isFinal='false' isOverride='false'  param_names='elementType' param_types='Class' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 Returns the FlowElement object that contains this FlowElement object, if this element is contained within 

		 an element of a particular type. 

		 

		 Returns the FlowElement it is contained in. Otherwise, it returns null.

		 

		 ]]></description>
<param><![CDATA[elementType	type of element for which to check

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='getPreviousSibling' fullname='flashx.textLayout.elements:FlowElement/getPreviousSibling' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ Returns the previous FlowElement sibling in the text flow hierarchy. 

		
		]]></description>
<includeExample><![CDATA[examples\FlowElement_getPreviousSiblingExample.as -noswf

		
		]]></includeExample>
<langversion><![CDATA[3.0

	 	
	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<return><![CDATA[the previous FlowElement object of the same type, or null if there is no previous sibling.

		
		]]></return>
<see><![CDATA[#getNextSibling()

		]]></see>
</method>
<method name='getPrivateStyle' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:getPrivateStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleName' param_types='String' param_defaults='undefined' result_type='*'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[styleName	name of the property

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='getStyle' fullname='flashx.textLayout.elements:FlowElement/getStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp' param_types='String' param_defaults='undefined' result_type='*'>
<description><![CDATA[ Returns the value of the style specified by the <code>styleProp</code> parameter, which specifies

		 the style name and can include any user style name. Accesses an existing span, paragraph, text flow,

		 or container style. Searches the parent tree if the style's value is <code>undefined</code> on a 

		 particular element.

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowElement_getStyleExample.as -noswf

	 	 
	 	 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<param><![CDATA[styleProp The name of the style whose value is to be retrieved.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[The value of the specified style. The type varies depending on the type of the style being

		 accessed. Returns <code>undefined</code> if the style is not set.

		 

		 ]]></return>
<see><![CDATA[#clearStyle()

		 ]]></see>
<see><![CDATA[#setStyle()

		 ]]></see>
<see><![CDATA[#userStyles

		 ]]></see>
</method>
<method name='getTextFlow' fullname='flashx.textLayout.elements:FlowElement/getTextFlow' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[

		 Climbs the text flow hierarchy to return the root TextFlow object for the element.

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowElement_getTextFlowExample.as -noswf

	 	 
	 	 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[The root TextFlow object for this FlowElement object.

		 
		 ]]></return>
<see><![CDATA[TextFlow

		 ]]></see>
</method>
<method name='getText' fullname='flashx.textLayout.elements:FlowElement/getText' isStatic='false' isFinal='false' isOverride='false'  param_names='relativeStart;relativeEnd;paragraphSeparator' param_types='int;int;String' param_defaults='0;-1;
' result_type='String'>
<description><![CDATA[ 

		 Gets the specified range of text from a flow element.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[relativeStart The starting position of the range of text to be retrieved, relative to the start of the FlowElement

		 ]]></param>
<param><![CDATA[relativeEnd The ending position of the range of text to be retrieved, relative to the start of the FlowElement, -1 for up to the end of the element

		 ]]></param>
<param><![CDATA[paragraphSeparator character to put between paragraphs

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[The requested text.

		 

		 ]]></return>
</method>
<method name='getUserStyleWorker' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:getUserStyleWorker' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp' param_types='String' param_defaults='undefined' result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hasActiveEventMirror' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:hasActiveEventMirror' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialized' fullname='flashx.textLayout.elements:FlowElement/initialized' isStatic='false' isFinal='false' isOverride='false'  param_names='document;id' param_types='Object;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ Called for MXML objects after the implementing object has been created and all component properties specified on the MXML tag have been initialized. 

		 ]]></description>
<param><![CDATA[document The MXML document that created the object.

		 ]]></param>
<param><![CDATA[id The identifier used by document to refer to this object.

		 ]]></param>
</method>
<method name='mergeToPreviousIfPossible' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:mergeToPreviousIfPossible' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Merge flow element into previous flow element if possible. ]]></description>
<private><![CDATA[]]></private>
<Return><![CDATA[true--> did the merge

		 ]]></Return>
</method>
<method name='modelChanged' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:modelChanged' isStatic='false' isFinal='false' isOverride='false'  param_names='changeType;element;changeStart;changeLen;needNormalize;bumpGeneration' param_types='String;flashx.textLayout.elements:FlowElement;int;int;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined;true;true' result_type='void'>
<description><![CDATA[

		 Called whenever the model is modified.  Updates the TextFlow and notifies the selection manager - if it is set.

		 This method has to be called while the element is still in the flow

		 ]]></description>
<param><![CDATA[changeType - type of change

		 ]]></param>
<param><![CDATA[element - the actual element that is modified

		 ]]></param>
<param><![CDATA[start - elem relative offset of start of damage

		 ]]></param>
<param><![CDATA[len - length of damage

		 ]]></param>
<see><![CDATA[flow.model.ModelChange

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='normalizeRange' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:normalizeRange' isStatic='false' isFinal='false' isOverride='false'  param_names='normalizeStart;normalizeEnd' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='quickCloneTextLayoutFormat' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:quickCloneTextLayoutFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='sibling' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Support for splitting FlowLeafElements.  Does a quick copy of _characterFormat if necessary.  ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='releaseContentElement' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:releaseContentElement' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setParentAndRelativeStartOnly' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:setParentAndRelativeStartOnly' isStatic='false' isFinal='false' isOverride='false'  param_names='newParent;newStart' param_types='flashx.textLayout.elements:FlowGroupElement;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setParentAndRelativeStart' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:setParentAndRelativeStart' isStatic='false' isFinal='false' isOverride='false'  param_names='newParent;newStart' param_types='flashx.textLayout.elements:FlowGroupElement;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setParentRelativeStart' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:setParentRelativeStart' isStatic='false' isFinal='false' isOverride='false'  param_names='newStart' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setPrivateStyle' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:setPrivateStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleName;val' param_types='String;*' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[styleName	name of the property

		 ]]></param>
<param><![CDATA[val value of the property

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='setStyle' fullname='flashx.textLayout.elements:FlowElement/setStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp;newValue' param_types='String;*' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ Sets the style specified by the <code>styleProp</code> parameter to the value specified by the

		<code>newValue</code> parameter. You can set a span, paragraph, text flow, or container style, including

		any user name-value pair.

		
		<p><strong>Note:</strong> If you assign a custom style, Text Layout Framework can import and export it but

		compiled MXML cannot support it.</p>

		
		]]></description>
<includeExample><![CDATA[examples\FlowElement_setStyleExample.as -noswf

			

		]]></includeExample>
<langversion><![CDATA[3.0

		
		]]></langversion>
<param><![CDATA[styleProp The name of the style to set.

		]]></param>
<param><![CDATA[newValue The value to which to set the style.

		

		]]></param>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[#clearStyle()

		]]></see>
<see><![CDATA[#getStyle()

		]]></see>
<see><![CDATA[#userStyles

		]]></see>
</method>
<method name='setStylesInternal' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:setStylesInternal' isStatic='false' isFinal='false' isOverride='false'  param_names='styles' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setTextLength' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:setTextLength' isStatic='false' isFinal='false' isOverride='false'  param_names='newLength' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='shallowCopy' fullname='flashx.textLayout.elements:FlowElement/shallowCopy' isStatic='false' isFinal='false' isOverride='false'  param_names='relativeStart;relativeEnd' param_types='int;int' param_defaults='0;-1' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[

		 Makes a copy of this FlowElement object, copying the content between two specified character positions.

		 It returns the copy as a new FlowElement object. Unlike <code>deepCopy()</code>, <code>shallowCopy()</code> does

		 not copy any of the children of this FlowElement object. 

		 

		 <p>With no arguments, <code>shallowCopy()</code> defaults to copying all of the content.</p>

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowElement_shallowCopyExample.as -noswf

		 
	 	 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<param><![CDATA[relativeStart	The relative text position of the first character to copy. First position is 0.

		 ]]></param>
<param><![CDATA[relativeEnd	The relative text position of the last character to copy. A value of -1 indicates copy to end.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the object created by the copy operation.

		 
		 ]]></return>
<see><![CDATA[#deepCopy()

	 	 ]]></see>
</method>
<method name='splitAtPosition' fullname='flashx.textLayout.elements:FlowElement/splitAtPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 Splits this FlowElement object at the position specified by the <code>relativePosition</code> parameter, which is

		 a relative position in the text for this element. This method splits only SpanElement and FlowGroupElement 

		 objects.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[relativePosition the position at which to split the content of the original object, with the first position being 0.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the new object, which contains the content of the original object, starting at the specified position.

		 
		 ]]></return>
<throws><![CDATA[RangeError if <code>relativePosition</code> is greater than <code>textLength</code>, or less than 0.

		 
		 ]]></throws>
</method>
<method name='styleSelectorChanged' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:styleSelectorChanged' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ This gets called when an element has changed its style selection related attributes. This may happen because an

		 ancestor element changed it attributes.

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateForMustUseComposer' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:updateForMustUseComposer' isStatic='false' isFinal='false' isOverride='false'  param_names='textFlow' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateLengths' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:updateLengths' isStatic='false' isFinal='false' isOverride='false'  param_names='startIdx;len;updateLines' param_types='int;int;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ Update the FlowElements in response to an insertion or deletion.

		  The length of the element inserted to is updated, and the length of 

		  each of its ancestor element. Each of the elements following siblings

		  start index is updated (start index is relative to parent).

		 ]]></description>
<param><![CDATA[startIdx		absolute index in flow where text was inserted

		 ]]></param>
<param><![CDATA[len			number of characters added (negative if removed)

		 updateLines			?? true if lines should be damaged??

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='updateRange' fullname='flashx.textLayout.elements:FlowElement/private:updateRange' isStatic='false' isFinal='false' isOverride='false'  param_names='len' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Update the FlowElement to account for text added before it.

		 
		 ]]></description>
<param><![CDATA[len	number of characters added (may be negative if deletion)

		 ]]></param>
</method>
<method name='writableTextLayoutFormat' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:writableTextLayoutFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowValueHolder'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:FlowElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns true if the class is an abstract base class,

		 false if its OK to construct. Attempting to instantiate an

		 abstract FlowElement class will cause an exception.

		 ]]></description>
<return><![CDATA[Boolean 	true if this is an abstract class

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='alignmentBaseline' fullname='flashx.textLayout.elements:FlowElement/alignmentBaseline/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the baseline to which the dominant baseline aligns. For example, if you set <code>dominantBaseline</code> to ASCENT, setting <code>alignmentBaseline</code> to DESCENT aligns the top of the text with the DESCENT baseline, or below the line.  The largest element in the line generally determines the baselines.<p><img src='../../../images/textLayout_baselines.jpg' alt='baselines' /></p>

		 <p>Legal values are TextBaseline.ROMAN, TextBaseline.ASCENT, TextBaseline.DESCENT, TextBaseline.IDEOGRAPHIC_TOP, TextBaseline.IDEOGRAPHIC_CENTER, TextBaseline.IDEOGRAPHIC_BOTTOM, TextBaseline.USE_DOMINANT_BASELINE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextBaseline.USE_DOMINANT_BASELINE.</p>

		 ]]></description>
<includeExample><![CDATA[examples\TextLayoutFormat_alignmentBaselineExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextBaseline

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='backgroundAlpha' fullname='flashx.textLayout.elements:FlowElement/backgroundAlpha/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Alpha (transparency) value for the background (adopts default value if undefined during cascade). A value of 0 is fully transparent, and a value of 1 is fully opaque. Display objects with alpha set to 0 are active, even though they are invisible.

		 <p>Legal values are numbers from 0 to 1 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of 1.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='backgroundColor' fullname='flashx.textLayout.elements:FlowElement/backgroundColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Background color of the text (adopts default value if undefined during cascade). Can be either the constant value  <code>BackgroundColor.TRANSPARENT</code>, or a hexadecimal value that specifies the three 8-bit RGB (red, green, blue) values; for example, 0xFF0000 is red and 0x00FF00 is green.

		 <p>Legal values as a string are BackgroundColor.TRANSPARENT, FormatValue.INHERIT and uints from 0x0 to 0xffffffff.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BackgroundColor.TRANSPARENT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BackgroundColor

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='baselineShift' fullname='flashx.textLayout.elements:FlowElement/baselineShift/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Amount to shift the baseline from the <code>dominantBaseline</code> value. Units are in pixels, or a percentage of <code>fontSize</code> (in which case, enter a string value, like 140%).  Positive values shift the line up for horizontal text (right for vertical) and negative values shift it down for horizontal (left for vertical). 

		 <p>Legal values are BaselineShift.SUPERSCRIPT, BaselineShift.SUBSCRIPT, FormatValue.INHERIT.</p>

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000 to 1000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BaselineShift

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='bindableElement' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:bindableElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='blockProgression' fullname='flashx.textLayout.elements:FlowElement/blockProgression/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies a vertical or horizontal progression of line placement.

		 Lines are either placed top-to-bottom (<code>BlockProgression.TB</code>, used for horizontal text) or right-to-left (<code>BlockProgression.RL</code>, used for vertical text).

		 <p>Legal values are BlockProgression.RL, BlockProgression.TB, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BlockProgression.TB.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BlockProgression

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='breakOpportunity' fullname='flashx.textLayout.elements:FlowElement/breakOpportunity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls where lines are allowed to break when breaking wrapping text into multiple lines. Set to <code>BreakOpportunity.AUTO</code> to break text normally. Set to <code>BreakOpportunity.NONE</code> to <em>not</em> break the text unless the text would overrun the measure and there are no other places to break the line. Set to <code>BreakOpportunity.ANY</code> to allow the line to break anywhere, rather than just between words. Set to <code>BreakOpportunity.ALL</code> to have each typographic cluster put on a separate line (useful for text on a path).

		 <p>Legal values are BreakOpportunity.ALL, BreakOpportunity.ANY, BreakOpportunity.AUTO, BreakOpportunity.NONE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BreakOpportunity.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.BreakOpportunity

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='cffHinting' fullname='flashx.textLayout.elements:FlowElement/cffHinting/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The type of CFF hinting used for this text. CFF hinting determines whether the Flash runtime forces strong horizontal stems to fit to a sub pixel grid or not. This property applies only if the <code>renderingMode</code> property is set to <code>RenderingMode.CFF</code>, and the font is embedded (<code>fontLookup</code> property is set to <code>FontLookup.EMBEDDED_CFF</code>). At small screen sizes, hinting produces a clear, legible text for human readers.

		 <p>Legal values are CFFHinting.NONE, CFFHinting.HORIZONTAL_STEM, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of CFFHinting.HORIZONTAL_STEM.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.CFFHinting

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='clearFloats' fullname='flashx.textLayout.elements:FlowElement/clearFloats/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls how text wraps around a float. A value of none allows the text to wrap most closely around a float. A value of left causes the text to skip over any portion of the container that has a left float, and a value of right causes the text to skip over any portion of the container that has a right float. A value of both causes the text to skip over any floats.

		 <p>Legal values are ClearFloats.START, ClearFloats.END, ClearFloats.LEFT, ClearFloats.RIGHT, ClearFloats.BOTH, ClearFloats.NONE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of ClearFloats.NONE.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ClearFloats

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.ClearFloats

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='color' fullname='flashx.textLayout.elements:FlowElement/color/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Color of the text. A hexadecimal number that specifies three 8-bit RGB (red, green, blue) values; for example, 0xFF0000 is red and 0x00FF00 is green. It can also be enum value {BLACK, GREEN, GRAY, BLUE, SILVER, LIME, OLIVE, WHITE, YELLOW, MAROON, NAVY, RED, PURPLE, TEAL, FUCHSIA, AQUA, MAGENTA, CYAN}

		 <p>Legal values as a string are ColorName.BLACK, ColorName.GREEN, ColorName.GRAY, ColorName.BLUE, ColorName.SILVER, ColorName.LIME, ColorName.OLIVE, ColorName.WHITE, ColorName.YELLOW, ColorName.MAROON, ColorName.NAVY, ColorName.RED, ColorName.PURPLE, ColorName.TEAL, ColorName.FUCHSIA, ColorName.AQUA, ColorName.MAGENTA, ColorName.CYAN, FormatValue.INHERIT and uints from 0x0 to 0xffffffff.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ColorName

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnBreakAfter' fullname='flashx.textLayout.elements:FlowElement/columnBreakAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls column after before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnBreakBefore' fullname='flashx.textLayout.elements:FlowElement/columnBreakBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls column break before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnCount' fullname='flashx.textLayout.elements:FlowElement/columnCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Number of text columns (adopts default value if undefined during cascade).

		 The column number overrides the  other column settings. Value is an integer, or <code>FormatValue.AUTO</code> if unspecified. If <code>columnCount</code> is not specified,<code>columnWidth</code> is used to create as many columns as can fit in the container.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and from ints from 1 to 50.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnGap' fullname='flashx.textLayout.elements:FlowElement/columnGap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade).

		 Value is a Number

		 <p>Legal values are numbers from 0 to 1000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of 20.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnWidth' fullname='flashx.textLayout.elements:FlowElement/columnWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Column width in pixels (adopts default value if undefined during cascade).

		 If you specify the width of the columns, but not the count, TextLayout will create as many columns of that width as possible, given the  container width and <code>columnGap</code> settings. Any remainder space is left after the last column. Value is a Number.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from 0 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='computedFormat' fullname='flashx.textLayout.elements:FlowElement/computedFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 Returns the computed format attributes that are in effect for this element.

		 Takes into account the inheritance of attributes from parent elements.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

		 ]]></see>
</method>
<method name='containerBreakAfter' fullname='flashx.textLayout.elements:FlowElement/containerBreakAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls container after before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='containerBreakBefore' fullname='flashx.textLayout.elements:FlowElement/containerBreakBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls container break before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='coreStyles' fullname='flashx.textLayout.elements:FlowElement/coreStyles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Returns the <code>coreStyles</code> on this FlowElement.  Note that the getter makes a copy of the core 

		 styles dictionary. The coreStyles object encapsulates the formats that are defined by TextLayoutFormat and are in TextLayoutFormat.description. The

		 <code>coreStyles</code> object consists of an array of <em>stylename-value</em> pairs.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat

		 

		 ]]></see>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='digitCase' fullname='flashx.textLayout.elements:FlowElement/digitCase/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The type of digit case used for this text. Setting the value to <code>DigitCase.OLD_STYLE</code> approximates lowercase letterforms with varying ascenders and descenders. The figures are proportionally spaced. This style is only available in selected typefaces, most commonly in a supplemental or expert font. The <code>DigitCase.LINING</code> setting has all-cap height and is typically monospaced to line up in charts.<p><img src='../../../images/textLayout_digitcase.gif' alt='digitCase' /></p>

		 <p>Legal values are DigitCase.DEFAULT, DigitCase.LINING, DigitCase.OLD_STYLE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of DigitCase.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.DigitCase

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='digitWidth' fullname='flashx.textLayout.elements:FlowElement/digitWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Type of digit width used for this text. This can be <code>DigitWidth.PROPORTIONAL</code>, which looks best for individual numbers, or <code>DigitWidth.TABULAR</code>, which works best for numbers in tables, charts, and vertical rows.<p><img src='../../../images/textLayout_digitwidth.gif' alt='digitWidth' /></p>

		 <p>Legal values are DigitWidth.DEFAULT, DigitWidth.PROPORTIONAL, DigitWidth.TABULAR, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of DigitWidth.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.DigitWidth

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='direction' fullname='flashx.textLayout.elements:FlowElement/direction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the default bidirectional embedding level of the text in the text block. 

		 Left-to-right reading order, as in Latin-style scripts, or right-to-left reading order, as in Arabic or Hebrew. This property also affects column direction when it is applied at the container level. Columns can be either left-to-right or right-to-left, just like text. Below are some examples:<p><img src='../../../images/textLayout_direction.gif' alt='direction' /></p>

		 <p>Legal values are Direction.LTR, Direction.RTL, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Direction.LTR.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.Direction

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='dominantBaseline' fullname='flashx.textLayout.elements:FlowElement/dominantBaseline/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies which element baseline snaps to the <code>alignmentBaseline</code> to determine the vertical position of the element on the line. A value of <code>TextBaseline.AUTO</code> selects the dominant baseline based on the <code>locale</code> property of the parent paragraph.  For Japanese and Chinese, the selected baseline value is <code>TextBaseline.IDEOGRAPHIC_CENTER</code>; for all others it is <code>TextBaseline.ROMAN</code>. These baseline choices are determined by the choice of font and the font size.<p><img src='../../../images/textLayout_baselines.jpg' alt='baselines' /></p>

		 <p>Legal values are FormatValue.AUTO, TextBaseline.ROMAN, TextBaseline.ASCENT, TextBaseline.DESCENT, TextBaseline.IDEOGRAPHIC_TOP, TextBaseline.IDEOGRAPHIC_CENTER, TextBaseline.IDEOGRAPHIC_BOTTOM, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextBaseline

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='firstBaselineOffset' fullname='flashx.textLayout.elements:FlowElement/firstBaselineOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the baseline position of the first line in the container. Which baseline this property refers to depends on the container-level locale.  For Japanese and Chinese, it is <code>TextBaseline.IDEOGRAPHIC_BOTTOM</code>; for all others it is <code>TextBaseline.ROMAN</code>.

		 The offset from the top inset (or right inset if <code>blockProgression</code> is RL) of the container to the baseline of the first line can be either <code>BaselineOffset.ASCENT</code>, meaning equal to the ascent of the line, <code>BaselineOffset.LINE_HEIGHT</code>, meaning equal to the height of that first line, or any fixed-value number to specify an absolute distance. <code>BaselineOffset.AUTO</code> aligns the ascent of the line with the container top inset.<p><img src='../../../images/textLayout_FBO1.png' alt='firstBaselineOffset1' /><img src='../../../images/textLayout_FBO2.png' alt='firstBaselineOffset2' /><img src='../../../images/textLayout_FBO3.png' alt='firstBaselineOffset3' /><img src='../../../images/textLayout_FBO4.png' alt='firstBaselineOffset4' /></p>

		 <p>Legal values as a string are BaselineOffset.AUTO, BaselineOffset.ASCENT, BaselineOffset.LINE_HEIGHT, FormatValue.INHERIT and numbers from 0 to 1000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BaselineOffset.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BaselineOffset

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontFamily' fullname='flashx.textLayout.elements:FlowElement/fontFamily/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		  The name of the font to use, or a comma-separated list of font names. The Flash runtime renders the element with the first available font in the list. For example Arial, Helvetica, _sans causes the player to search for Arial, then Helvetica if Arial is not found, then _sans if neither is found.

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Arial.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontLookup' fullname='flashx.textLayout.elements:FlowElement/fontLookup/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Font lookup to use. Specifying <code>FontLookup.DEVICE</code> uses the fonts installed on the system that is running the SWF file. Device fonts result in a smaller movie size, but text is not always rendered the same across different systems and platforms. Specifying <code>FontLookup.EMBEDDED_CFF</code> uses font outlines embedded in the published SWF file. Embedded fonts increase the size of the SWF file (sometimes dramatically), but text is consistently displayed in the chosen font.

		 <p>Legal values are FontLookup.DEVICE, FontLookup.EMBEDDED_CFF, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontLookup.DEVICE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontLookup

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontSize' fullname='flashx.textLayout.elements:FlowElement/fontSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The size of the text in pixels.

		 <p>Legal values are numbers from 1 to 720 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 12.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontStyle' fullname='flashx.textLayout.elements:FlowElement/fontStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Style of text. May be <code>FontPosture.NORMAL</code>, for use in plain text, or <code>FontPosture.ITALIC</code> for italic. This property applies only to device fonts (<code>fontLookup</code> property is set to flash.text.engine.FontLookup.DEVICE).

		 <p>Legal values are FontPosture.NORMAL, FontPosture.ITALIC, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontPosture.NORMAL.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontPosture

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontWeight' fullname='flashx.textLayout.elements:FlowElement/fontWeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Weight of text. May be <code>FontWeight.NORMAL</code> for use in plain text, or <code>FontWeight.BOLD</code>. Applies only to device fonts (<code>fontLookup</code> property is set to flash.text.engine.FontLookup.DEVICE).

		 <p>Legal values are FontWeight.NORMAL, FontWeight.BOLD, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontWeight.NORMAL.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontWeight

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='formatForCascade' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:formatForCascade/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 Concatenates tlf attributes with any other tlf attributes

		 

		 Return the concatenated result

		 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='format' fullname='flashx.textLayout.elements:FlowElement/format/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ TextLayoutFormat properties applied directly to this element.

		 <p>Each element may have properties applied to it as part of its format. Properties applied to this element override properties inherited from the parent. Properties applied to this element will in turn be inherited by element's children if they are not overridden on the child. If no properties are applied to the element, this will be null.</p>

		 ]]></description>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat

		 ]]></see>
</method>
<method name='id' fullname='flashx.textLayout.elements:FlowElement/id/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 Assigns an identifying name to the element, making it possible to set a style for the element

		 by referencing the <code>id</code>. For example, the following line sets the color for

		 a SpanElement object that has an id of span1:

		 
		 <listing version="3.0" >

		 textFlow.getElementByID("span1").setStyle("color", 0xFF0000);

		 </listing>

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[TextFlow#getElementByID()

		 ]]></see>
</method>
<method name='impliedElement' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:impliedElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='justificationRule' fullname='flashx.textLayout.elements:FlowElement/justificationRule/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Rule used to justify text in a paragraph.

		 Default value is <code>FormatValue.AUTO</code>, which justifies text based on the paragraph's <code>locale</code> property. For all languages except Japanese and Chinese, <code>FormatValue.AUTO</code> becomes <code>JustificationRule.SPACE</code>, which adds extra space to the space characters.  For Japanese and Chinese, <code>FormatValue.AUTO</code> becomes <code>JustficationRule.EAST_ASIAN</code>. In part, justification changes the spacing of punctuation. In Roman text the comma and Japanese periods take a full character's width but in East Asian text only half of a character's width. Also, in the East Asian text the spacing between sequential punctuation marks becomes tighter, obeying traditional East Asian typographic conventions. Note, too, in the example below the leading that is applied to the second line of the paragraphs. In the East Asian version, the last two lines push left. In the Roman version, the second and following lines push left.<p><img src='../../../images/textLayout_justificationrule.png' alt='justificationRule' /></p>

		 <p>Legal values are JustificationRule.EAST_ASIAN, JustificationRule.SPACE, FormatValue.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.JustificationRule

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='justificationStyle' fullname='flashx.textLayout.elements:FlowElement/justificationStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The style used for justification of the paragraph. Used only in conjunction with a <code>justificationRule</code> setting of <code>JustificationRule.EAST_ASIAN</code>.

		 Default value of <code>FormatValue.AUTO</code> is resolved to <code>JustificationStyle.PUSH_IN_KINSOKU</code> for all locales.  The constants defined by the JustificationStyle class specify options for handling kinsoku characters, which are Japanese characters that cannot appear at either the beginning or end of a line. If you want looser text, specify <code>JustificationStyle.PUSH-OUT-ONLY</code>. If you want behavior that is like what you get with the  <code>justificationRule</code> of <code>JustificationRule.SPACE</code>, use <code>JustificationStyle.PRIORITIZE-LEAST-ADJUSTMENT</code>.

		 <p>Legal values are JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT, JustificationStyle.PUSH_IN_KINSOKU, JustificationStyle.PUSH_OUT_ONLY, FormatValue.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.JustificationStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='kerning' fullname='flashx.textLayout.elements:FlowElement/kerning/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Kerning adjusts the pixels between certain character pairs to improve readability. Kerning is supported for all fonts with kerning tables.

		 <p>Legal values are Kerning.ON, Kerning.OFF, Kerning.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Kerning.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.Kerning

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='leadingModel' fullname='flashx.textLayout.elements:FlowElement/leadingModel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the leading model, which is a combination of leading basis and leading direction.

		 Leading basis is the baseline to which the <code>lineHeight</code> property refers. Leading direction determines whether the <code>lineHeight</code> property refers to the distance of a line's baseline from that of the line before it or the line after it. The default value of <code>FormatValue.AUTO</code> is resolved based on the paragraph's <code>locale</code> property.  For Japanese and Chinese, it is <code>LeadingModel.IDEOGRAPHIC_TOP_DOWN</code> and for all others it is <code>LeadingModel.ROMAN_UP</code>.<p><strong>Leading Basis:</strong></p><p><img src='../../../images/textLayout_LB1.png' alt='leadingBasis1' />    <img src='../../../images/textLayout_LB2.png' alt='leadingBasis2' />    <img src='../../../images/textLayout_LB3.png' alt='leadingBasis3' /></p><p><strong>Leading Direction:</strong></p><p><img src='../../../images/textLayout_LD1.png' alt='leadingDirection1' />    <img src='../../../images/textLayout_LD2.png' alt='leadingDirection2' />    <img src='../../../images/textLayout_LD3.png' alt='leadingDirection3' /></p>

		 <p>Legal values are LeadingModel.ROMAN_UP, LeadingModel.IDEOGRAPHIC_TOP_UP, LeadingModel.IDEOGRAPHIC_CENTER_UP, LeadingModel.IDEOGRAPHIC_TOP_DOWN, LeadingModel.IDEOGRAPHIC_CENTER_DOWN, LeadingModel.APPROXIMATE_TEXT_FIELD, LeadingModel.ASCENT_DESCENT_UP, LeadingModel.BOX, LeadingModel.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of LeadingModel.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.LeadingModel

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='ligatureLevel' fullname='flashx.textLayout.elements:FlowElement/ligatureLevel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls which of the ligatures that are defined in the font may be used in the text. The ligatures that appear for each of these settings is dependent on the font. A ligature occurs where two or more letter-forms are joined as a single glyph. Ligatures usually replace consecutive characters sharing common components, such as the letter pairs 'fi', 'fl', or 'ae'. They are used with both Latin and Non-Latin character sets. The ligatures enabled by the values of the LigatureLevel class - <code>MINIMUM</code>, <code>COMMON</code>, <code>UNCOMMON</code>, and <code>EXOTIC</code> - are additive. Each value enables a new set of ligatures, but also includes those of the previous types.<p><b>Note: </b>When working with Arabic or Syriac fonts, <code>ligatureLevel</code> must be set to MINIMUM or above.</p><p><img src='../../../images/textLayout_ligatures.png' alt='ligatureLevel' /></p>

		 <p>Legal values are LigatureLevel.MINIMUM, LigatureLevel.COMMON, LigatureLevel.UNCOMMON, LigatureLevel.EXOTIC, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of LigatureLevel.COMMON.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.LigatureLevel

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineBreak' fullname='flashx.textLayout.elements:FlowElement/lineBreak/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls word wrapping within the container (adopts default value if undefined during cascade).

		 Text in the container may be set to fit the width of the container (<code>LineBreak.TO_FIT</code>), or can be set to break only at explicit return or line feed characters (<code>LineBreak.EXPLICIT</code>).

		 <p>Legal values are LineBreak.EXPLICIT, LineBreak.TO_FIT, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of LineBreak.TO_FIT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.LineBreak

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineHeight' fullname='flashx.textLayout.elements:FlowElement/lineHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Leading controls for the text. The distance from the baseline of the previous or the next line (based on <code>LeadingModel</code>) to the baseline of the current line is equal to the maximum amount of the leading applied to any character in the line. This is either a number or a percent.  If specifying a percent, enter a string value, like 140%.<p><img src='../../../images/textLayout_lineHeight1.jpg' alt='lineHeight1' /><img src='../../../images/textLayout_lineHeight2.jpg' alt='lineHeight2' /></p>

		 <p>Legal values as a number are from -720 to 720.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 120%.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineThrough' fullname='flashx.textLayout.elements:FlowElement/lineThrough/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 If <code>true</code>, applies strikethrough, a line drawn through the middle of the text.

		 <p>Legal values are true, false and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of false.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkActiveFormat' fullname='flashx.textLayout.elements:FlowElement/linkActiveFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Defines the formatting attributes used for links in normal state. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkHoverFormat' fullname='flashx.textLayout.elements:FlowElement/linkHoverFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Defines the formatting attributes used for links in hover state, when the mouse is within the bounds (rolling over) a link. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkNormalFormat' fullname='flashx.textLayout.elements:FlowElement/linkNormalFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Defines the formatting attributes used for links in normal state. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listAutoPadding' fullname='flashx.textLayout.elements:FlowElement/listAutoPadding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 This specifies an auto indent for the start edge of lists when the padding value of the list on that side is <code>auto</code>.

		 <p>Legal values are numbers from -1000 to 1000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 40.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listMarkerFormat' fullname='flashx.textLayout.elements:FlowElement/listMarkerFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Defines the formatting attributes list markers. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>IListMarkerFormat</code> or converts an array of objects with key and value as members to a ListMarkerFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listStylePosition' fullname='flashx.textLayout.elements:FlowElement/listStylePosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 <p>Legal values are ListStylePosition.INSIDE, ListStylePosition.OUTSIDE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of ListStylePosition.OUTSIDE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ListStylePosition

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listStyleType' fullname='flashx.textLayout.elements:FlowElement/listStyleType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 <p>Legal values are ListStyleType.UPPER_ALPHA, ListStyleType.LOWER_ALPHA, ListStyleType.UPPER_ROMAN, ListStyleType.LOWER_ROMAN, ListStyleType.NONE, ListStyleType.DISC, ListStyleType.CIRCLE, ListStyleType.SQUARE, ListStyleType.BOX, ListStyleType.CHECK, ListStyleType.DIAMOND, ListStyleType.HYPHEN, ListStyleType.ARABIC_INDIC, ListStyleType.BENGALI, ListStyleType.DECIMAL, ListStyleType.DECIMAL_LEADING_ZERO, ListStyleType.DEVANAGARI, ListStyleType.GUJARATI, ListStyleType.GURMUKHI, ListStyleType.KANNADA, ListStyleType.PERSIAN, ListStyleType.THAI, ListStyleType.URDU, ListStyleType.CJK_EARTHLY_BRANCH, ListStyleType.CJK_HEAVENLY_STEM, ListStyleType.HANGUL, ListStyleType.HANGUL_CONSTANT, ListStyleType.HIRAGANA, ListStyleType.HIRAGANA_IROHA, ListStyleType.KATAKANA, ListStyleType.KATAKANA_IROHA, ListStyleType.LOWER_ALPHA, ListStyleType.LOWER_GREEK, ListStyleType.LOWER_LATIN, ListStyleType.UPPER_ALPHA, ListStyleType.UPPER_GREEK, ListStyleType.UPPER_LATIN, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of ListStyleType.DISC.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ListStyleType

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='locale' fullname='flashx.textLayout.elements:FlowElement/locale/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The locale of the text. Controls case transformations and shaping. Standard locale identifiers as described in Unicode Technical Standard #35 are used. For example en, en_US and en-US are all English, ja is Japanese. 

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of en.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingBottom' fullname='flashx.textLayout.elements:FlowElement/paddingBottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Bottom inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45.  (adopts default value if undefined during cascade).

		 Space between the bottom edge of the container and the text.  Value is a Number  or auto. <p> With horizontal text, in scrollable containers with multiple columns, the first and following columns will show the padding as blank space at the bottom of the container, but for the last column, if the text doesn't all fit, you may have to scroll in order to see the padding.</p>

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingLeft' fullname='flashx.textLayout.elements:FlowElement/paddingLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Left inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the left edge of the container and the text.  Value is a Number or auto.<p> With vertical text, in scrollable containers with multiple columns, the first and following columns will show the padding as blank space at the end of the container, but for the last column, if the text doesn't all fit, you may have to scroll in order to see the padding.</p>

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingRight' fullname='flashx.textLayout.elements:FlowElement/paddingRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Right inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the right edge of the container and the text.  Value is a Number or auto. 

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingTop' fullname='flashx.textLayout.elements:FlowElement/paddingTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Top inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the top edge of the container and the text.  Value is a Number or auto.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphEndIndent' fullname='flashx.textLayout.elements:FlowElement/paragraphEndIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 A Number that specifies, in pixels, the amount to indent the paragraph's end edge. Refers to the right edge in left-to-right text and the left edge in right-to-left text. 

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphSpaceAfter' fullname='flashx.textLayout.elements:FlowElement/paragraphSpaceAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 A Number that specifies the amount of space, in pixels, to leave after the paragraph.

		 Collapses in tandem with  <code>paragraphSpaceBefore</code>.

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphSpaceBefore' fullname='flashx.textLayout.elements:FlowElement/paragraphSpaceBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 A Number that specifies the amount of space, in pixels, to leave before the paragraph. 

		 Collapses in tandem with <code>paragraphSpaceAfter</code>.

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphStartIndent' fullname='flashx.textLayout.elements:FlowElement/paragraphStartIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 A Number that specifies, in pixels, the amount to indent the paragraph's start edge. Refers to the left edge in left-to-right text and the right edge in right-to-left text. 

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='parentRelativeEnd' fullname='flashx.textLayout.elements:FlowElement/parentRelativeEnd/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Returns the relative end of this FlowElement object in the parent. If the parent is null this is always equal to <code>textLength</code>.  If 

		 the parent is not null, the value is the sum of the text lengths of this and all previous siblings, which is effectively

		 the first character in the next FlowElement object.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[offset

		 
		 ]]></return>
<see><![CDATA[FlowGroupElement

	 	 ]]></see>
<see><![CDATA[#textLength

		 ]]></see>
</method>
<method name='parentRelativeStart' fullname='flashx.textLayout.elements:FlowElement/parentRelativeStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Returns the relative start of this FlowElement object in the parent. If parent is null, this value is always zero.  

		 If parent is not null, the value is the sum of the text lengths of all previous siblings.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[offset

		 
		 ]]></return>
<see><![CDATA[#textLength

		 ]]></see>
</method>
<method name='parent' fullname='flashx.textLayout.elements:FlowElement/parent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[ Returns the parent of this FlowElement object. Every FlowElement has at most one parent.

		
		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='renderingMode' fullname='flashx.textLayout.elements:FlowElement/renderingMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The rendering mode used for this text.  Applies only to embedded fonts (<code>fontLookup</code> property is set to <code>FontLookup.EMBEDDED_CFF</code>).

		 <p>Legal values are RenderingMode.NORMAL, RenderingMode.CFF, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of RenderingMode.CFF.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.RenderingMode

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='styleName' fullname='flashx.textLayout.elements:FlowElement/styleName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Assigns an identifying class to the element, making it possible to set a style for the element by referencing the <code>styleName</code>.

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='styles' fullname='flashx.textLayout.elements:FlowElement/styles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Returns the styles on this FlowElement.  Note that the getter makes a copy of the  

		 styles dictionary. The returned object encapsulates all styles set in the format property including core and user styles. The

		 returned object consists of an array of <em>stylename-value</em> pairs.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat

		 

		 ]]></see>
</method>
<method name='tabStops' fullname='flashx.textLayout.elements:FlowElement/tabStops/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the tab stops associated with the paragraph.

		 Setters can take an array of TabStopFormat, a condensed string representation, undefined, or <code>FormatValue.INHERIT</code>. The condensed string representation is always converted into an array of TabStopFormat. <p>The string-based format is a list of tab stops, where each tab stop is delimited by one or more spaces.</p><p>A tab stop takes the following form: &lt;alignment type&gt;&lt;alignment position&gt;|&lt;alignment token&gt;.</p><p>The alignment type is a single character, and can be S, E, C, or D (or lower-case equivalents). S or s for start, E or e for end, C or c for center, D or d for decimal. The alignment type is optional, and if its not specified will default to S.</p><p>The alignment position is a Number, and is specified according to FXG spec for Numbers (decimal or scientific notation). The alignment position is required.</p><p>The vertical bar is used to separate the alignment position from the alignment token, and should only be present if the alignment token is present.</p><p> The alignment token is optional if the alignment type is D, and should not be present if the alignment type is anything other than D. The alignment token may be any sequence of characters terminated by the space that ends the tab stop (for the last tab stop, the terminating space is optional; end of alignment token is implied). A space may be part of the alignment token if it is escaped with a backslash (\ ). A backslash may be part of the alignment token if it is escaped with another backslash (\\). If the alignment type is D, and the alignment token is not specified, it will take on the default value of null.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TabStopFormat

		 

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlignLast' fullname='flashx.textLayout.elements:FlowElement/textAlignLast/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Alignment of the last (or only) line in the paragraph relative to the container in justified text.

		 If <code>textAlign</code> is set to <code>TextAlign.JUSTIFY</code>, <code>textAlignLast</code> specifies how the last line (or only line, if this is a one line block) is aligned. Values are similar to <code>textAlign</code>.

		 <p>Legal values are TextAlign.LEFT, TextAlign.RIGHT, TextAlign.CENTER, TextAlign.JUSTIFY, TextAlign.START, TextAlign.END, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextAlign.START.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlign' fullname='flashx.textLayout.elements:FlowElement/textAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Alignment of lines in the paragraph relative to the container.

		 <code>TextAlign.LEFT</code> aligns lines along the left edge of the container. <code>TextAlign.RIGHT</code> aligns on the right edge. <code>TextAlign.CENTER</code> positions the line equidistant from the left and right edges. <code>TextAlign.JUSTIFY</code> spreads the lines out so they fill the space. <code>TextAlign.START</code> is equivalent to setting left in left-to-right text, or right in right-to-left text. <code>TextAlign.END</code> is equivalent to setting right in left-to-right text, or left in right-to-left text.

		 <p>Legal values are TextAlign.LEFT, TextAlign.RIGHT, TextAlign.CENTER, TextAlign.JUSTIFY, TextAlign.START, TextAlign.END, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextAlign.START.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlpha' fullname='flashx.textLayout.elements:FlowElement/textAlpha/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Alpha (transparency) value for the text. A value of 0 is fully transparent, and a value of 1 is fully opaque. Display objects with <code>textAlpha</code> set to 0 are active, even though they are invisible.

		 <p>Legal values are numbers from 0 to 1 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 1.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textDecoration' fullname='flashx.textLayout.elements:FlowElement/textDecoration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Decoration on text. Use to apply underlining; default is none.

		 <p>Legal values are TextDecoration.NONE, TextDecoration.UNDERLINE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextDecoration.NONE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextDecoration

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textIndent' fullname='flashx.textLayout.elements:FlowElement/textIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 A Number that specifies, in pixels, the amount to indent the first line of the paragraph.

		 A negative indent will push the line into the margin, and possibly out of the container.

		 <p>Legal values are numbers from -8000 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textJustify' fullname='flashx.textLayout.elements:FlowElement/textJustify/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies options for justifying text.

		 Default value is <code>TextJustify.INTER_WORD</code>, meaning that extra space is added to the space characters. <code>TextJustify.DISTRIBUTE</code> adds extra space to space characters and between individual letters. Used only in conjunction with a <code>justificationRule</code> value of <code>JustificationRule.SPACE</code>.

		 <p>Legal values are TextJustify.INTER_WORD, TextJustify.DISTRIBUTE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextJustify.INTER_WORD.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextJustify

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textLength' fullname='flashx.textLayout.elements:FlowElement/textLength/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Returns the total length of text owned by this FlowElement object and its children.  If an element has no text, the 

		 value of <code>textLength</code> is usually zero. 

		 

		 <p>ParagraphElement objects have a final span with a paragraph terminator character for the last 

		 SpanElement object.The paragraph terminator is included in the value of the <code>textLength</code> of that 

		 SpanElement object and all its parents.  It is not included in <code>text</code> property of the SpanElement

		 object.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[#textLength

		 ]]></see>
</method>
<method name='textRotation' fullname='flashx.textLayout.elements:FlowElement/textRotation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Determines the number of degrees to rotate this text.

		 <p>Legal values are TextRotation.ROTATE_0, TextRotation.ROTATE_180, TextRotation.ROTATE_270, TextRotation.ROTATE_90, TextRotation.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextRotation.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextRotation

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='trackingLeft' fullname='flashx.textLayout.elements:FlowElement/trackingLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the left of each character. If kerning is enabled, the <code>trackingLeft</code> value is added to the values in the kerning table for the font. If kerning is disabled, the <code>trackingLeft</code> value is used as a manual kerning value. Supports both positive and negative values. 

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='trackingRight' fullname='flashx.textLayout.elements:FlowElement/trackingRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the right of each character.  If kerning is enabled, the <code>trackingRight</code> value is added to the values in the kerning table for the font. If kerning is disabled, the <code>trackingRight</code> value is used as a manual kerning value. Supports both positive and negative values. 

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='typeName' fullname='flashx.textLayout.elements:FlowElement/typeName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 Each FlowElement has a <code>typeName</code>.  <code>typeName</code> defaults to the string the <code>textLayoutFormat</code> TextConverter uses.  This API

		 can be used to set a different <code>typeName</code> to a <code>FlowElement</code>.  Typically this is done to support <code>type</code> selectors in CSS.  

		 

		 <p>See the <code>TEXT_FIELD_HTML_FORMAT</code> documentation for how this used..</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.conversion.TextConverter

		 ]]></see>
<see><![CDATA[flashx.textLayout.conversion.TextConverter#TEXT_FIELD_HTML_FORMAT

		 ]]></see>
<see><![CDATA[flashx.textLayout.conversion.IHTMLImporter

		 
		 ]]></see>
</method>
<method name='typographicCase' fullname='flashx.textLayout.elements:FlowElement/typographicCase/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The type of typographic case used for this text. Here are some examples:<p><img src='../../../images/textLayout_typographiccase.png' alt='typographicCase' /></p>

		 <p>Legal values are TLFTypographicCase.DEFAULT, TLFTypographicCase.CAPS_TO_SMALL_CAPS, TLFTypographicCase.UPPERCASE, TLFTypographicCase.LOWERCASE, TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TLFTypographicCase.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TLFTypographicCase

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='userStyles' fullname='flashx.textLayout.elements:FlowElement/userStyles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Allows you to read and write user styles on a FlowElement object.  Note that reading this property

		makes a copy of the userStyles set in the format of this element. 

		
		]]></description>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='verticalAlign' fullname='flashx.textLayout.elements:FlowElement/verticalAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Vertical alignment or justification (adopts default value if undefined during cascade).

		 Determines how TextFlow elements align within the container.

		 <p>Legal values are VerticalAlign.TOP, VerticalAlign.MIDDLE, VerticalAlign.BOTTOM, VerticalAlign.JUSTIFY, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of VerticalAlign.TOP.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.VerticalAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='whiteSpaceCollapse' fullname='flashx.textLayout.elements:FlowElement/whiteSpaceCollapse/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Collapses or preserves whitespace when importing text into a TextFlow. <code>WhiteSpaceCollapse.PRESERVE</code> retains all whitespace characters. <code>WhiteSpaceCollapse.COLLAPSE</code> removes newlines, tabs, and leading or trailing spaces within a block of imported text. Line break tags (<br/>) and Unicode line separator characters are retained.

		 <p>Legal values are WhiteSpaceCollapse.PRESERVE, WhiteSpaceCollapse.COLLAPSE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of WhiteSpaceCollapse.COLLAPSE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.WhiteSpaceCollapse

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='wordSpacing' fullname='flashx.textLayout.elements:FlowElement/wordSpacing/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the optimum, minimum, and maximum spacing (as a multiplier of the width of a normal space) between words to use during justification.

		 The optimum space is used to indicate the desired size of a space, as a fraction of the value defined in the font. The minimum and maximum values are the used when textJustify is distribute to determine how wide or narrow the spaces between the words may grow before letter spacing is used to justify the line.

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 100%, 50%, 150%.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='alignmentBaseline' fullname='flashx.textLayout.elements:FlowElement/alignmentBaseline/set' isStatic='false' isFinal='false' isOverride='false'  param_names='alignmentBaselineValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='backgroundAlpha' fullname='flashx.textLayout.elements:FlowElement/backgroundAlpha/set' isStatic='false' isFinal='false' isOverride='false'  param_names='backgroundAlphaValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='backgroundColor' fullname='flashx.textLayout.elements:FlowElement/backgroundColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='backgroundColorValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='baselineShift' fullname='flashx.textLayout.elements:FlowElement/baselineShift/set' isStatic='false' isFinal='false' isOverride='false'  param_names='baselineShiftValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='bindableElement' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:bindableElement/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='blockProgression' fullname='flashx.textLayout.elements:FlowElement/blockProgression/set' isStatic='false' isFinal='false' isOverride='false'  param_names='blockProgressionValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='breakOpportunity' fullname='flashx.textLayout.elements:FlowElement/breakOpportunity/set' isStatic='false' isFinal='false' isOverride='false'  param_names='breakOpportunityValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='cffHinting' fullname='flashx.textLayout.elements:FlowElement/cffHinting/set' isStatic='false' isFinal='false' isOverride='false'  param_names='cffHintingValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='clearFloats' fullname='flashx.textLayout.elements:FlowElement/clearFloats/set' isStatic='false' isFinal='false' isOverride='false'  param_names='clearFloatsValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='color' fullname='flashx.textLayout.elements:FlowElement/color/set' isStatic='false' isFinal='false' isOverride='false'  param_names='colorValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnBreakAfter' fullname='flashx.textLayout.elements:FlowElement/columnBreakAfter/set' isStatic='false' isFinal='false' isOverride='false'  param_names='columnBreakAfterValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnBreakBefore' fullname='flashx.textLayout.elements:FlowElement/columnBreakBefore/set' isStatic='false' isFinal='false' isOverride='false'  param_names='columnBreakBeforeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnCount' fullname='flashx.textLayout.elements:FlowElement/columnCount/set' isStatic='false' isFinal='false' isOverride='false'  param_names='columnCountValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnGap' fullname='flashx.textLayout.elements:FlowElement/columnGap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='columnGapValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnWidth' fullname='flashx.textLayout.elements:FlowElement/columnWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='columnWidthValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='containerBreakAfter' fullname='flashx.textLayout.elements:FlowElement/containerBreakAfter/set' isStatic='false' isFinal='false' isOverride='false'  param_names='containerBreakAfterValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='containerBreakBefore' fullname='flashx.textLayout.elements:FlowElement/containerBreakBefore/set' isStatic='false' isFinal='false' isOverride='false'  param_names='containerBreakBeforeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='digitCase' fullname='flashx.textLayout.elements:FlowElement/digitCase/set' isStatic='false' isFinal='false' isOverride='false'  param_names='digitCaseValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='digitWidth' fullname='flashx.textLayout.elements:FlowElement/digitWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='digitWidthValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='direction' fullname='flashx.textLayout.elements:FlowElement/direction/set' isStatic='false' isFinal='false' isOverride='false'  param_names='directionValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='dominantBaseline' fullname='flashx.textLayout.elements:FlowElement/dominantBaseline/set' isStatic='false' isFinal='false' isOverride='false'  param_names='dominantBaselineValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='firstBaselineOffset' fullname='flashx.textLayout.elements:FlowElement/firstBaselineOffset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='firstBaselineOffsetValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontFamily' fullname='flashx.textLayout.elements:FlowElement/fontFamily/set' isStatic='false' isFinal='false' isOverride='false'  param_names='fontFamilyValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontLookup' fullname='flashx.textLayout.elements:FlowElement/fontLookup/set' isStatic='false' isFinal='false' isOverride='false'  param_names='fontLookupValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontSize' fullname='flashx.textLayout.elements:FlowElement/fontSize/set' isStatic='false' isFinal='false' isOverride='false'  param_names='fontSizeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontStyle' fullname='flashx.textLayout.elements:FlowElement/fontStyle/set' isStatic='false' isFinal='false' isOverride='false'  param_names='fontStyleValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontWeight' fullname='flashx.textLayout.elements:FlowElement/fontWeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='fontWeightValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='format' fullname='flashx.textLayout.elements:FlowElement/format/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='id' fullname='flashx.textLayout.elements:FlowElement/id/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='impliedElement' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:impliedElement/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='justificationRule' fullname='flashx.textLayout.elements:FlowElement/justificationRule/set' isStatic='false' isFinal='false' isOverride='false'  param_names='justificationRuleValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='justificationStyle' fullname='flashx.textLayout.elements:FlowElement/justificationStyle/set' isStatic='false' isFinal='false' isOverride='false'  param_names='justificationStyleValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='kerning' fullname='flashx.textLayout.elements:FlowElement/kerning/set' isStatic='false' isFinal='false' isOverride='false'  param_names='kerningValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='leadingModel' fullname='flashx.textLayout.elements:FlowElement/leadingModel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='leadingModelValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='ligatureLevel' fullname='flashx.textLayout.elements:FlowElement/ligatureLevel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='ligatureLevelValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='lineBreak' fullname='flashx.textLayout.elements:FlowElement/lineBreak/set' isStatic='false' isFinal='false' isOverride='false'  param_names='lineBreakValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='lineHeight' fullname='flashx.textLayout.elements:FlowElement/lineHeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='lineHeightValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='lineThrough' fullname='flashx.textLayout.elements:FlowElement/lineThrough/set' isStatic='false' isFinal='false' isOverride='false'  param_names='lineThroughValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='linkActiveFormat' fullname='flashx.textLayout.elements:FlowElement/linkActiveFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='linkActiveFormatValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='linkHoverFormat' fullname='flashx.textLayout.elements:FlowElement/linkHoverFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='linkHoverFormatValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='linkNormalFormat' fullname='flashx.textLayout.elements:FlowElement/linkNormalFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='linkNormalFormatValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listAutoPadding' fullname='flashx.textLayout.elements:FlowElement/listAutoPadding/set' isStatic='false' isFinal='false' isOverride='false'  param_names='listAutoPaddingValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listMarkerFormat' fullname='flashx.textLayout.elements:FlowElement/listMarkerFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='listMarkerFormatValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listStylePosition' fullname='flashx.textLayout.elements:FlowElement/listStylePosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='listStylePositionValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listStyleType' fullname='flashx.textLayout.elements:FlowElement/listStyleType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='listStyleTypeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='locale' fullname='flashx.textLayout.elements:FlowElement/locale/set' isStatic='false' isFinal='false' isOverride='false'  param_names='localeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingBottom' fullname='flashx.textLayout.elements:FlowElement/paddingBottom/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paddingBottomValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingLeft' fullname='flashx.textLayout.elements:FlowElement/paddingLeft/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paddingLeftValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingRight' fullname='flashx.textLayout.elements:FlowElement/paddingRight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paddingRightValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingTop' fullname='flashx.textLayout.elements:FlowElement/paddingTop/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paddingTopValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphEndIndent' fullname='flashx.textLayout.elements:FlowElement/paragraphEndIndent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paragraphEndIndentValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphSpaceAfter' fullname='flashx.textLayout.elements:FlowElement/paragraphSpaceAfter/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paragraphSpaceAfterValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphSpaceBefore' fullname='flashx.textLayout.elements:FlowElement/paragraphSpaceBefore/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paragraphSpaceBeforeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphStartIndent' fullname='flashx.textLayout.elements:FlowElement/paragraphStartIndent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paragraphStartIndentValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='renderingMode' fullname='flashx.textLayout.elements:FlowElement/renderingMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='renderingModeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='styleName' fullname='flashx.textLayout.elements:FlowElement/styleName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='styleNameValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='tabStops' fullname='flashx.textLayout.elements:FlowElement/tabStops/set' isStatic='false' isFinal='false' isOverride='false'  param_names='tabStopsValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textAlignLast' fullname='flashx.textLayout.elements:FlowElement/textAlignLast/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textAlignLastValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textAlign' fullname='flashx.textLayout.elements:FlowElement/textAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textAlignValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textAlpha' fullname='flashx.textLayout.elements:FlowElement/textAlpha/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textAlphaValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textDecoration' fullname='flashx.textLayout.elements:FlowElement/textDecoration/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textDecorationValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textIndent' fullname='flashx.textLayout.elements:FlowElement/textIndent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textIndentValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textJustify' fullname='flashx.textLayout.elements:FlowElement/textJustify/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textJustifyValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textRotation' fullname='flashx.textLayout.elements:FlowElement/textRotation/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textRotationValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='trackingLeft' fullname='flashx.textLayout.elements:FlowElement/trackingLeft/set' isStatic='false' isFinal='false' isOverride='false'  param_names='trackingLeftValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='trackingRight' fullname='flashx.textLayout.elements:FlowElement/trackingRight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='trackingRightValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='tracking' fullname='flashx.textLayout.elements:FlowElement/tracking/set' isStatic='false' isFinal='false' isOverride='false'  param_names='trackingValue' param_types='Object' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets the tracking and is synonymous with the <code>trackingRight</code> property. Specified as a number of

		 pixels or a percent of <code>fontSize</code>.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[#trackingRight

		 ]]></see>
</method>
<method name='typeName' fullname='flashx.textLayout.elements:FlowElement/typeName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='typographicCase' fullname='flashx.textLayout.elements:FlowElement/typographicCase/set' isStatic='false' isFinal='false' isOverride='false'  param_names='typographicCaseValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='userStyles' fullname='flashx.textLayout.elements:FlowElement/userStyles/set' isStatic='false' isFinal='false' isOverride='false'  param_names='styles' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='verticalAlign' fullname='flashx.textLayout.elements:FlowElement/verticalAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='verticalAlignValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='whiteSpaceCollapse' fullname='flashx.textLayout.elements:FlowElement/whiteSpaceCollapse/set' isStatic='false' isFinal='false' isOverride='false'  param_names='whiteSpaceCollapseValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='wordSpacing' fullname='flashx.textLayout.elements:FlowElement/wordSpacing/set' isStatic='false' isFinal='false' isOverride='false'  param_names='wordSpacingValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<field name='_computedFormat' fullname='flashx.textLayout.elements:FlowElement/protected:_computedFormat' type='flashx.textLayout.formats:TextLayoutFormat' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_format' fullname='flashx.textLayout.elements:FlowElement/private:_format' type='flashx.textLayout.elements:FlowValueHolder' isStatic='false' isConst='false' >
<description><![CDATA[ format settings on this FlowElement. ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_parentRelativeStart' fullname='flashx.textLayout.elements:FlowElement/private:_parentRelativeStart' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ start, _start of element, relative to parent; tlf_internal to eliminate getter calls  ]]></description>
</field>
<field name='_parent' fullname='flashx.textLayout.elements:FlowElement/private:_parent' type='flashx.textLayout.elements:FlowGroupElement' isStatic='false' isConst='false' >
<description><![CDATA[ every FlowElement has at most one parent ]]></description>
</field>
<field name='_scratchTextLayoutFormat' fullname='flashx.textLayout.elements:FlowElement/tlf_internal:_scratchTextLayoutFormat' type='flashx.textLayout.formats:TextLayoutFormat' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_textLength' fullname='flashx.textLayout.elements:FlowElement/private:_textLength' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ _textLength (number of chars) in the element, including child content; tlf_internal to eliminate getter calls ]]></description>
</field>
<field name='idString' fullname='flashx.textLayout.elements:FlowElement/private:idString' type='String' isStatic='true' isConst='true' defaultValue='id' >
</field>
<field name='impliedElementString' fullname='flashx.textLayout.elements:FlowElement/private:impliedElementString' type='String' isStatic='true' isConst='true' defaultValue='impliedElement' >
</field>
<field name='typeNameString' fullname='flashx.textLayout.elements:FlowElement/private:typeNameString' type='String' isStatic='true' isConst='true' defaultValue='typeName' >
</field>
<classRec name='Configuration' fullname='flashx.textLayout.elements:Configuration' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\Configuration.as' namespace='flashx.textLayout.elements' access='public' baseclass='Object' interfaces='flashx.textLayout.elements:IConfiguration' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	The Configuration class is a primary point of integration between the Text Layout Framework and an application. You can 

	include a Configuration object as a parameter to the <code>TextFlow()</code> constructor when you create a new TextFlow

	instance. It allows the application to initially control how the Text Layout Framework behaves.

	

	<p>The Configuration class allows you to specify initial, paragraph and container formats for the text flow 

	through the <code>textFlowInitialFormat</code> property. It also allows you to specify initial format attributes for links, selection,

	scrolling, and for handling the Tab and Enter keys.</p>

	
	]]></description>
<includeExample><![CDATA[examples\ConfigurationExample.as -noswf

	
	]]></includeExample>
<langversion><![CDATA[3.0

	

	]]></langversion>
<playerversion><![CDATA[Flash 10

	]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

	]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat SelectionFormat

	]]></see>
<see><![CDATA[TextFlow

	]]></see>
</classRec>
<method name='Configuration' fullname='flashx.textLayout.elements:Configuration/Configuration' isStatic='false' isFinal='false' isOverride='false'  param_names='initializeWithDefaults' param_types='Boolean' param_defaults='true' result_type='*'>
<description><![CDATA[ Constructor - creates a default configuration. 

		
		]]></description>
<langversion><![CDATA[3.0

	 	

		]]></langversion>
<param><![CDATA[initializeWithDefaults Specifies whether to initialize the configuration with

		the default values. Default is <code>true</code>. If set to <code>false</code>, initializes

		without default values, thereby saving some objects. The <code>clone()</code> method sets this

		to <code>false</code> and copies the properties from the original object.

		
		]]></param>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat SelectionFormat

		]]></see>
<see><![CDATA[flashx.textLayout.compose.StandardFlowComposer StandardFlowComposer

		]]></see>
</method>
<method name='clone' fullname='flashx.textLayout.elements:Configuration/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:Configuration'>
<description><![CDATA[ Creates a clone of the Configuration object.

		
		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='getCursorString' fullname='flashx.textLayout.elements:Configuration/tlf_internal:getCursorString' isStatic='true' isFinal='false' isOverride='false'  param_names='config;cursorString' param_types='flashx.textLayout.elements:IConfiguration;String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getImmutableClone' fullname='flashx.textLayout.elements:Configuration/tlf_internal:getImmutableClone' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:IConfiguration'>
<description><![CDATA[ TextFlows are configured with an immutable clone of a Configuration.  Once a TextFlow is create it uses an immutable configuration. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialize' fullname='flashx.textLayout.elements:Configuration/private:initialize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='versionIsAtLeast' fullname='flashx.textLayout.elements:Configuration/tlf_internal:versionIsAtLeast' isStatic='true' isFinal='false' isOverride='false'  param_names='major;minor' param_types='int;int' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='cursorFunction' fullname='flashx.textLayout.elements:Configuration/cursorFunction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IConfiguration#cursorFunction

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10.2

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='debugCodeEnabled' fullname='flashx.textLayout.elements:Configuration/tlf_internal:debugCodeEnabled/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns true if the ActionScript text engine was built with debugging code enabled. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultLinkActiveFormat' fullname='flashx.textLayout.elements:Configuration/defaultLinkActiveFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#defaultLinkActiveFormat

		
		]]></copy>
<langversion><![CDATA[3.0

	 	
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[FlowElement#linkActiveFormat 

		]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

		]]></see>
<see><![CDATA[LinkElement

		]]></see>
</method>
<method name='defaultLinkHoverFormat' fullname='flashx.textLayout.elements:Configuration/defaultLinkHoverFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#defaultLinkHoverFormat  

		
		]]></copy>
<langversion><![CDATA[3.0

	 	
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[FlowElement#linkHoverFormat

		]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

		]]></see>
<see><![CDATA[LinkElement

		]]></see>
</method>
<method name='defaultLinkNormalFormat' fullname='flashx.textLayout.elements:Configuration/defaultLinkNormalFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#defaultLinkNormalFormat

		
		]]></copy>
<langversion><![CDATA[3.0

	 	
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[FlowElement#linkNormalFormat

		]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

		]]></see>
<see><![CDATA[LinkElement

		]]></see>
</method>
<method name='defaultListMarkerFormat' fullname='flashx.textLayout.elements:Configuration/defaultListMarkerFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:IListMarkerFormat'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IConfiguration#defaultListMarkerFormat

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[FlowElement#listMarkerFormat

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.IListMarkerFormat IListMarkerFormat

		 ]]></see>
<see><![CDATA[LinkElement

		 ]]></see>
</method>
<method name='enableAccessibility' fullname='flashx.textLayout.elements:Configuration/enableAccessibility/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#enableAccessibility

		
		]]></copy>
<langversion><![CDATA[3.0

	 	
	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[TextFlow

		]]></see>
</method>
<method name='flowComposerClass' fullname='flashx.textLayout.elements:Configuration/flowComposerClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Class'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#flowComposerClass

		
		]]></copy>
<langversion><![CDATA[3.0

	 	
	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.StandardFlowComposer StandardFlowComposer

		]]></see>
<see><![CDATA[flashx.textLayout.elements.TextFlow TextFlow

		]]></see>
</method>
<method name='focusedSelectionFormat' fullname='flashx.textLayout.elements:Configuration/focusedSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#focusedSelectionFormat 

		
		]]></copy>
<langversion><![CDATA[3.0

	 	
	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat SelectionFormat

		]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionManager#focusedSelectionFormat SelectionManager.focusedSelectionFormat

		]]></see>
<see><![CDATA[TextFlow

		]]></see>
</method>
<method name='inactiveSelectionFormat' fullname='flashx.textLayout.elements:Configuration/inactiveSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#inactiveSelectionFormat

		
		]]></copy>
<langversion><![CDATA[3.0

	 	
	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat SelectionFormat

		]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionManager#inactiveSelectionFormat SelectionManager.inactiveSelectionFormat

		]]></see>
<see><![CDATA[TextFlow

		]]></see>
</method>
<method name='inlineGraphicResolverFunction' fullname='flashx.textLayout.elements:Configuration/inlineGraphicResolverFunction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#inlineGraphicResolverFunction

		

		]]></copy>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.InlineGraphicElement InlineGraphicElement

		]]></see>
</method>
<method name='manageEnterKey' fullname='flashx.textLayout.elements:Configuration/manageEnterKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#manageEnterKey

		
		]]></copy>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='manageTabKey' fullname='flashx.textLayout.elements:Configuration/manageTabKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IConfiguration#manageTabKey

		
		]]></copy>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='overflowPolicy' fullname='flashx.textLayout.elements:Configuration/overflowPolicy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#overflowPolicy

		
		]]></copy>
<langversion><![CDATA[3.0

	 	
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[OverflowPolicy

		]]></see>
</method>
<method name='releaseLineCreationData' fullname='flashx.textLayout.elements:Configuration/releaseLineCreationData/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#releaseLineCreationData

		

		]]></copy>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.StandardFlowComposer StandardFlowComposer

		]]></see>
<see><![CDATA[flash.text.engine.TextBlock#releaseLineCreationData() TextBlock.releaseLineCreationData()

		]]></see>
</method>
<method name='scrollDragDelay' fullname='flashx.textLayout.elements:Configuration/scrollDragDelay/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#scrollDragDelay

		
		]]></copy>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='scrollDragPixels' fullname='flashx.textLayout.elements:Configuration/scrollDragPixels/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#scrollDragPixels

		
		]]></copy>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='scrollMouseWheelMultiplier' fullname='flashx.textLayout.elements:Configuration/scrollMouseWheelMultiplier/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#scrollMouseWheelMultiplier

		
		]]></copy>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='scrollPagePercentage' fullname='flashx.textLayout.elements:Configuration/scrollPagePercentage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		]]></description>
<copy><![CDATA[IConfiguration#scrollPagePercentage

		
		]]></copy>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='textFlowInitialFormat' fullname='flashx.textLayout.elements:Configuration/textFlowInitialFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#textFlowInitialFormat

		
		]]></copy>
<langversion><![CDATA[3.0

	 	
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[TextFlow

		]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

		]]></see>
</method>
<method name='unfocusedSelectionFormat' fullname='flashx.textLayout.elements:Configuration/unfocusedSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[IConfiguration#unfocusedSelectionFormat

		
		]]></copy>
<langversion><![CDATA[3.0

	 	
	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat SelectionFormat

		]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionManager#unfocusedSelectionFormat SelectionManager.unfocusedSelectionFormat

		]]></see>
<see><![CDATA[TextFlow

		]]></see>
</method>
<method name='cursorFunction' fullname='flashx.textLayout.elements:Configuration/cursorFunction/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='defaultLinkActiveFormat' fullname='flashx.textLayout.elements:Configuration/defaultLinkActiveFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='defaultLinkHoverFormat' fullname='flashx.textLayout.elements:Configuration/defaultLinkHoverFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='defaultLinkNormalFormat' fullname='flashx.textLayout.elements:Configuration/defaultLinkNormalFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='defaultListMarkerFormat' fullname='flashx.textLayout.elements:Configuration/defaultListMarkerFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:IListMarkerFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='enableAccessibility' fullname='flashx.textLayout.elements:Configuration/enableAccessibility/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='flowComposerClass' fullname='flashx.textLayout.elements:Configuration/flowComposerClass/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Class' param_defaults='undefined' result_type='void'>
</method>
<method name='focusedSelectionFormat' fullname='flashx.textLayout.elements:Configuration/focusedSelectionFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.edit:SelectionFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='inactiveSelectionFormat' fullname='flashx.textLayout.elements:Configuration/inactiveSelectionFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.edit:SelectionFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='inlineGraphicResolverFunction' fullname='flashx.textLayout.elements:Configuration/inlineGraphicResolverFunction/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='manageEnterKey' fullname='flashx.textLayout.elements:Configuration/manageEnterKey/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='manageTabKey' fullname='flashx.textLayout.elements:Configuration/manageTabKey/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='overflowPolicy' fullname='flashx.textLayout.elements:Configuration/overflowPolicy/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='releaseLineCreationData' fullname='flashx.textLayout.elements:Configuration/releaseLineCreationData/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='scrollDragDelay' fullname='flashx.textLayout.elements:Configuration/scrollDragDelay/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scrollDragPixels' fullname='flashx.textLayout.elements:Configuration/scrollDragPixels/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scrollMouseWheelMultiplier' fullname='flashx.textLayout.elements:Configuration/scrollMouseWheelMultiplier/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scrollPagePercentage' fullname='flashx.textLayout.elements:Configuration/scrollPagePercentage/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='textFlowInitialFormat' fullname='flashx.textLayout.elements:Configuration/textFlowInitialFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='unfocusedSelectionFormat' fullname='flashx.textLayout.elements:Configuration/unfocusedSelectionFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.edit:SelectionFormat' param_defaults='undefined' result_type='void'>
</method>
<field name='_cursorFunction' fullname='flashx.textLayout.elements:Configuration/private:_cursorFunction' type='Function' isStatic='false' isConst='false' >
</field>
<field name='_defaultLinkActiveFormat' fullname='flashx.textLayout.elements:Configuration/private:_defaultLinkActiveFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_defaultLinkHoverFormat' fullname='flashx.textLayout.elements:Configuration/private:_defaultLinkHoverFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_defaultLinkNormalFormat' fullname='flashx.textLayout.elements:Configuration/private:_defaultLinkNormalFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_defaultListMarkerFormat' fullname='flashx.textLayout.elements:Configuration/private:_defaultListMarkerFormat' type='flashx.textLayout.formats:IListMarkerFormat' isStatic='false' isConst='false' >
</field>
<field name='_enableAccessibility' fullname='flashx.textLayout.elements:Configuration/private:_enableAccessibility' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_flowComposerClass' fullname='flashx.textLayout.elements:Configuration/private:_flowComposerClass' type='Class' isStatic='false' isConst='false' >
</field>
<field name='_focusedSelectionFormat' fullname='flashx.textLayout.elements:Configuration/private:_focusedSelectionFormat' type='flashx.textLayout.edit:SelectionFormat' isStatic='false' isConst='false' >
</field>
<field name='_immutableClone' fullname='flashx.textLayout.elements:Configuration/private:_immutableClone' type='flashx.textLayout.elements:IConfiguration' isStatic='false' isConst='false' >
</field>
<field name='_inactiveSelectionFormat' fullname='flashx.textLayout.elements:Configuration/private:_inactiveSelectionFormat' type='flashx.textLayout.edit:SelectionFormat' isStatic='false' isConst='false' >
</field>
<field name='_inlineGraphicResolverFunction' fullname='flashx.textLayout.elements:Configuration/private:_inlineGraphicResolverFunction' type='Function' isStatic='false' isConst='false' >
</field>
<field name='_manageEnterKey' fullname='flashx.textLayout.elements:Configuration/private:_manageEnterKey' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_manageTabKey' fullname='flashx.textLayout.elements:Configuration/private:_manageTabKey' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ If manageTabKey and manageEnterKey are false, the client must handle those keys on their own. ]]></description>
</field>
<field name='_overflowPolicy' fullname='flashx.textLayout.elements:Configuration/private:_overflowPolicy' type='String' isStatic='false' isConst='false' >
</field>
<field name='_releaseLineCreationData' fullname='flashx.textLayout.elements:Configuration/private:_releaseLineCreationData' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_scrollDragDelay' fullname='flashx.textLayout.elements:Configuration/private:_scrollDragDelay' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_scrollDragPixels' fullname='flashx.textLayout.elements:Configuration/private:_scrollDragPixels' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_scrollMouseWheelMultiplier' fullname='flashx.textLayout.elements:Configuration/private:_scrollMouseWheelMultiplier' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_scrollPagePercentage' fullname='flashx.textLayout.elements:Configuration/private:_scrollPagePercentage' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_textFlowInitialFormat' fullname='flashx.textLayout.elements:Configuration/private:_textFlowInitialFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_unfocusedSelectionFormat' fullname='flashx.textLayout.elements:Configuration/private:_unfocusedSelectionFormat' type='flashx.textLayout.edit:SelectionFormat' isStatic='false' isConst='false' >
</field>
<field name='hasTouchScreen' fullname='flashx.textLayout.elements:Configuration/tlf_internal:hasTouchScreen' type='Boolean' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='playerEnablesArgoFeatures' fullname='flashx.textLayout.elements:Configuration/tlf_internal:playerEnablesArgoFeatures' type='Boolean' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='playerEnablesSpicyFeatures' fullname='flashx.textLayout.elements:Configuration/tlf_internal:playerEnablesSpicyFeatures' type='Boolean' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='FlowLeafElement' fullname='flashx.textLayout.elements:FlowLeafElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\FlowLeafElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:FlowElement' isFinal='false' isDynamic='false' >
<description><![CDATA[ Base class for FlowElements that appear at the lowest level of the flow hierarchy. FlowLeafElement objects have

	no children and include InlineGraphicElement objects and SpanElement objects.

	
	]]></description>
<langversion><![CDATA[3.0

	
	]]></langversion>
<playerversion><![CDATA[Flash 10

	]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	]]></playerversion>
<see><![CDATA[InlineGraphicElement

	]]></see>
<see><![CDATA[SpanElement

	]]></see>
</classRec>
<method name='FlowLeafElement' fullname='flashx.textLayout.elements:FlowLeafElement/FlowLeafElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ 

		 Base class - invoking new FlowLeafElement() throws an error exception. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='addBackgroundRect' fullname='flashx.textLayout.elements:FlowLeafElement/private:addBackgroundRect' isStatic='false' isFinal='false' isOverride='false'  param_names='tLine;metrics;spanBounds;horizontalText;isTCY' param_types='flash.text.engine:TextLine;flash.text.engine:FontMetrics;flash.geom:Rectangle;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined;false' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='appendElementsForDelayedUpdate' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:appendElementsForDelayedUpdate' isStatic='false' isFinal='false' isOverride='true'  param_names='tf;changeType' param_types='flashx.textLayout.elements:TextFlow;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='blockElementExists' fullname='flashx.textLayout.elements:FlowLeafElement/private:blockElementExists' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='calculateStrikeThrough' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:calculateStrikeThrough' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine;blockProgression;metrics' param_types='flash.text.engine:TextLine;String;flash.text.engine:FontMetrics' param_defaults='undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='calculateUnderlineOffset' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:calculateUnderlineOffset' isStatic='false' isFinal='false' isOverride='false'  param_names='stOffset;blockProgression;metrics;textLine' param_types='Number;String;flash.text.engine:FontMetrics;flash.text.engine:TextLine' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computeElementFormatHelper' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:computeElementFormatHelper' isStatic='true' isFinal='false' isOverride='false'  param_names='computedFormat;para;swfContext' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.elements:ParagraphElement;flashx.textLayout.compose:ISWFContext' param_defaults='undefined;undefined;undefined' result_type='flash.text.engine:ElementFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computeElementFormat' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:computeElementFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text.engine:ElementFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createContentElement' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:createContentElement' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getBlockElement' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:getBlockElement' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text.engine:ContentElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getCSSInlineBoxHelper' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:getCSSInlineBoxHelper' isStatic='true' isFinal='false' isOverride='false'  param_names='computedFormat;metrics;textLine;para' param_types='flashx.textLayout.formats:ITextLayoutFormat;flash.text.engine:FontMetrics;flash.text.engine:TextLine;flashx.textLayout.elements:ParagraphElement' param_defaults='undefined;undefined;undefined;null' result_type='flash.geom:Rectangle'>
<description><![CDATA[ ]]></description>
<param><![CDATA[textLine		The containing text line

		 ]]></param>
<param><![CDATA[para			The containing para. Only used for resolving AUTO dominantBaseline value. 

		 							May be null, in which case the AUTO dominantBaseline value is resolved based on other attributes (such as the element's computed locale). 	

		 ]]></param>
<return><![CDATA[A rectangle representing the inline box. Top and Bottom are relative to the line's Roman baseline. Left and Right are ignored.

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='getCSSInlineBox' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:getCSSInlineBox' isStatic='false' isFinal='false' isOverride='false'  param_names='blockProgression;textLine;para;swfContext' param_types='String;flash.text.engine:TextLine;flashx.textLayout.elements:ParagraphElement;flashx.textLayout.compose:ISWFContext' param_defaults='undefined;undefined;null;null' result_type='flash.geom:Rectangle'>
<description><![CDATA[ ]]></description>
<param><![CDATA[blockProgression	Block progression

		 ]]></param>
<param><![CDATA[textLine			The containing text line

		 ]]></param>
<param><![CDATA[para				The containing para. Only used for resolving AUTO dominantBaseline value. 

		 								May be null, in which case the AUTO dominantBaseline value is resolved based on other attributes (such as the element's computed locale). 	

		 ]]></param>
<param><![CDATA[swfContext			The SWF context in which certain method calls (such as the one used to get font metrics) are made

		 								May be null in which case the current SWF context is used.

		 ]]></param>
<return><![CDATA[Null if the element is not "inline"

		 								Otherwise, a rectangle representing the inline box. Top and Bottom are relative to the line's Roman baseline. Left and Right are ignored.

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='getCharAtPosition' fullname='flashx.textLayout.elements:FlowLeafElement/getCharAtPosition' isStatic='false' isFinal='false' isOverride='true'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getComputedFontMetrics' fullname='flashx.textLayout.elements:FlowLeafElement/getComputedFontMetrics' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text.engine:FontMetrics'>
<description><![CDATA[ Returns the FontMetrics object for the span. The properties of the FontMetrics object describe the 

		 emBox, strikethrough position, strikethrough thickness, underline position, 

		 and underline thickness for the specified font. 

		 
 		 ]]></description>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[font metrics associated with the span

		 ]]></return>
<see><![CDATA[flash.text.engine.FontMetrics

		 ]]></see>
<see><![CDATA[flash.text.engine.ElementFormat#getFontMetrics()

		 
		 ]]></see>
</method>
<method name='getEffectiveFontSize' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:getEffectiveFontSize' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Returns the fontSize from this element's properties.  ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectiveLineHeight' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:getEffectiveLineHeight' isStatic='false' isFinal='false' isOverride='false'  param_names='blockProgression' param_types='String' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ Returns the calculated lineHeight from this element's properties.  ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getElementFormat' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:getElementFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text.engine:ElementFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEventMirror' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:getEventMirror' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:IEventDispatcher'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.EventDispatcher

		 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowElementMouseEvent

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='getNextLeaf' fullname='flashx.textLayout.elements:FlowLeafElement/getNextLeaf' isStatic='false' isFinal='false' isOverride='false'  param_names='limitElement' param_types='flashx.textLayout.elements:FlowGroupElement' param_defaults='null' result_type='flashx.textLayout.elements:FlowLeafElement'>
<description><![CDATA[

		 Returns the next FlowLeafElement object.  

		 

		 ]]></description>
<includeExample><![CDATA[examples\FlowLeafElement_getNextLeafExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<param><![CDATA[limitElement	Specifies FlowGroupElement on whose last leaf to stop looking. A value of null (default) 

		 	means search till no more elements.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[next FlowLeafElement or null if at the end

		 
		 ]]></return>
</method>
<method name='getPreviousLeaf' fullname='flashx.textLayout.elements:FlowLeafElement/getPreviousLeaf' isStatic='false' isFinal='false' isOverride='false'  param_names='limitElement' param_types='flashx.textLayout.elements:FlowGroupElement' param_defaults='null' result_type='flashx.textLayout.elements:FlowLeafElement'>
<description><![CDATA[

		 Returns the previous FlowLeafElement object.  

		 

		 ]]></description>
<includeExample><![CDATA[examples\FlowLeafElement_getPreviousLeafExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<param><![CDATA[limitElement	Specifies the FlowGroupElement on whose first leaf to stop looking.   null (default) means search till no more elements.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[previous leafElement or null if at the end

		 
		 ]]></return>
</method>
<method name='getSpanBoundsOnLine' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:getSpanBoundsOnLine' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine;blockProgression' param_types='flash.text.engine:TextLine;String' param_defaults='undefined;undefined' result_type='Array'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hasActiveEventMirror' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:hasActiveEventMirror' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='normalizeRange' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:normalizeRange' isStatic='false' isFinal='false' isOverride='true'  param_names='normalizeStart;normalizeEnd' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='quickInitializeForSplit' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:quickInitializeForSplit' isStatic='false' isFinal='false' isOverride='false'  param_names='sibling;newSpanLength;newSpanTextElement' param_types='flashx.textLayout.elements:FlowLeafElement;int;flash.text.engine:TextElement' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='releaseContentElement' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:releaseContentElement' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='resolveDomBaseline' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:resolveDomBaseline' isStatic='true' isFinal='false' isOverride='false'  param_names='computedFormat;para' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.elements:ParagraphElement' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setParentAndRelativeStart' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:setParentAndRelativeStart' isStatic='false' isFinal='false' isOverride='true'  param_names='newParent;newStart' param_types='flashx.textLayout.elements:FlowGroupElement;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='translateColor' fullname='flashx.textLayout.elements:FlowLeafElement/private:translateColor' isStatic='true' isFinal='false' isOverride='false'  param_names='color' param_types='String' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateAdornmentsOnBounds' fullname='flashx.textLayout.elements:FlowLeafElement/private:updateAdornmentsOnBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='tLine;blockProgression;spanBounds' param_types='flash.text.engine:TextLine;String;flash.geom:Rectangle' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='updateAdornments' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:updateAdornments' isStatic='false' isFinal='false' isOverride='false'  param_names='tLine;blockProgression' param_types='flash.text.engine:TextLine;String' param_defaults='undefined;undefined' result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateIMEAdornments' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:updateIMEAdornments' isStatic='false' isFinal='false' isOverride='false'  param_names='tLine;blockProgression;imeStatus' param_types='flash.text.engine:TextLine;String;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computedFormat' fullname='flashx.textLayout.elements:FlowLeafElement/computedFormat/get' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The computed text format attributes that are in effect for this element.

		 Takes into account the inheritance of attributes.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat

		 ]]></see>
</method>
<method name='text' fullname='flashx.textLayout.elements:FlowLeafElement/text/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 The text associated with the FlowLeafElement:

		 <p><ul>

		 <li>The value for SpanElement subclass will be one character less than <code>textLength</code> if this is the last span in a ParagraphELement.</li>

		 <li>The value for BreakElement subclass is a U+2028</li>

		 <li>The value for TabElement subclass is a tab</li>

		 <li>The value for InlineGraphicElement subclass is U+FDEF</li>

		 </ul></p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.SpanElement#replaceText()

		 ]]></see>
</method>
<field name='_blockElement' fullname='flashx.textLayout.elements:FlowLeafElement/protected:_blockElement' type='flash.text.engine:ContentElement' isStatic='false' isConst='false' >
<description><![CDATA[ Holds the content of the leaf ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_eventMirror' fullname='flashx.textLayout.elements:FlowLeafElement/tlf_internal:_eventMirror' type='flashx.textLayout.events:FlowElementEventDispatcher' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_hasAttachedListeners' fullname='flashx.textLayout.elements:FlowLeafElement/private:_hasAttachedListeners' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_text' fullname='flashx.textLayout.elements:FlowLeafElement/protected:_text' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='FlowGroupElement' fullname='flashx.textLayout.elements:FlowGroupElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\FlowGroupElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:FlowElement' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The FlowGroupElement class is the base class for FlowElement objects that can have an array of children. These classes include

	 TextFlow, ParagraphElement, DivElement, and LinkElement.

	 
	 <p>You cannot create a FlowGroupElement object directly. Invoking <code>new FlowGroupElement()</code> throws an error 

 	 exception.</p>

 	 
 	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[DivElement

	 ]]></see>
<see><![CDATA[LinkElement

	 ]]></see>
<see><![CDATA[ParagraphElement

	 ]]></see>
<see><![CDATA[TextFlow

	 ]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:FlowGroupElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='FlowGroupElement' fullname='flashx.textLayout.elements:FlowGroupElement/FlowGroupElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Base class - invoking <code>new FlowGroupElement()</code> throws an error exception.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='addChildAfterInternal' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:addChildAfterInternal' isStatic='false' isFinal='false' isOverride='false'  param_names='child;newChild' param_types='flashx.textLayout.elements:FlowElement;flashx.textLayout.elements:FlowElement' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='addChildAt' fullname='flashx.textLayout.elements:FlowGroupElement/addChildAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index;child' param_types='uint;flashx.textLayout.elements:FlowElement' param_defaults='undefined;undefined' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 Adds a child FlowElement object at the specified index position.

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowGroupElement_addChildAtExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<param><![CDATA[The index of the position at which to add the child element, with the first position being 0.

		 ]]></param>
<param><![CDATA[child The child element to add.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the added child FlowElement 

		 
		 ]]></return>
<throws><![CDATA[RangeError The <code>index</code> is out of range.

		 
		 ]]></throws>
</method>
<method name='addChild' fullname='flashx.textLayout.elements:FlowGroupElement/addChild' isStatic='false' isFinal='false' isOverride='false'  param_names='child' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 Appends a child FlowElement object. The new child is added to the end of the children list.

		 

		 ]]></description>
<includeExample><![CDATA[examples\FlowGroupElement_addChildExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[child The child element to append.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the added child FlowElement 

		 

		 ]]></return>
</method>
<method name='appendElementsForDelayedUpdate' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:appendElementsForDelayedUpdate' isStatic='false' isFinal='false' isOverride='true'  param_names='tf;changeType' param_types='flashx.textLayout.elements:TextFlow;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='applyFunctionToElements' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:applyFunctionToElements' isStatic='false' isFinal='false' isOverride='true'  param_names='func' param_types='Function' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='applyWhiteSpaceCollapse' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:applyWhiteSpaceCollapse' isStatic='false' isFinal='false' isOverride='true'  param_names='collapse' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='canOwnFlowElement' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:canOwnFlowElement' isStatic='false' isFinal='false' isOverride='false'  param_names='elem' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Helper for replaceChildren.  Determines if elem can legally be a child of this.

		 ]]></description>
<return><![CDATA[true --> ok, false--> not a legal child

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='createContentAsGroup' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:createContentAsGroup' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text.engine:GroupElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='deepCopy' fullname='flashx.textLayout.elements:FlowGroupElement/deepCopy' isStatic='false' isFinal='false' isOverride='true'  param_names='startPos;endPos' param_types='int;int' param_defaults='0;-1' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='findChildIndexAtPosition' fullname='flashx.textLayout.elements:FlowGroupElement/findChildIndexAtPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[

		 Given a relative text position, find the index of the first child FlowElement that contains the relative position. 

		 More than one child can contain relative position because of zero length FlowElements.

		  

		 <p>Examine the children to find the FlowElement that contains the relative position. The supplied relative position 

		 is relative to this FlowElement.</p>

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowGroupElement_findChildIndexAtPositionExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[relativePosition 	the position relative to this element

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[index of first child element containing <code>relativePosition</code>

		 
		 ]]></return>
</method>
<method name='findLeaf' fullname='flashx.textLayout.elements:FlowGroupElement/findLeaf' isStatic='false' isFinal='false' isOverride='false'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowLeafElement'>
<description><![CDATA[

		 Given a relative text position, find the leaf element that contains the position. 

		 
		 <p>Looks down the flow element hierarchy to find the FlowLeafElement that 

		 contains the specified position. The specified position 

		 is relative to this FlowElement object.</p>

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowGroupElement_findLeafExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[relativePosition	relative text index to look up.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the leaf element containing the relative position.

		 
		 ]]></return>
</method>
<method name='formatChanged' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:formatChanged' isStatic='false' isFinal='false' isOverride='true'  param_names='notifyModelChanged' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getCharAtPosition' fullname='flashx.textLayout.elements:FlowGroupElement/getCharAtPosition' isStatic='false' isFinal='false' isOverride='true'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getChildAt' fullname='flashx.textLayout.elements:FlowGroupElement/getChildAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 Returns the FlowElement child at the specified index.

		 

		 ]]></description>
<includeExample><![CDATA[examples\FlowGroupElement_getChildAtExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[index the position at which to find the FlowElement object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the child FlowElement object at the specified position.

		 ]]></return>
</method>
<method name='getChildIndex' fullname='flashx.textLayout.elements:FlowGroupElement/getChildIndex' isStatic='false' isFinal='false' isOverride='false'  param_names='child' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='int'>
<description><![CDATA[ 

		 Searches in children for the specified FlowElement object and returns its index position.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[child	The FlowElement object item to locate among the children.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[The index position of the specified chilc.  If <code>child</code> is not found, returns -1.

		  

		 ]]></return>
</method>
<method name='getFirstLeaf' fullname='flashx.textLayout.elements:FlowGroupElement/getFirstLeaf' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowLeafElement'>
<description><![CDATA[

		 Returns the first FlowLeafElement descendant of this group.

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowGroupElement_getFirstLeafExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the first FlowLeafElement object.

		 
		 ]]></return>
</method>
<method name='getLastLeaf' fullname='flashx.textLayout.elements:FlowGroupElement/getLastLeaf' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowLeafElement'>
<description><![CDATA[

		 Returns the last FlowLeafElement descendent of this group.

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowGroupElement_getLastLeafExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the last FlowLeafElement object.

		 
		 ]]></return>
</method>
<method name='getNestedArgCount' fullname='flashx.textLayout.elements:FlowGroupElement/private:getNestedArgCount' isStatic='true' isFinal='false' isOverride='false'  param_names='obj' param_types='Object' param_defaults='undefined' result_type='uint'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getNestedArg' fullname='flashx.textLayout.elements:FlowGroupElement/private:getNestedArg' isStatic='true' isFinal='false' isOverride='false'  param_names='obj;index' param_types='Object;uint' param_defaults='undefined;undefined' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getNextLeafHelper' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:getNextLeafHelper' isStatic='false' isFinal='false' isOverride='false'  param_names='limitElement;child' param_types='flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.elements:FlowElement' param_defaults='undefined;undefined' result_type='flashx.textLayout.elements:FlowLeafElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getPreviousLeafHelper' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:getPreviousLeafHelper' isStatic='false' isFinal='false' isOverride='false'  param_names='limitElement;child' param_types='flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.elements:FlowElement' param_defaults='undefined;undefined' result_type='flashx.textLayout.elements:FlowLeafElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getText' fullname='flashx.textLayout.elements:FlowGroupElement/getText' isStatic='false' isFinal='false' isOverride='true'  param_names='relativeStart;relativeEnd;paragraphSeparator' param_types='int;int;String' param_defaults='0;-1;
' result_type='String'>
</method>
<method name='hasBlockElement' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:hasBlockElement' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='insertBlockElement' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:insertBlockElement' isStatic='false' isFinal='false' isOverride='false'  param_names='child;block' param_types='flashx.textLayout.elements:FlowElement;flash.text.engine:ContentElement' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='normalizeRange' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:normalizeRange' isStatic='false' isFinal='false' isOverride='true'  param_names='normalizeStart;normalizeEnd' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeBlockElement' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:removeBlockElement' isStatic='false' isFinal='false' isOverride='false'  param_names='child;block' param_types='flashx.textLayout.elements:FlowElement;flash.text.engine:ContentElement' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeChildAt' fullname='flashx.textLayout.elements:FlowGroupElement/removeChildAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='uint' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 Removes the child FlowElement object at the specified index position.

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowGroupElement_removeChildAtExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[index position at which to remove the child element.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the child FlowElement object removed from the specified position.

		 
		 ]]></return>
<throws><![CDATA[RangeError The <code>index</code> is out of range.

		 
		 ]]></throws>
</method>
<method name='removeChild' fullname='flashx.textLayout.elements:FlowGroupElement/removeChild' isStatic='false' isFinal='false' isOverride='false'  param_names='child' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 Removes the specified child FlowElement object from the group.

		 
		 ]]></description>
<includeExample><![CDATA[examples\FlowGroupElement_removeChildExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[child The child element to remove.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the removed child FlowElement object 

		 
		 ]]></return>
<throws><![CDATA[ArgumentError The <code>child</code> is not found.

		 
		 ]]></throws>
</method>
<method name='replaceChildren' fullname='flashx.textLayout.elements:FlowGroupElement/replaceChildren' isStatic='false' isFinal='false' isOverride='false'  param_names='beginChildIndex;endChildIndex;rest' param_types='int;int;restParam' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Replaces child elements in the group with the specified new elements. Use the <code>beginChildIndex</code> and

		 <code>endChildIndex</code> parameters to govern the operation as follows:

		 <p><ul>

		 <li>To delete elements, do not pass any replacement elements.</li>

		 <li>To insert elements, pass the same value for <code>beginChildIndex</code> and <code>endChildIndex</code>.  

		 The new elements is inserted before the specified index.</li>

		 <li>To append elements, pass <code>numChildren</code> for <code>beginChildIndex</code> and <code>endChildIndex</code>.</li>

		 </ul></p>

		 <p>Otherwise, this method replaces the specified elements, starting with the element at <code>beginChildIndex</code> 

		 and up to but not including <code>endChildIndex</code>.</p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\FlowGroupElement_replaceChildrenExample.as -noswf

		 
	     ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[beginChildIndex The index value for the start position of the replacement range in the children array.

		 ]]></param>
<param><![CDATA[endChildIndex The index value following the end position of the replacement range in the children array.

		 ]]></param>
<param><![CDATA[rest The elements to replace the specified range of elements. Can be a sequence containing flow elements or

		 arrays or vectors thereof.

		  

	     ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<throws><![CDATA[RangeError The <code>beginChildIndex</code> or <code>endChildIndex</code> specified is out of range.

	     

	     ]]></throws>
</method>
<method name='splitAtIndex' fullname='flashx.textLayout.elements:FlowGroupElement/splitAtIndex' isStatic='false' isFinal='false' isOverride='false'  param_names='childIndex' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[ 

		 Splits this object at the position specified by the <code>childIndex</code> parameter. If this group element has 

		 a parent, creates a shallow copy of this object and replaces its children with the elements up to the index. Moves 

		 elements following <code>childIndex</code> into the copy.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the new FlowGroupElement object.

		 ]]></return>
<throws><![CDATA[RangeError if <code>childIndex</code> is greater than the length of the children.

		 
		 ]]></throws>
</method>
<method name='splitAtPosition' fullname='flashx.textLayout.elements:FlowGroupElement/splitAtPosition' isStatic='false' isFinal='false' isOverride='true'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 Splits this object at the position specified by the <code>relativePosition</code> parameter, where 

		 the relative position is a relative text position in this element.

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<throws><![CDATA[RangeError if relativePosition is greater than textLength, or less than 0.

		 
		 ]]></throws>
<private><![CDATA[]]></private>
</method>
<method name='styleSelectorChanged' fullname='flashx.textLayout.elements:FlowGroupElement/tlf_internal:styleSelectorChanged' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ This gets called when an element has changed its style selection related attributes. This may happen because an

		 ancestor element changed it attributes.

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mxmlChildren' fullname='flashx.textLayout.elements:FlowGroupElement/mxmlChildren/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[ 

		 Appends an array of children to this object. Uses the <code>replaceChildren()</code> method to append each 

		 element in the array. Intended for use during an mxml compiled import.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[array - array of children to attach.  Each element of the array must be a FlowElement object or a String.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[FlowGroupElement#replaceChildren()

		 
		 ]]></see>
<throws><![CDATA[TypeError if array element is not a FlowElement or String

		 ]]></throws>
</method>
<method name='numChildren' fullname='flashx.textLayout.elements:FlowGroupElement/numChildren/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		Returns the number of FlowElement children that this FlowGroupElement object has.

		
		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='mxmlChildren' fullname='flashx.textLayout.elements:FlowGroupElement/mxmlChildren/set' isStatic='false' isFinal='false' isOverride='false'  param_names='array' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='_childArray' fullname='flashx.textLayout.elements:FlowGroupElement/private:_childArray' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[ children of the FlowGroupElement.  They must all be FlowElements. Depending on _numChildren either store a single child in _singleChild or multiple children in the array. ]]></description>
</field>
<field name='_numChildren' fullname='flashx.textLayout.elements:FlowGroupElement/private:_numChildren' type='int' isStatic='false' isConst='false' >
</field>
<field name='_singleChild' fullname='flashx.textLayout.elements:FlowGroupElement/private:_singleChild' type='flashx.textLayout.elements:FlowElement' isStatic='false' isConst='false' >
</field>
<classRec name='SpanElement' fullname='flashx.textLayout.elements:SpanElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\SpanElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:FlowLeafElement' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	The SpanElement class represents a run of text that has a single set of formatting attributes applied. SpanElement 

	objects contain the text in a paragraph. A simple paragraph (ParagraphElement) includes one or more SpanElement objects. 

	
	<p>A ParagraphElement will have a single SpanElement object if all the text in the paragraph shares the same set of 

	attributes. It has multiple SpanElement objects if the text in the paragraph has multiple formats.</p>

	
	]]></description>
<includeExample><![CDATA[examples/SpanElementExample.as -noswf

	
	]]></includeExample>
<langversion><![CDATA[3.0

	
	]]></langversion>
<playerversion><![CDATA[Flash 10

	]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	]]></playerversion>
<see><![CDATA[FlowElement

	]]></see>
<see><![CDATA[ParagraphElement

	]]></see>
<see><![CDATA[TextFlow

     	]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:SpanElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='SpanElement' fullname='flashx.textLayout.elements:SpanElement/SpanElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor - creates a SpanElement object to hold a run of text in a paragraph.

		
		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='addParaTerminator' fullname='flashx.textLayout.elements:SpanElement/tlf_internal:addParaTerminator' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='applyWhiteSpaceCollapse' fullname='flashx.textLayout.elements:SpanElement/tlf_internal:applyWhiteSpaceCollapse' isStatic='false' isFinal='false' isOverride='true'  param_names='collapse' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createContentElement' fullname='flashx.textLayout.elements:SpanElement/tlf_internal:createContentElement' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getText' fullname='flashx.textLayout.elements:SpanElement/getText' isStatic='false' isFinal='false' isOverride='true'  param_names='relativeStart;relativeEnd;paragraphSeparator' param_types='int;int;String' param_defaults='0;-1;
' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mergeToPreviousIfPossible' fullname='flashx.textLayout.elements:SpanElement/tlf_internal:mergeToPreviousIfPossible' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='normalizeRange' fullname='flashx.textLayout.elements:SpanElement/tlf_internal:normalizeRange' isStatic='false' isFinal='false' isOverride='true'  param_names='normalizeStart;normalizeEnd' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeParaTerminator' fullname='flashx.textLayout.elements:SpanElement/tlf_internal:removeParaTerminator' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='replaceTextInternal' fullname='flashx.textLayout.elements:SpanElement/private:replaceTextInternal' isStatic='false' isFinal='false' isOverride='false'  param_names='startPos;endPos;textValue' param_types='int;int;String' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='replaceText' fullname='flashx.textLayout.elements:SpanElement/replaceText' isStatic='false' isFinal='false' isOverride='false'  param_names='relativeStartPosition;relativeEndPosition;textValue' param_types='int;int;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 Updates the text in text span based on the specified start and end positions. To insert text, set the end position

		 equal to the start position. To append text to the existing text in the span, set the start position and the

		 end position equal to the length of the existing text.

		 
		 <p>The replaced text includes the start character and up to but not including the end character.</p>

		 

		  ]]></description>
<includeExample><![CDATA[examples/SpanElement_replaceTextExample.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<param><![CDATA[relativeStartPosition The index position of the beginning of the text to be replaced, 

		   relative to the start of the span. The first character in the span is at position 0.

		  ]]></param>
<param><![CDATA[relativeEndPosition The index one position after the last character of the text to be replaced, 

		   relative to the start of the span. Set this value equal to <code>relativeStartPos</code>

		   for an insert. 

		  ]]></param>
<param><![CDATA[textValue The replacement text or the text to add, as the case may be.

		 

		  ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<throws><![CDATA[RangeError The <code>relativeStartPosition</code> or <code>relativeEndPosition</code> specified is out of 

		 range or a surrogate pair is being split as a result of the replace.

		 
		 ]]></throws>
</method>
<method name='shallowCopy' fullname='flashx.textLayout.elements:SpanElement/shallowCopy' isStatic='false' isFinal='false' isOverride='true'  param_names='startPos;endPos' param_types='int;int' param_defaults='0;-1' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='splitAtPosition' fullname='flashx.textLayout.elements:SpanElement/splitAtPosition' isStatic='false' isFinal='false' isOverride='true'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 Splits this SpanElement object at the specified position and returns a new SpanElement object for the content

		 that follows the specified position. 

		 
		 <p>This method throws an error if you attempt to split a surrogate pair. In Unicode UTF-16, a surrogate pair is a pair of 

		 16-bit code units (a high code unit and a low code unit) that represent one of the abstract Unicode characters 

		 that cannot be represented in a single 16-bit word. The 16-bit high code unit is in the range of D800 to DBFF. The

		 16-bit low code unit is in the range of DC00 to DFFF.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 

	 	 ]]></langversion>
<param><![CDATA[relativePosition - relative position in the span to create the split

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[- the newly created span. 

		 ]]></return>
<throws><![CDATA[RangeError <code>relativePosition</code> is less than 0 or greater than textLength or a surrogate pair is being split.

		 
		 ]]></throws>
<private><![CDATA[]]></private>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:SpanElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:SpanElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hasParagraphTerminator' fullname='flashx.textLayout.elements:SpanElement/tlf_internal:hasParagraphTerminator/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Specifies whether this SpanElement object terminates the paragraph. The SpanElement object that terminates a 

		 paragraph has an extra, hidden character at the end. This character is added automatically by the component and is

		 included in the value of the <code>textLength</code> property.

		 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mxmlChildren' fullname='flashx.textLayout.elements:SpanElement/mxmlChildren/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[ 

		 Sets text based on content within span tags; always deletes existing children.

		 This property is intended for use during MXML compiled import in Flex. Flash Professional ignores this property.

         When TLF markup elements have other

		 TLF markup elements as children, the children are assigned to this property.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[array - an array of elements within span tags. Each element of array must be a SpecialCharacterElement or a String.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<throws><![CDATA[TypeError If array element is not a SpecialCharacterElement or a String.

		 ]]></throws>
</method>
<method name='text' fullname='flashx.textLayout.elements:SpanElement/text/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mxmlChildren' fullname='flashx.textLayout.elements:SpanElement/mxmlChildren/set' isStatic='false' isFinal='false' isOverride='false'  param_names='array' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<method name='text' fullname='flashx.textLayout.elements:SpanElement/text/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textValue' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Receives the String of text that this SpanElement object holds.

		 
		 <p>The text of a span does not include the carriage return (CR) at the end of the paragraph

		 but it is included in the value of <code>textLength</code>.</p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<field name='_dblSpacePattern' fullname='flashx.textLayout.elements:SpanElement/private:_dblSpacePattern' type='RegExp' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[

		 Makes a shallow copy of this SpanElement between 2 character positions

		 and returns it as a FlowElement.  Unlike deepCopy, shallowCopy does

		 not copy any of the children of this SpanElement.

		 

		 ]]></description>
</field>
<field name='_newLineTabPattern' fullname='flashx.textLayout.elements:SpanElement/private:_newLineTabPattern' type='RegExp' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_tabPlaceholderPattern' fullname='flashx.textLayout.elements:SpanElement/private:_tabPlaceholderPattern' type='RegExp' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='anyPrintChar' fullname='flashx.textLayout.elements:SpanElement/private:anyPrintChar' type='RegExp' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='kParagraphTerminator' fullname='flashx.textLayout.elements:SpanElement/tlf_internal:kParagraphTerminator' type='String' isStatic='true' isConst='true' defaultValue=' ' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='InlineGraphicElement' fullname='flashx.textLayout.elements:InlineGraphicElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\InlineGraphicElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:FlowLeafElement' isFinal='true' isDynamic='false' >
<description><![CDATA[ The InlineGraphicElement class handles graphic objects that display inline in the text. 

     

     <p>You can embed a graphic or any DisplayObject or specify a URl for the location of the graphic. 

     The <code>height</code> and <code>width</code> properties of InlineGraphicElement control the actual size 

     of the graphic to display.  These values also control how much space to allocate

     for the graphic in the TextLine object that contains the graphic.

     The <code>height</code> and <code>width</code> properties each can be one of:</p>

     <ol>

     <li>A number of pixels</li>

     <li>A percent of the measured size of the image</li>

     <li>The constant, "auto", which computes the size (Default value)</li>

     </ol>

     There are three properties, or accessors, pertaining to the width and height of a graphic:

     <ul>

     <li>The <code>width</code> and <code>height</code> properties</li>

     <li>The <code>measuredWidth</code> and <code>measuredHeight</code> properties, which are the width or height of the graphic at load time</li>

     <li>The <code>actualWidth</code> and <code>actualHeight</code> properties, which are the actual display and compose width and height of the graphic as computed from <code>width</code> or <code>height</code> and <code>measuredWidth</code> or <code>measuredHeight</code></li>

     </ul>

     <p>The values of the <code>actualWidth</code> and <code>actualHeight</code> properties are always zero until the graphic 

     is loaded.</p>

     
     <p>If <code>source</code> is specified as a URI, the graphic is loaded asynchronously. If it's a DisplayObject, TextLayout uses the <code>width</code> and 

     <code>height</code> at the time the graphic is set into the InlineGraphicElement object as <code>measuredHeight</code> and <code>measuredWidth</code>; 

     its width and height are read immediately.</p>

     <p><strong>Notes</strong>: For graphics that are loaded asynchronously the user must listen for a 

     StatusChangeEvent.INLINE_GRAPHIC_STATUS_CHANGE event on the TextFlow and call <code>IFlowComposer.updateAllControllers()</code> to have the 

     graphic appear. The value of <code>measuredWidth</code> and <code>measuredHeight</code> for graphics that are in the 

     process of loading is zero.</p>

     
     <p>Some inline graphics are animations or videos that possibly have audio. They begin to run the first time they are composed after they finish loading.  

     They don't stop running until the flowComposer on the TextFlow is set to null.  At that time they are stopped and unloaded.</p>

     

     The following restrictions apply to InLineGraphicElement objects:

     <ol>

      <li>On export of TLFMarkup, source is converted to a string. If the graphic element is 

          a class, the Text Layout Framework can't export it properly</li>.

      <li>When doing a copy/paste operation of an InlineGraphicElement, if source can't be 

          used to create a new InLineGraphicElement, it won't be pasted.  For example if 

          source is a DisplayObject, or if the graphic is set directly, it can't be 

          duplicated.  Best results are obtained if the source is the class of an embedded graphic 

          though that doesn't export/import.</li>

      <li>InLineGraphicElement objects work in the factory (TextFlowTextLineFactory) only if 

          the source is a class or if you explicitly set the graphic to a loaded graphic. 

          InlineGraphic objects that require delayed loads generally do not show up.</li>

     </ol>

     ]]></description>
<includeExample><![CDATA[examples\InlineGraphicElementExample.as -noswf

     
     ]]></includeExample>
<langversion><![CDATA[3.0

     
     ]]></langversion>
<playerversion><![CDATA[Flash 10

     ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

     ]]></playerversion>
<see><![CDATA[#actualHeight

     ]]></see>
<see><![CDATA[#actualWidth

     ]]></see>
<see><![CDATA[flash.display.DisplayObject DisplayObject

     ]]></see>
<see><![CDATA[flashx.textLayout.compose.IFlowComposer#updateAllControllers()

     ]]></see>
<see><![CDATA[flashx.textLayout.events.StatusChangeEvent StatusChangeEvent

     ]]></see>
<see><![CDATA[TextFlow

     ]]></see>
</classRec>
<method name='InlineGraphicElement' fullname='flashx.textLayout.elements:InlineGraphicElement/InlineGraphicElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor - create new InlineGraphicElement object

         
         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='addDefaultLoadHandlers' fullname='flashx.textLayout.elements:InlineGraphicElement/private:addDefaultLoadHandlers' isStatic='false' isFinal='false' isOverride='false'  param_names='loader' param_types='flash.display:Loader' param_defaults='undefined' result_type='void'>
</method>
<method name='appendElementsForDelayedUpdate' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:appendElementsForDelayedUpdate' isStatic='false' isFinal='false' isOverride='true'  param_names='tf;changeType' param_types='flashx.textLayout.elements:TextFlow;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='applyDelayedElementUpdate' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:applyDelayedElementUpdate' isStatic='false' isFinal='false' isOverride='true'  param_names='textFlow;okToUnloadGraphics;hasController' param_types='flashx.textLayout.elements:TextFlow;Boolean;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='calculateStrikeThrough' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:calculateStrikeThrough' isStatic='false' isFinal='false' isOverride='true'  param_names='tLine;blockProgression;metrics' param_types='flash.text.engine:TextLine;String;flash.text.engine:FontMetrics' param_defaults='undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='calculateUnderlineOffset' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:calculateUnderlineOffset' isStatic='false' isFinal='false' isOverride='true'  param_names='stOffset;blockProgression;metrics;tLine' param_types='Number;String;flash.text.engine:FontMetrics;flash.text.engine:TextLine' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeGraphicStatus' fullname='flashx.textLayout.elements:InlineGraphicElement/private:changeGraphicStatus' isStatic='false' isFinal='false' isOverride='false'  param_names='stat' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='computeHeight' fullname='flashx.textLayout.elements:InlineGraphicElement/private:computeHeight' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='computeWidth' fullname='flashx.textLayout.elements:InlineGraphicElement/private:computeWidth' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='createContentElement' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:createContentElement' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='elementHeightWithMarginsAndPadding' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:elementHeightWithMarginsAndPadding' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='elementWidthWithMarginsAndPadding' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:elementWidthWithMarginsAndPadding' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getCSSInlineBox' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:getCSSInlineBox' isStatic='false' isFinal='false' isOverride='true'  param_names='blockProgression;textLine;para;swfContext' param_types='String;flash.text.engine:TextLine;flashx.textLayout.elements:ParagraphElement;flashx.textLayout.compose:ISWFContext' param_defaults='undefined;undefined;null;null' result_type='flash.geom:Rectangle'>
<description><![CDATA[ ]]></description>
<return><![CDATA[Null if the element is not "inline" (i.e., is a float). Otherwise, a rectangle representing the inline box. 

         Top and Bottom are relative to the line's Roman baseline. Left and Right are ignored.

         ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='getEffectiveFontSize' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:getEffectiveFontSize' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectiveLineHeight' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:getEffectiveLineHeight' isStatic='false' isFinal='false' isOverride='true'  param_names='blockProgression' param_types='String' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ Returns the calculated lineHeight from this element's properties.  ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getTypographicAscent' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:getTypographicAscent' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ Returns the typographic ascent of the image (i.e. relative to the line's Roman baseline). ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='heightIsComputed' fullname='flashx.textLayout.elements:InlineGraphicElement/private:heightIsComputed' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='internalSetHeight' fullname='flashx.textLayout.elements:InlineGraphicElement/private:internalSetHeight' isStatic='false' isFinal='false' isOverride='false'  param_names='h' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='internalSetWidth' fullname='flashx.textLayout.elements:InlineGraphicElement/private:internalSetWidth' isStatic='false' isFinal='false' isOverride='false'  param_names='w' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='loadCompleteHandler' fullname='flashx.textLayout.elements:InlineGraphicElement/private:loadCompleteHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='openHandler' fullname='flashx.textLayout.elements:InlineGraphicElement/private:openHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='recursiveShutDownGraphic' fullname='flashx.textLayout.elements:InlineGraphicElement/private:recursiveShutDownGraphic' isStatic='true' isFinal='false' isOverride='false'  param_names='graphic' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
</method>
<method name='removeDefaultLoadHandlers' fullname='flashx.textLayout.elements:InlineGraphicElement/private:removeDefaultLoadHandlers' isStatic='false' isFinal='false' isOverride='false'  param_names='loader' param_types='flash.display:Loader' param_defaults='undefined' result_type='void'>
</method>
<method name='setEffectiveFloat' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:setEffectiveFloat' isStatic='false' isFinal='false' isOverride='false'  param_names='floatValue' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setGraphic' fullname='flashx.textLayout.elements:InlineGraphicElement/private:setGraphic' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
</method>
<method name='shallowCopy' fullname='flashx.textLayout.elements:InlineGraphicElement/shallowCopy' isStatic='false' isFinal='false' isOverride='true'  param_names='startPos;endPos' param_types='int;int' param_defaults='0;-1' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='stop' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:stop' isStatic='false' isFinal='false' isOverride='false'  param_names='okToUnloadGraphics' param_types='Boolean' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateAdornments' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:updateAdornments' isStatic='false' isFinal='false' isOverride='true'  param_names='tLine;blockProgression' param_types='flash.text.engine:TextLine;String' param_defaults='undefined;undefined' result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateAutoSizes' fullname='flashx.textLayout.elements:InlineGraphicElement/private:updateAutoSizes' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ This function updates the size of the graphic element when the size is expressed as a percentage of the graphic's actual size. ]]></description>
</method>
<method name='updateContentElement' fullname='flashx.textLayout.elements:InlineGraphicElement/private:updateContentElement' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='updateForMustUseComposer' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:updateForMustUseComposer' isStatic='false' isFinal='false' isOverride='true'  param_names='textFlow' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateIMEAdornments' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:updateIMEAdornments' isStatic='false' isFinal='false' isOverride='true'  param_names='tLine;blockProgression;imeStatus' param_types='flash.text.engine:TextLine;String;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='widthIsComputed' fullname='flashx.textLayout.elements:InlineGraphicElement/private:widthIsComputed' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:InlineGraphicElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='actualHeight' fullname='flashx.textLayout.elements:InlineGraphicElement/actualHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The actual height in effect. This is the display and compose height that's computed from the

        <code>height</code> and <code>measuredHeight</code> properties.

        
        <p>The values of the <code>actualHeight</code> property are computed according to the following table:</p>

        <table class="innertable" width="100%">

        <tr>

          <th>height property</th>

          <th>actualHeight</th>

        </tr>

        <tr>

          <td>auto</td>

          <td>measuredheight</td>

        </tr>

        <tr>

          <td>h a Percent</td>

          <td>h percent of measuredheight</td>

        </tr>

        <tr>

          <td>h a Number</td>

          <td>h</td>

        </tr>

        </table>

        <p><strong>Notes</strong>: If the inline graphic is a DisplayObject, its width and height are read immmediately.

        If <code>measuredWidth</code> or <code>measuredHeight</code> are zero, then any auto calculations that would cause a divide by zero sets the result to zero.</p>

        
        ]]></description>
<langversion><![CDATA[3.0

        
        ]]></langversion>
<playerversion><![CDATA[Flash 10

        ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

        ]]></playerversion>
<see><![CDATA[#height

        ]]></see>
<see><![CDATA[#measuredHeight

        ]]></see>
</method>
<method name='actualWidth' fullname='flashx.textLayout.elements:InlineGraphicElement/actualWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The actual width in effect. This is the display and compose width that's computed from the

        <code>width</code> and <code>measuredWidth</code> properties.

        
        <p>The values of the <code>actualWidth</code>property are computed according to the 

        following table:</p>

        <table class="innertable" width="100%">

        <tr>

          <th>width property</th> 

          <th>actualWidth</th>

        </tr>

        <tr>

          <td>auto</td>

          <td>measuredWidth</td>

        </tr>

        <tr>

          <td>w a Percent</td>

          <td>w percent of measuredWidth</td>

        </tr>

        <tr>

          <td>w a Number</td>

          <td>w</td>

        </tr>

        </table>

        
        <p><strong>Notes</strong>: If the inline graphic is a DisplayObject, its width and height are read immediately.

        If <code>measuredWidth</code> or <code>measuredHeight</code> are zero, then any auto calculations that would cause a divide by zero sets the result to zero.</p>

        
        ]]></description>
<langversion><![CDATA[3.0

        
        ]]></langversion>
<playerversion><![CDATA[Flash 10

        ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

        ]]></playerversion>
<see><![CDATA[#measuredWidth

        ]]></see>
<see><![CDATA[#width

        
        ]]></see>
</method>
<method name='computedFloat' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:computedFloat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computedFormat' fullname='flashx.textLayout.elements:InlineGraphicElement/computedFormat/get' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='effectiveFloat' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:effectiveFloat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='elementHeight' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:elementHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Height used by composition for laying out text around the graphic. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='elementWidth' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:elementWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Width used by composition for laying out text around the graphic. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='float' fullname='flashx.textLayout.elements:InlineGraphicElement/float/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ 

         Controls the placement of the graphic relative to the text. It can be part of the line, or can be beside the line with the text 

         wrapped around it. 

         <p>Legal values are <code>flashx.textLayout.formats.Float.NONE</code>, <code>flashx.textLayout.formats.Float.LEFT</code>, 

         <code>flashx.textLayout.formats.Float.RIGHT</code>, <code>flashx.textLayout.formats.Float.START</code>, and <code>flashx.textLayout.formats.Float.END</code>.</p>

         <p>Default value is undefined indicating not set.</p>

         <p>If undefined will be treated as <code>Float.NONE</code>.</p>

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.Float

         

         ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

         

         ]]></throws>
</method>
<method name='graphic' fullname='flashx.textLayout.elements:InlineGraphicElement/graphic/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObject'>
<description><![CDATA[ The embedded graphic. 

        
        ]]></description>
<langversion><![CDATA[3.0

        ]]></langversion>
<playerversion><![CDATA[Flash 10

        ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

        ]]></playerversion>
</method>
<method name='height' fullname='flashx.textLayout.elements:InlineGraphicElement/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ The height of the image. May be 'auto', a number of pixels or a percent of the measured height. 

         
         <p>Legal values are flashx.textLayout.formats.FormatValue.AUTO and flashx.textLayout.formats.FormatValue.INHERIT.</p>

         <p>Legal values as a number are from 0 to 32000.</p>

         <p>Legal values as a percent are numbers from 0 to 1000000.</p>

         <p>Default value is undefined indicating not set.</p>

         <p>If undefined or "inherit" the InlineGraphicElement will use the default value of "auto".</p>

         

         ]]></description>
<langversion><![CDATA[3.0

         
         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[#actualHeight

         ]]></see>
<see><![CDATA[#measuredHeight

         ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

         

          ]]></throws>
</method>
<method name='internalHeight' fullname='flashx.textLayout.elements:InlineGraphicElement/private:internalHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='internalWidth' fullname='flashx.textLayout.elements:InlineGraphicElement/private:internalWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='measuredHeight' fullname='flashx.textLayout.elements:InlineGraphicElement/measuredHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The natural height of the graphic. This is the height of the graphic at load time.

        
        ]]></description>
<langversion><![CDATA[3.0

        

        ]]></langversion>
<playerversion><![CDATA[Flash 10

        ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

        ]]></playerversion>
<see><![CDATA[#actualHeight

        ]]></see>
<see><![CDATA[#height

        ]]></see>
</method>
<method name='measuredWidth' fullname='flashx.textLayout.elements:InlineGraphicElement/measuredWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The natural width of the graphic. This is the width of the graphic at load time.

        
        ]]></description>
<langversion><![CDATA[3.0

        
        ]]></langversion>
<playerversion><![CDATA[Flash 10

        ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

        ]]></playerversion>
<see><![CDATA[#actualWidth

        ]]></see>
<see><![CDATA[#width

        ]]></see>
</method>
<method name='placeholderGraphic' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:placeholderGraphic/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:Sprite'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='source' fullname='flashx.textLayout.elements:InlineGraphicElement/source/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Sets the source for the graphic. 

         

         The value can be either a String that is interpreted as a URI, a Class that's interpreted as the class of an 

         embeddded DisplayObject, a DisplayObject instance, or a URLRequest. Creates a DisplayObject and,

         if the InlineGraphicElement object is added into a ParagraphElement in a TextFlow object, causes it to appear

         inline in the text.

         
         ]]></description>
<includeExample><![CDATA[examples\InlineGraphicElement_sourceExample.as -noswf

         
         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='status' fullname='flashx.textLayout.elements:InlineGraphicElement/status/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ The current status of the image. On each status change the owning TextFlow sends a StatusChangeEvent.

         
         ]]></description>
<langversion><![CDATA[3.0

         
         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[one of LOAD_PENDING, LOADING, SIZE_PENDING, READY, ERROR

         ]]></return>
<see><![CDATA[flashx.textLayout.elements.InlineGraphicElementStatus

         ]]></see>
<see><![CDATA[flashx.textLayout.events.StatusChangeEvent

         ]]></see>
</method>
<method name='width' fullname='flashx.textLayout.elements:InlineGraphicElement/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ The width of the graphic. The value can be 'auto', a number of pixels or a percent of the measured width of the image.

         

         <p>Legal values are flashx.textLayout.formats.FormatValue.AUTO and flashx.textLayout.formats.FormatValue.INHERIT.</p>

         <p>Legal values as a number are from 0 to 32000.</p>

         <p>Legal values as a percent are numbers from 0 to 1000000.</p>

         <p>Default value is undefined indicating not set.</p>

         <p>If undefined or "inherit" the InlineGraphicElement will use the default value of "auto".</p>

         

         ]]></description>
<langversion><![CDATA[3.0

         
         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[#actualWidth

         ]]></see>
<see><![CDATA[#measuredWidth

         ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

         

         ]]></throws>
</method>
<method name='elementHeight' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:elementHeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Height used by composition for laying out text around the graphic. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='elementWidth' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:elementWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Width used by composition for laying out text around the graphic. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='float' fullname='flashx.textLayout.elements:InlineGraphicElement/float/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='*' param_defaults='undefined' result_type='*'>
</method>
<method name='height' fullname='flashx.textLayout.elements:InlineGraphicElement/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='h' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='source' fullname='flashx.textLayout.elements:InlineGraphicElement/source/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='flashx.textLayout.elements:InlineGraphicElement/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='w' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<field name='DISPLAY_OBJECT' fullname='flashx.textLayout.elements:InlineGraphicElement/private:DISPLAY_OBJECT' type='String' isStatic='true' isConst='true' defaultValue='displayObject' >
<description><![CDATA[ specified as a DisplayObject ]]></description>
</field>
<field name='EMBED_LOADED' fullname='flashx.textLayout.elements:InlineGraphicElement/private:EMBED_LOADED' type='String' isStatic='true' isConst='true' defaultValue='embedLoaded' >
<description><![CDATA[ loaded from embed ]]></description>
</field>
<field name='LOAD_COMPLETE' fullname='flashx.textLayout.elements:InlineGraphicElement/private:LOAD_COMPLETE' type='String' isStatic='true' isConst='true' defaultValue='loadComplete' >
<description><![CDATA[ load complete received status.  ]]></description>
<see><![CDATA[flash.display.LoaderInfo.Events.open ]]></see>
</field>
<field name='LOAD_INITIATED' fullname='flashx.textLayout.elements:InlineGraphicElement/private:LOAD_INITIATED' type='String' isStatic='true' isConst='true' defaultValue='loadInitiated' >
<description><![CDATA[ load initiated ]]></description>
</field>
<field name='NULL_GRAPHIC' fullname='flashx.textLayout.elements:InlineGraphicElement/private:NULL_GRAPHIC' type='String' isStatic='true' isConst='true' defaultValue='nullGraphic' >
<description><![CDATA[ null graphic ]]></description>
</field>
<field name='OPEN_RECEIVED' fullname='flashx.textLayout.elements:InlineGraphicElement/private:OPEN_RECEIVED' type='String' isStatic='true' isConst='true' defaultValue='openReceived' >
<description><![CDATA[ public status string for open event received status.  ]]></description>
<see><![CDATA[flash.display.LoaderInfo.Events.open ]]></see>
</field>
<field name='_effectiveFloat' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_effectiveFloat' type='String' isStatic='false' isConst='false' >
</field>
<field name='_elementHeight' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_elementHeight' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_elementWidth' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_elementWidth' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_float' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_float' type='' isStatic='false' isConst='false' >
</field>
<field name='_graphicStatus' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_graphicStatus' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_graphic' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_graphic' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
</field>
<field name='_height' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_height' type='' isStatic='false' isConst='false' >
</field>
<field name='_measuredHeight' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_measuredHeight' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_measuredWidth' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_measuredWidth' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_placeholderGraphic' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_placeholderGraphic' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='_source' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_source' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_width' fullname='flashx.textLayout.elements:InlineGraphicElement/private:_width' type='' isStatic='false' isConst='false' >
</field>
<field name='floatPropertyDefinition' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:floatPropertyDefinition' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ Definition of the float property ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='graphicElementText' fullname='flashx.textLayout.elements:InlineGraphicElement/private:graphicElementText' type='String' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='heightPropertyDefinition' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:heightPropertyDefinition' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ Definition of the height property ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='isMac' fullname='flashx.textLayout.elements:InlineGraphicElement/private:isMac' type='Boolean' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='okToUpdateHeightAndWidth' fullname='flashx.textLayout.elements:InlineGraphicElement/private:okToUpdateHeightAndWidth' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='rotationPropertyDefinition' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:rotationPropertyDefinition' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ Disabled due to player bug.  ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='widthPropertyDefinition' fullname='flashx.textLayout.elements:InlineGraphicElement/tlf_internal:widthPropertyDefinition' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ Definition of the width property ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='SubParagraphGroupElementBase' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\SubParagraphGroupElementBase.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:FlowGroupElement' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The SubParagraphGroupElementBase class groups FlowLeafElements together. A SubParagraphGroupElementBase is a child of a 

	 ParagraphElement object and it can contain one or more FlowLeafElement objects as children.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[FlowLeafElement

	 ]]></see>
<see><![CDATA[LinkElement

	 ]]></see>
<see><![CDATA[ParagraphElement

	 ]]></see>
<see><![CDATA[TCYElement

	 ]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:SubParagraphGroupElementBase' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='SubParagraphGroupElementBase' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/SubParagraphGroupElementBase' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor - creates a new SubParagraphGroupElementBase instance.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='acceptTextAfter' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:acceptTextAfter' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Helper function for determination of where text should be inserted.  In the case of LinkElements,

		 text inserted before the LinkElement and text inserted after the LinkElement should not become

		 par of the link.  However, for most other SubParagraphGroupElementBase, inserted text should become

		 part of the SubParagraphGroupElementBase.

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='acceptTextBefore' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:acceptTextBefore' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Helper function for determination of where text should be inserted.  In the case of LinkElements,

		 text inserted before the LinkElement and text inserted after the LinkElement should not become

		 par of the link.  However, for most other SubParagraphGroupElementBase, inserted text should become

		 part of the SubParagraphGroupElementBase.

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='appendElementsForDelayedUpdate' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:appendElementsForDelayedUpdate' isStatic='false' isFinal='false' isOverride='true'  param_names='tf;changeType' param_types='flashx.textLayout.elements:TextFlow;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='canOwnFlowElement' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:canOwnFlowElement' isStatic='false' isFinal='false' isOverride='true'  param_names='elem' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='checkForNesting' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/private:checkForNesting' isStatic='false' isFinal='false' isOverride='false'  param_names='element' param_types='flashx.textLayout.elements:SubParagraphGroupElementBase' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ A LinkElement cannot be nested in another LinkElement, regardless of what elements are in between in the hierarchy.

		 Likewise a TCYElemen may not be nested. This function checks an incoming element to see if any of its children would

		 be disallowed if added to this. ]]></description>
</method>
<method name='createContentAsGroup' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:createContentAsGroup' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.text.engine:GroupElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createContentElement' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:createContentElement' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEventMirror' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:getEventMirror' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.events:IEventDispatcher'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.EventDispatcher

		 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowElementMouseEvent

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='hasActiveEventMirror' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:hasActiveEventMirror' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hasBlockElement' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:hasBlockElement' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='insertBlockElement' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:insertBlockElement' isStatic='false' isFinal='false' isOverride='true'  param_names='child;block' param_types='flashx.textLayout.elements:FlowElement;flash.text.engine:ContentElement' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='normalizeRange' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:normalizeRange' isStatic='false' isFinal='false' isOverride='true'  param_names='normalizeStart;normalizeEnd' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='releaseContentElement' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:releaseContentElement' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeBlockElement' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:removeBlockElement' isStatic='false' isFinal='false' isOverride='true'  param_names='child;block' param_types='flashx.textLayout.elements:FlowElement;flash.text.engine:ContentElement' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='replaceChildren' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/replaceChildren' isStatic='false' isFinal='false' isOverride='true'  param_names='beginChildIndex;endChildIndex;rest' param_types='int;int;restParam' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setParentAndRelativeStart' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:setParentAndRelativeStart' isStatic='false' isFinal='false' isOverride='true'  param_names='newParent;newStart' param_types='flashx.textLayout.elements:FlowGroupElement;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='allowNesting' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:allowNesting/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='groupElement' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:groupElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text.engine:GroupElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='precedence' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:precedence/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
<public><![CDATA[getter to return the precedence value of this SubParagraphGroupElementBase

		 Precedence is used to determine which SPGE element will be the container element

		 when two or more SPGEs of the same textLength are inside one another.

		 

		 Precedence is used to determine which SubParagraphGroupElementBase is the owner when two or 

		 more elements have the same text and are embedded within each other.

		 

		 Note: model permits any order and does not enforce precedence.  This is only a feature used by the EditManager

		 

		 Example: SPGEs A(precedence 900), B(precedence 400), C(precedence 600)

		 Editing Result when all wrap SpanElement "123"

		 

		 <A><C><B>123</B></C></A>

		 

		 If two or more SPGE's have the same precedence value, then the alphabetic order is used:

		 Example: SPGE A(precedence 400), B(precedence 400), C(precedence 600)

		 

		 <C><A><B>123</B></A></C>

		 

		 Current values for SubParagraphGroupElementBase are:

		 	LinkElement - 800

		 	TCYElement - 100

		 

		 If the value is not overriden by descendents of SPGE, then value is kMaxSPGEPrecedence;

		 ]]></public>
</method>
<field name='_eventMirror' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:_eventMirror' type='flashx.textLayout.events:FlowElementEventDispatcher' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_groupElement' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/private:_groupElement' type='flash.text.engine:GroupElement' isStatic='false' isConst='false' >
</field>
<field name='kMaxSPGEPrecedence' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:kMaxSPGEPrecedence' type='uint' isStatic='true' isConst='true' defaultValue='1000' >
<description><![CDATA[ Maximum precedence value ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='kMinSPGEPrecedence' fullname='flashx.textLayout.elements:SubParagraphGroupElementBase/tlf_internal:kMinSPGEPrecedence' type='uint' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[ Minimum precedence value ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='ParagraphFormattedElement' fullname='flashx.textLayout.elements:ParagraphFormattedElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\ParagraphFormattedElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:FlowGroupElement' isFinal='false' isDynamic='false' >
<description><![CDATA[ The ParagraphFormattedElement class is an abstract base class for FlowElement classes that have paragraph properties.

	
	<p>You cannot create a ParagraphFormattedElement object directly. Invoking <code>new ParagraphFormattedElement()</code> 

	throws an error exception.</p> 

	
	]]></description>
<langversion><![CDATA[3.0

	
	]]></langversion>
<playerversion><![CDATA[Flash 10

	]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	]]></playerversion>
<see><![CDATA[ContainerFormattedElement

	]]></see>
<see><![CDATA[ParagraphElement

	

	]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:ParagraphFormattedElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='shallowCopy' fullname='flashx.textLayout.elements:ParagraphFormattedElement/shallowCopy' isStatic='false' isFinal='false' isOverride='true'  param_names='startPos;endPos' param_types='int;int' param_defaults='0;-1' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='SpecialCharacterElement' fullname='flashx.textLayout.elements:SpecialCharacterElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\SpecialCharacterElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:SpanElement' isFinal='false' isDynamic='false' >
<description><![CDATA[ The SpecialCharacterElement class is an abstract base class for elements that represent special characters.

	 
	 <p>You cannot create a SpecialCharacterElement object directly. Invoking <code>new SpecialCharacterElement()</code>

	 throws an error exception.</p>

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[BreakElement

	 ]]></see>
<see><![CDATA[TabElement

	 ]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:SpecialCharacterElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='SpecialCharacterElement' fullname='flashx.textLayout.elements:SpecialCharacterElement/SpecialCharacterElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[  

		 Base class - invoking <code>new SpecialCharacterElement()</code> throws an error exception.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='mergeToPreviousIfPossible' fullname='flashx.textLayout.elements:SpecialCharacterElement/tlf_internal:mergeToPreviousIfPossible' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='LinkElement' fullname='flashx.textLayout.elements:LinkElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\LinkElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:SubParagraphGroupElementBase' interfaces='flash.events:IEventDispatcher' isFinal='true' isDynamic='false' >
<description><![CDATA[ The LinkElement class defines a link to a URI (Universal Resource Identifier), which is executed when the user clicks it.

	 The LinkElement class is a subclass of the SubParagraphGroupElementBase class and it can contain

	 one or more FlowElement objects, such as a SpanElement object that stores the link text. An empty

	 LinkElement, which does not contain a FlowElement object, is ignored. 

	 

	 <p>Normally when clicked the LinkElement will call the <code>flash.net.navigateToURL()</code> method.  A special URI scheme <code>event:</code>

	 is also supported.  This scheme will generate a TextFlow event that the user may listen to in order to execute AS3 code.  An example is included below.</p>

	 

	 <p>If you specify a target, it must be one of the following values:

	 <table class="innertable" width="100%">

	 <tr>

	   <th>Target value</th> 

	   <th>description</th>

	 </tr>

	 <tr>

	   <td>_self</td>

	   <td>Replaces the current HTML page. If it is in a frame or frameset, it will load within that frame. If it is

	       the full browser, it opens to replace the page from which it came.</td>

	 </tr>

	 <tr>

	   <td>_blank</td>

	   <td>Opens a new browser name with no name.</td>

	 </tr>

	 <tr>

	   <td>_parent</td>

	   <td>Replaces the HTML page from which it came.</td>

	 </tr>

	 <tr>

	   <td>_top</td>

	   <td>Loads in the current browser, replacing anything within it, such as a frameset.</td>

	 </tr>

	 </table>

	 </p>

	 
	 ]]></description>
<includeExample><![CDATA[examples\LinkElementExample.as -noswf

	 ]]></includeExample>
<includeExample><![CDATA[examples\LinkElementEventExample.as -noswf

	 
	 ]]></includeExample>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[LinkState

	 ]]></see>
<see><![CDATA[FlowElement#linkActiveFormat FlowElement.linkActiveFormat

	 ]]></see>
<see><![CDATA[FlowElement#linkHoverFormat FlowElement.linkHoverFormat

	 ]]></see>
<see><![CDATA[FlowElement#linkNormalFormat FlowElement.linkNormalFormat

	 ]]></see>
<see><![CDATA[TextFlow

	 
	 ]]></see>
<metadata>
	<Event owner='flashx.textLayout.elements:LinkElement' name='click' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ 

	 Dispatched when the link is clicked. 

	 Clients may override how the link handles the event by handling it themselves, and calling preventDefault().

	 ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowElementMouseEvent.CLICK

	 ]]></eventType>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:LinkElement' name='rollOut' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ 

	 Dispatched when the mouse goes out of the link. 

	 ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowElementMouseEvent.ROLL_OUT

	 ]]></eventType>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:LinkElement' name='rollOver' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[

	 Dispatched when the mouse first enters the link. 

	 ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowElementMouseEvent.ROLL_OVER

	 ]]></eventType>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:LinkElement' name='mouseMove' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ 

	 Dispatched when the mouse passes over the link. 

	 ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowElementMouseEvent.MOUSE_MOVE

	 ]]></eventType>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:LinkElement' name='mouseUp' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ 

	 Dispatched when the mouse is released over a link. 

	 ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowElementMouseEvent.MOUSE_UP

	 ]]></eventType>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:LinkElement' name='mouseDown' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ 

	 Dispatched when the mouse is pressed down over a link.

	 ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowElementMouseEvent.MOUSE_DOWN

	 ]]></eventType>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:LinkElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='LinkElement' fullname='flashx.textLayout.elements:LinkElement/LinkElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor - creates a new LinkElement instance.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='acceptTextAfter' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:acceptTextAfter' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='acceptTextBefore' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:acceptTextBefore' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='addEventListener' fullname='flashx.textLayout.elements:LinkElement/addEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture;priority;useWeakReference' param_types='String;Function;Boolean;int;Boolean' param_defaults='undefined;undefined;false;0;false' result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[flash.events.IEventDispatcher#addEventListener()

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[type The type of event.

		 ]]></param>
<param><![CDATA[listener The listener function that processes the event. This function must accept an event object 

		 as its only parameter and must return nothing, as this example shows:

		 <p><code>function(evt:Event):void</code></p>

		 The function can have any name.

		 ]]></param>
<param><![CDATA[useCapture Determines whether the listener works in the capture phase or the target 

		 and bubbling phases. If <code>useCapture</code> is set to <code>true</code>, the  

		 listener processes the event only during the capture phase and not in the target or 

		 bubbling phase. If <code>useCapture</code> is <code>false</code>, the listener processes the event only

		 during the target or bubbling phase. To listen for the event in all three phases, call 

		 <code>addEventListener()</code> twice, once with <code>useCapture</code> set to <code>true</code>, 

		 then again with <code>useCapture</code> set to <code>false</code>.

		 ]]></param>
<param><![CDATA[priority 	The priority level of the event listener. Priorities are designated by a 32-bit integer. 

		 					The higher the number, the higher the priority. All listeners with priority <em>n</em> 

		 					are processed before listeners of priority <em>n-1</em>. If two or more listeners share 

		 					the same priority, they are processed in the order in which they were added. The default priority is 0. 

		 ]]></param>
<param><![CDATA[useWeakReference Determines whether the reference to the listener is strong or weak. A strong 

		 reference (the default) prevents your listener from being garbage-collected. A weak 

		 reference does not. <p>Class-level member functions are not subject to garbage 

		 collection, so you can set <code>useWeakReference</code> to <code>true</code> for 

		 class-level member functions without subjecting them to garbage collection. If you set

		 <code>useWeakReference</code> to <code>true</code> for a listener that is a nested inner 

		 function, the function will be garbge-collected and no longer persistent. If you create 

		 references to the inner function (save it in another variable) then it is not 

		 garbage-collected and stays persistent.</p>

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='appendElementsForDelayedUpdate' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:appendElementsForDelayedUpdate' isStatic='false' isFinal='false' isOverride='true'  param_names='tf;changeType' param_types='flashx.textLayout.elements:TextFlow;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='chgLinkState' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:chgLinkState' isStatic='false' isFinal='false' isOverride='false'  param_names='linkState' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computeLinkFormat' fullname='flashx.textLayout.elements:LinkElement/private:computeLinkFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='formatName' param_types='String' param_defaults='undefined' result_type='flashx.textLayout.formats:ITextLayoutFormat'>
</method>
<method name='dispatchEvent' fullname='flashx.textLayout.elements:LinkElement/dispatchEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:Event' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[flash.events.IEventDispatcher#dispatchEvent()

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='hasEventListener' fullname='flashx.textLayout.elements:LinkElement/hasEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[flash.events.IEventDispatcher#hasEventListener()

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='mergeToPreviousIfPossible' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:mergeToPreviousIfPossible' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mouseClickHandler' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:mouseClickHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='mgr;evt' param_types='flashx.textLayout.events:FlowElementMouseEventManager;flash.events:MouseEvent' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mouseDownHandler' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:mouseDownHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='mgr;evt' param_types='flashx.textLayout.events:FlowElementMouseEventManager;flash.events:MouseEvent' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mouseMoveHandler' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:mouseMoveHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='mgr;evt' param_types='flashx.textLayout.events:FlowElementMouseEventManager;flash.events:MouseEvent' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mouseOutHandler' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:mouseOutHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='mgr;evt' param_types='flashx.textLayout.events:FlowElementMouseEventManager;flash.events:MouseEvent' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mouseOverHandler' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:mouseOverHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='mgr;evt' param_types='flashx.textLayout.events:FlowElementMouseEventManager;flash.events:MouseEvent' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mouseUpHandler' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:mouseUpHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='mgr;evt' param_types='flashx.textLayout.events:FlowElementMouseEventManager;flash.events:MouseEvent' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeEventListener' fullname='flashx.textLayout.elements:LinkElement/removeEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture' param_types='String;Function;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
<description><![CDATA[

		 
		 ]]></description>
<copy><![CDATA[flash.events.IEventDispatcher#removeEventListener().

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[type The type of event.

		 ]]></param>
<param><![CDATA[listener The listener object to remove.

		 ]]></param>
<param><![CDATA[useCapture Specifies whether the listener was registered for the capture phase or the target and bubbling phases. If the listener was registered for both the capture phase and the target and bubbling phases, two calls to <code>removeEventListener()</code> are required to remove both: one call with <code>useCapture</code> set to <code>true</code>, and another call with <code>useCapture</code> set to <code>false</code>. 

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='setToState' fullname='flashx.textLayout.elements:LinkElement/private:setToState' isStatic='false' isFinal='false' isOverride='false'  param_names='linkState' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='shallowCopy' fullname='flashx.textLayout.elements:LinkElement/shallowCopy' isStatic='false' isFinal='false' isOverride='true'  param_names='startPos;endPos' param_types='int;int' param_defaults='0;-1' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateForMustUseComposer' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:updateForMustUseComposer' isStatic='false' isFinal='false' isOverride='true'  param_names='textFlow' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='willTrigger' fullname='flashx.textLayout.elements:LinkElement/willTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[flash.events.IEventDispatcher#willTrigger()

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:LinkElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='effectiveLinkElementTextLayoutFormat' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:effectiveLinkElementTextLayoutFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The state-dependent character attributes for the link.

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='formatForCascade' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:formatForCascade/get' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='href' fullname='flashx.textLayout.elements:LinkElement/href/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 The Uniform Resource Identifier (URI) associated with the LinkElement object.  The URI can be any URI 

		 supported by the <code>flash.net.navigateToURL()</code> method. This property maps

		 to the <code>request</code> parameter for that method.  

		 

		 The URI may also be of the form <code>event:eventType</code>.  When clicked the TextFlow will generate an event of type <code>eventType</code>.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[../../../flash/net/package.html#navigateToURL() flash.net.navigateToURL()

		 ]]></see>
</method>
<method name='linkState' fullname='flashx.textLayout.elements:LinkElement/linkState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 The current state of the link.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[LinkState

		 ]]></see>
</method>
<method name='precedence' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:precedence/get' isStatic='false' isFinal='false' isOverride='true'  result_type='uint'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='target' fullname='flashx.textLayout.elements:LinkElement/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 The Target value associated with the LinkElement. Possible values are "_self", "_blank",

		 "_parent", and "_top". This value maps to the <code>window</code> parameter of the

		 <code>flash.net.navigateToURL()</code> method.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[../../../flash/net/package.html#navigateToURL() flash.net.navigateToURL()

		 ]]></see>
</method>
<method name='href' fullname='flashx.textLayout.elements:LinkElement/href/set' isStatic='false' isFinal='false' isOverride='false'  param_names='newUriString' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='target' fullname='flashx.textLayout.elements:LinkElement/target/set' isStatic='false' isFinal='false' isOverride='false'  param_names='newTargetString' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='LINK_ACTIVE_FORMAT_NAME' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:LINK_ACTIVE_FORMAT_NAME' type='String' isStatic='true' isConst='true' defaultValue='linkActiveFormat' >
<description><![CDATA[ 

		 Specifies the name of the text format element of a LinkElement when the link is in the active state. 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<private><![CDATA[]]></private>
</field>
<field name='LINK_HOVER_FORMAT_NAME' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:LINK_HOVER_FORMAT_NAME' type='String' isStatic='true' isConst='true' defaultValue='linkHoverFormat' >
<description><![CDATA[ Specifies the name of the text format element of a LinkElement when the cursor is hovering over the link. 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<private><![CDATA[]]></private>
</field>
<field name='LINK_NORMAL_FORMAT_NAME' fullname='flashx.textLayout.elements:LinkElement/tlf_internal:LINK_NORMAL_FORMAT_NAME' type='String' isStatic='true' isConst='true' defaultValue='linkNormalFormat' >
<description><![CDATA[ 

		 Specifies the name of the text format element of a LinkElement when the link is in the normal state.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<private><![CDATA[]]></private>
</field>
<field name='_linkState' fullname='flashx.textLayout.elements:LinkElement/private:_linkState' type='String' isStatic='false' isConst='false' >
</field>
<field name='_targetString' fullname='flashx.textLayout.elements:LinkElement/private:_targetString' type='String' isStatic='false' isConst='false' >
</field>
<field name='_uriString' fullname='flashx.textLayout.elements:LinkElement/private:_uriString' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='SubParagraphGroupElement' fullname='flashx.textLayout.elements:SubParagraphGroupElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\SubParagraphGroupElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:SubParagraphGroupElementBase' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

     The SubParagraphGroupElement is a grouping element for FlowLeafElements and other classes that extend SubParagraphGroupElementBase.

	 
     ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.SubParagraphGroupElement

     ]]></see>
<see><![CDATA[flashx.textLayout.elements.SubParagraphGroupElementBase

     ]]></see>
<see><![CDATA[flashx.textLayout.elements.FlowLeafElement

     
	 ]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:SubParagraphGroupElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='SubParagraphGroupElement' fullname='flashx.textLayout.elements:SubParagraphGroupElement/SubParagraphGroupElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor. 

         For information on using this class, see <a href='http://blogs.adobe.com/tlf/2011/01/tlf-2-0-changes-subparagraphgroupelements-and-typename-applied-to-textfieldhtmlimporter-and-cssformatresolver.html'>TLF 2.0 SubParagraphGroupElement and typeName</a>.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='mergeToPreviousIfPossible' fullname='flashx.textLayout.elements:SubParagraphGroupElement/tlf_internal:mergeToPreviousIfPossible' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:SubParagraphGroupElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='allowNesting' fullname='flashx.textLayout.elements:SubParagraphGroupElement/tlf_internal:allowNesting/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:SubParagraphGroupElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='precedence' fullname='flashx.textLayout.elements:SubParagraphGroupElement/tlf_internal:precedence/get' isStatic='false' isFinal='false' isOverride='true'  result_type='uint'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='TCYElement' fullname='flashx.textLayout.elements:TCYElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\TCYElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:SubParagraphGroupElementBase' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	 The TCYElement (Tatechuuyoko - ta-tae-chu-yo-ko) class is a subclass of SubParagraphGroupElementBase that causes

	 text to draw horizontally within a vertical line.  Traditionally, it is used to make small

	 blocks of non-Japanese text or numbers, such as dates, more readable.  TCY can be applied to 

	 horizontal text, but has no effect on drawing style unless and until it is turned vertically.

	 

	 TCY blocks which contain no text will be removed from the text flow during the normalization process.

	 <p>

	 In the example below, the image on the right shows TCY applied to the number 57, while the

	 image on the left has no TCY formatting.</p>

	 <p><img src="../../../images/textLayout_TCYElement.png" alt="TCYElement" border="0"/>

	 </p>

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[TextFlow

	 ]]></see>
<see><![CDATA[ParagraphElement

	 ]]></see>
<see><![CDATA[SpanElement

	 ]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:TCYElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='TCYElement' fullname='flashx.textLayout.elements:TCYElement/TCYElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor - creates a new TCYElement instance.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='acceptTextBefore' fullname='flashx.textLayout.elements:TCYElement/tlf_internal:acceptTextBefore' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='calculateAdornmentBounds' fullname='flashx.textLayout.elements:TCYElement/tlf_internal:calculateAdornmentBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='spg;tLine;blockProgression;spgRect' param_types='flashx.textLayout.elements:SubParagraphGroupElementBase;flash.text.engine:TextLine;String;flash.geom:Rectangle' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createContentElement' fullname='flashx.textLayout.elements:TCYElement/tlf_internal:createContentElement' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='formatChanged' fullname='flashx.textLayout.elements:TCYElement/tlf_internal:formatChanged' isStatic='false' isFinal='false' isOverride='true'  param_names='notifyModelChanged' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mergeToPreviousIfPossible' fullname='flashx.textLayout.elements:TCYElement/tlf_internal:mergeToPreviousIfPossible' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setParentAndRelativeStart' fullname='flashx.textLayout.elements:TCYElement/tlf_internal:setParentAndRelativeStart' isStatic='false' isFinal='false' isOverride='true'  param_names='newParent;newStart' param_types='flashx.textLayout.elements:FlowGroupElement;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateTCYRotation' fullname='flashx.textLayout.elements:TCYElement/private:updateTCYRotation' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:TCYElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:TCYElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='precedence' fullname='flashx.textLayout.elements:TCYElement/tlf_internal:precedence/get' isStatic='false' isFinal='false' isOverride='true'  result_type='uint'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='ParagraphElement' fullname='flashx.textLayout.elements:ParagraphElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\ParagraphElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:ParagraphFormattedElement' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	 The ParagraphElement class represents a paragraph in the text flow hierarchy. Its parent

	 is a ParagraphFormattedElement, and its children can include spans (SpanElement), images 

	 (inLineGraphicElement), links (LinkElement) and TCY (Tatechuuyoko - ta-tae-chu-yo-ko) elements (TCYElement). The 

	 paragraph text is stored in one or more SpanElement objects, which define ranges of text that share the same attributes. 

	 A TCYElement object defines a small run of Japanese text that runs perpendicular to the line, as in a horizontal run of text in a 

	 vertical line. A TCYElement can also contain multiple spans.

	 
	 ]]></description>
<includeExample><![CDATA[examples\ParagraphElementExample.as -noswf

	 ]]></includeExample>
<includeExample><![CDATA[examples\ParagraphElementExample2.as -noswf

	 
	 ]]></includeExample>
<langversion><![CDATA[3.0

	 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[InlineGraphicElement

	 ]]></see>
<see><![CDATA[LinkElement

	 ]]></see>
<see><![CDATA[SpanElement

	 ]]></see>
<see><![CDATA[TCYElement

	 ]]></see>
<see><![CDATA[TextFlow

	 ]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:ParagraphElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='ParagraphElement' fullname='flashx.textLayout.elements:ParagraphElement/ParagraphElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor - represents a paragraph in a text flow. 

		
		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='canOwnFlowElement' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:canOwnFlowElement' isStatic='false' isFinal='false' isOverride='true'  param_names='elem' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createContentAsGroup' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:createContentAsGroup' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.text.engine:GroupElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createContentElement' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:createContentElement' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createTextBlock' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:createTextBlock' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='decInteractiveChildrenCount' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:decInteractiveChildrenCount' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='ensureTerminatorAfterReplace' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:ensureTerminatorAfterReplace' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='findNextAtomBoundary' fullname='flashx.textLayout.elements:ParagraphElement/findNextAtomBoundary' isStatic='false' isFinal='false' isOverride='false'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[ 

		 Scans ahead from the supplied position to find the location

		 in the text of the next atom and returns the index. The term atom refers to 

		 both graphic elements and characters (including groups of combining characters), the 

		 indivisible entities that make up a text line.

		 

		 ]]></description>
<includeExample><![CDATA[examples\ParagraphElement_findNextAtomBoundary.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<param><![CDATA[relativePosition  position in the text to start from, counting from 0

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[index in the text of the following atom

		 
		 ]]></return>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
</method>
<method name='findNextWordBoundary' fullname='flashx.textLayout.elements:ParagraphElement/findNextWordBoundary' isStatic='false' isFinal='false' isOverride='false'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[ 

		 Returns the index of the next word boundary in the text.

		 

		 <p>Scans ahead from the supplied position to find the next position

		 in the text that starts or ends a word. </p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\ParagraphElement_findNextWordBoundary.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[relativePosition  position in the text to start from, counting from 0

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[index in the text of the next word boundary

		 

		 ]]></return>
</method>
<method name='findPreviousAtomBoundary' fullname='flashx.textLayout.elements:ParagraphElement/findPreviousAtomBoundary' isStatic='false' isFinal='false' isOverride='false'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[ 

		 Scans backward from the supplied position to find the location

		 in the text of the previous atom and returns the index. The term atom refers to 

		 both graphic elements and characters (including groups of combining characters), the 

		 indivisible entities that make up a text line.

		 

		 ]]></description>
<includeExample><![CDATA[examples\ParagraphElement_findPreviousAtomBoundary.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<param><![CDATA[relativePosition  position in the text to start from, counting from 0

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[index in the text of the previous cluster

		 
		 ]]></return>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
</method>
<method name='findPreviousWordBoundary' fullname='flashx.textLayout.elements:ParagraphElement/findPreviousWordBoundary' isStatic='false' isFinal='false' isOverride='false'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[ 

		 Returns the index of the previous word boundary in the text.

		 

		 <p>Scans backward from the supplied position to find the previous position

		 in the text that starts or ends a word. </p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\ParagraphElement_findPreviousWordBoundary.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[relativePosition  position in the text to start from, counting from 0

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[index in the text of the previous word boundary

		 
		 ]]></return>
</method>
<method name='getCharAtPosition' fullname='flashx.textLayout.elements:ParagraphElement/getCharAtPosition' isStatic='false' isFinal='false' isOverride='true'  param_names='relativePosition' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectiveDominantBaseline' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:getEffectiveDominantBaseline' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectiveJustificationRule' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:getEffectiveJustificationRule' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectiveJustificationStyle' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:getEffectiveJustificationStyle' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectiveLeadingModel' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:getEffectiveLeadingModel' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getLeadingBasis' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:getLeadingBasis' isStatic='true' isFinal='false' isOverride='false'  param_names='leadingModel' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getNextParagraph' fullname='flashx.textLayout.elements:ParagraphElement/getNextParagraph' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:ParagraphElement'>
<description><![CDATA[ Returns the paragraph that follows this one, or null if there are no more paragraphs. 

		 
		 ]]></description>
<includeExample><![CDATA[examples\ParagraphElement_getNextParagraph.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the next paragraph or null if there are no more paragraphs.

		 
		 ]]></return>
<see><![CDATA[#getPreviousParagraph()

	 	 ]]></see>
</method>
<method name='getPreviousParagraph' fullname='flashx.textLayout.elements:ParagraphElement/getPreviousParagraph' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:ParagraphElement'>
<description><![CDATA[ Returns the paragraph that precedes this one, or null, if this paragraph is the first one 

		 in the TextFlow. 

		 
		 ]]></description>
<includeExample><![CDATA[examples\ParagraphElement_getPreviousParagraph.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[#getNextParagraph()

	 	 ]]></see>
</method>
<method name='getTextBlock' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:getTextBlock' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text.engine:TextBlock'>
<description><![CDATA[ TextBlock where the text of the paragraph is kept. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getText' fullname='flashx.textLayout.elements:ParagraphElement/getText' isStatic='false' isFinal='false' isOverride='true'  param_names='relativeStart;relativeEnd;paragraphSeparator' param_types='int;int;String' param_defaults='0;-1;
' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hasBlockElement' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:hasBlockElement' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hasInteractiveChildren' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:hasInteractiveChildren' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='incInteractiveChildrenCount' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:incInteractiveChildrenCount' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='initializeDefaultTabStops' fullname='flashx.textLayout.elements:ParagraphElement/private:initializeDefaultTabStops' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='insertBlockElement' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:insertBlockElement' isStatic='false' isFinal='false' isOverride='true'  param_names='child;block' param_types='flashx.textLayout.elements:FlowElement;flash.text.engine:ContentElement' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='normalizeRange' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:normalizeRange' isStatic='false' isFinal='false' isOverride='true'  param_names='normalizeStart;normalizeEnd' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='peekTextBlock' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:peekTextBlock' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.text.engine:TextBlock'>
<description><![CDATA[ TextBlock where the text of the paragraph is kept, or null if we currently don't have one. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='releaseLineCreationData' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:releaseLineCreationData' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='releaseTextBlock' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:releaseTextBlock' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeBlockElement' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:removeBlockElement' isStatic='false' isFinal='false' isOverride='true'  param_names='child;block' param_types='flashx.textLayout.elements:FlowElement;flash.text.engine:ContentElement' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='replaceChildren' fullname='flashx.textLayout.elements:ParagraphElement/replaceChildren' isStatic='false' isFinal='false' isOverride='true'  param_names='beginChildIndex;endChildIndex;rest' param_types='int;int;restParam' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateTerminatorSpan' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:updateTerminatorSpan' isStatic='false' isFinal='false' isOverride='false'  param_names='splitSpan;followingSpan' param_types='flashx.textLayout.elements:SpanElement;flashx.textLayout.elements:SpanElement' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateTextBlock' fullname='flashx.textLayout.elements:ParagraphElement/private:updateTextBlock' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='useUpLeadingDirection' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:useUpLeadingDirection' isStatic='true' isFinal='false' isOverride='false'  param_names='leadingModel' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_interactiveChildrenCount' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:_interactiveChildrenCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:ParagraphElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computedFormat' fullname='flashx.textLayout.elements:ParagraphElement/computedFormat/get' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:ParagraphElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mxmlChildren' fullname='flashx.textLayout.elements:ParagraphElement/mxmlChildren/set' isStatic='false' isFinal='false' isOverride='true'  param_names='array' param_types='Array' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_defaultTabStops' fullname='flashx.textLayout.elements:ParagraphElement/private:_defaultTabStops' type='Vector$flash.text.engine:TabStop' isStatic='true' isConst='false' >
</field>
<field name='_interactiveChildrenCount' fullname='flashx.textLayout.elements:ParagraphElement/private:_interactiveChildrenCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_terminatorSpan' fullname='flashx.textLayout.elements:ParagraphElement/private:_terminatorSpan' type='flashx.textLayout.elements:SpanElement' isStatic='false' isConst='false' >
</field>
<field name='_textBlock' fullname='flashx.textLayout.elements:ParagraphElement/private:_textBlock' type='flash.text.engine:TextBlock' isStatic='false' isConst='false' >
</field>
<field name='defaultTabCount' fullname='flashx.textLayout.elements:ParagraphElement/private:defaultTabCount' type='int' isStatic='true' isConst='true' defaultValue='20' >
</field>
<field name='defaultTabWidth' fullname='flashx.textLayout.elements:ParagraphElement/private:defaultTabWidth' type='int' isStatic='true' isConst='true' defaultValue='48' >
</field>
<classRec name='ContainerFormattedElement' fullname='flashx.textLayout.elements:ContainerFormattedElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\ContainerFormattedElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:ParagraphFormattedElement' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	ContainerFormattedElement is the root class for all container-level block elements, such as DivElement

	and TextFlow objects. Container-level block elements are grouping elements for other FlowElement objects.

	
	]]></description>
<langversion><![CDATA[3.0

	
	]]></langversion>
<playerversion><![CDATA[Flash 10

	]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	]]></playerversion>
<see><![CDATA[DivElement

	]]></see>
<see><![CDATA[TextFlow

	]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:ContainerFormattedElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='formatChanged' fullname='flashx.textLayout.elements:ContainerFormattedElement/tlf_internal:formatChanged' isStatic='false' isFinal='false' isOverride='true'  param_names='notifyModelChanged' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='normalizeRange' fullname='flashx.textLayout.elements:ContainerFormattedElement/tlf_internal:normalizeRange' isStatic='false' isFinal='false' isOverride='true'  param_names='normalizeStart;normalizeEnd' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='preCompose' fullname='flashx.textLayout.elements:ContainerFormattedElement/tlf_internal:preCompose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='flowComposer' fullname='flashx.textLayout.elements:ContainerFormattedElement/flowComposer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:IFlowComposer'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='TabElement' fullname='flashx.textLayout.elements:TabElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\TabElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:SpecialCharacterElement' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	 The TabElement class represents a &lt;tab/&gt; in the text flow. You assign tab stops as an array of TabStopFormat objects to the 

	 <code>ParagraphElement.tabStops</code> property.

	 

	 <p><strong>Note</strong>:This class exists primarily to support &lt;tab/&gt; in MXML markup. You can add tab characters (\t) directly 

	 into the text like this:</p>

	 
	 <listing version="3.0" >

	 spanElement1.text += '\t';

	 </listing>

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TabStopFormat

	 ]]></see>
<see><![CDATA[FlowElement#tabStops

	 ]]></see>
<see><![CDATA[SpanElement

	 ]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:TabElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='TabElement' fullname='flashx.textLayout.elements:TabElement/TabElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor - creates a new TabElement instance. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:TabElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:TabElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='BreakElement' fullname='flashx.textLayout.elements:BreakElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\BreakElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:SpecialCharacterElement' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	The BreakElement class defines a line break, which provides for creating a line break in the text without 

	creating a new paragraph. It inserts a U+2028 character in the text of the paragraph.

	
	<p><strong>Note</strong>: This class exists primarily to support break <br/> tags in MXML markup. To create line breaks, 

	you can add newline characters (\n) directly into the text like this:</p>

	
	<listing version="3.0" >

	spanElement1.text += '\n';

	</listing>

	
	In markup, either FXG, TEXT_LAYOUT_FORMAT or MXML, you can simply insert a <br/> where you want the break.

	
	]]></description>
<langversion><![CDATA[3.0

	
	]]></langversion>
<playerversion><![CDATA[Flash 10

	]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	]]></playerversion>
<see><![CDATA[ParagraphElement

	]]></see>
<see><![CDATA[SpanElement

	]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:BreakElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='BreakElement' fullname='flashx.textLayout.elements:BreakElement/BreakElement' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor. 

		
		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10 

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:BreakElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:BreakElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='DivElement' fullname='flashx.textLayout.elements:DivElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\DivElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:ContainerFormattedElement' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	 The DivElement class defines an element for grouping paragraphs (ParagraphElement objects). If you want a group of paragraphs

	 to share the same formatting attributes, you can group them in a DivElement object and apply the attributes to it. The paragraphs

	 will inherit the attributes from the DivElement object.

	 

	 ]]></description>
<includeExample><![CDATA[examples\DivElementExample.as -noswf

	 
	 ]]></includeExample>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[ParagraphElement

	 ]]></see>
<see><![CDATA[TextFlow

	 ]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:DivElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='abstract' fullname='flashx.textLayout.elements:DivElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:DivElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='TextFlow' fullname='flashx.textLayout.elements:TextFlow' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\TextFlow.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:ContainerFormattedElement' interfaces='flash.events:IEventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The TextFlow class is responsible for managing all the text content of a story. In TextLayout, text is stored in a 

	 hierarchical tree of elements. TextFlow is the root object of the element tree. All elements on the tree

	 derive from the base class, FlowElement. 

	 
	 <p>A TextFlow object can have ParagraphElement and DivElement objects as children. A div (DivElement object)

	 represents a group of paragraphs (ParagraphElement objects). A paragraph can have SpanElement, InlineGraphicElement, 

	 LinkElement, and TCYElement objects as children.</p>

	 

	 <p>A span (SpanElement) is a range of text in a paragraph that has the same attributes. An image 

	 (InlineGraphicElement) represents an arbitrary graphic that appears as a single character in a line of text. A 

	 LinkElement represents a hyperlink, or HTML <code>a</code> tag, and it can contain multiple spans. A TCYElement object

	 is used in Japanese text when there is a small run of text that appears perpendicular to the line, as in a horizontal

	 run within a vertical line. A TCYElement also can contain multiple spans.</p>

	 

	 <p>TextFlow also derives from the ContainerFormattedElement class, which is the root class for all container-level block 

	 elements.</p>

 	 <p>The following illustration shows the relationship of other elements, such as spans and paragraphs, to the TextFlow 

 	 object.</p>

 	 <p><img src="../../../images/textLayout_textFlowHierarchy.gif" alt="example TextFlow hierarchy"></img></p>

 	 
 	 <p>Each TextFlow object has a corresponding Configuration object that allows you to specify initial character and 

 	 paragraph formats and the initial container format. It also allows you to specify attributes for selection, links, 

 	 focus, and scrolling. When you supply a Configuration object as parameter to the <code>TextFlow()</code>

 	 constructor, it creates a read-only snapshot that you can access through the <code>TextFlow.configuration</code>

 	 property. After creation, you can't change the TextFlow's configuration. If you do not specify a Configuration, you 

 	 can access the default configuration through the <code>TextFlow.defaultConfiguration</code> property.</p>

	 
	 ]]></description>
<includeExample><![CDATA[examples\TextFlowExample.as -noswf

	 
	 ]]></includeExample>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[#configuration

	 ]]></see>
<see><![CDATA[IConfiguration

	 ]]></see>
<see><![CDATA[DivElement

	 ]]></see>
<see><![CDATA[FlowElement

	 ]]></see>
<see><![CDATA[FlowGroupElement

	 ]]></see>
<see><![CDATA[FlowLeafElement

	 ]]></see>
<see><![CDATA[flashx.textLayout.compose.IFlowComposer IFlowComposer

	 ]]></see>
<see><![CDATA[ParagraphElement

	 ]]></see>
<see><![CDATA[SpanElement

	 ]]></see>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='updateComplete' type='flashx.textLayout.events.UpdateCompleteEvent' >
<description><![CDATA[ Dispatched by a TextFlow object each time a container has had new DisplayObjects added or updated as a result of composition.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='damage' type='flashx.textLayout.events.DamageEvent' >
<description><![CDATA[ Dispatched by a TextFlow object each time it is damaged 

	 

	 You can use this event to find out that the TextFlow has changed, but do not access the TextFlow itself when this event 

	 is sent out. This event is sent when TextFlow changes are partially complete, so it can be in an inconsistent state: 

	 some changes have been mad already, and other changes are still pending. Get the information you need from the event, and make 

	 required changes after control returns to your application.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='scroll' type='flashx.textLayout.events.TextLayoutEvent' >
<description><![CDATA[ Dispatched by a TextFlow object after text is scrolled within a controller container.  

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='inlineGraphicStatusChanged' type='flashx.textLayout.events.StatusChangeEvent' >
<description><![CDATA[ Dispatched when a InlineGraphicElement is resized due to having width or height as auto or percent 

	 and the graphic has finished loading. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='click' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when any link is clicked. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='rollOut' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when the mouse goes out of any link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='rollOver' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when the mouse first enters any link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='mouseMove' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when the mouse passes over any link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='mouseUp' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when the mouse is released over any link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='mouseDown' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when the mouse is pressed down over any link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='compositionComplete' type='flashx.textLayout.events.CompositionCompleteEvent' >
<description><![CDATA[ Dispatched after every recompose. 

	
	]]></description>
<langversion><![CDATA[3.0

	]]></langversion>
<playerversion><![CDATA[Flash 10

	]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='selectionChange' type='flashx.textLayout.events.SelectionEvent' >
<description><![CDATA[ Dispatched whenever the selection is changed.  Primarily used to update selection-dependent user interface. 

	 It can also be used to alter the selection, but cannot be used to alter the TextFlow itself.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='flowOperationComplete' type='flashx.textLayout.events.FlowOperationEvent' >
<description><![CDATA[

	 

	 ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_COMPLETE

	 
	 ]]></eventType>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='flowOperationEnd' type='flashx.textLayout.events.FlowOperationEvent' >
<description><![CDATA[

	 

	 ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_END

	 
	 ]]></eventType>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.elements:TextFlow' name='flowOperationBegin' type='flashx.textLayout.events.FlowOperationEvent' >
<description><![CDATA[

	 
	  ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_BEGIN

	 
	 ]]></eventType>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:TextFlow' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='TextFlow' fullname='flashx.textLayout.elements:TextFlow/TextFlow' isStatic='false' isFinal='false' isOverride='false'  param_names='config' param_types='flashx.textLayout.elements:IConfiguration' param_defaults='null' result_type='*'>
<description><![CDATA[ 

		 Constructor - creates a new TextFlow instance.

		 
		 <p>If you provide a <code>config</code> parameter, the contents of the Configuration object are copied and

		 you cannot make changes. You can access configuration settings, however, through the 

		 <code>configuration</code> property. If the <code>config</code> parameter is null, you can access the default

		 configuration settings through the <code>defaultConfiguration</code> property.</p> 

		 
		 <p>The Configuration object provides a mechanism for setting configurable default attributes on a TextFlow.  

		 While you can't make changes to the Configuration object, you can override default attributes, if necessary, 

		 by setting the attributes of TextFlow and its children.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 

	 	 ]]></langversion>
<param><![CDATA[config Specifies the configuration to use for this TextFlow object. If it's null, use 

		 <code>TextFlow.defaultConfiguration</code> to access configuration values. 

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[Configuration

	 	 ]]></see>
<see><![CDATA[#configuration

	 	 ]]></see>
<see><![CDATA[#defaultConfiguration

		 

		 ]]></see>
</method>
<method name='addEventListener' fullname='flashx.textLayout.elements:TextFlow/addEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture;priority;useWeakReference' param_types='String;Function;Boolean;int;Boolean' param_defaults='undefined;undefined;false;0;false' result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[flash.events.IEventDispatcher#addEventListener()

		 
		 ]]></copy>
<langversion><![CDATA[3.0

 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='appendOneElementForUpdate' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:appendOneElementForUpdate' isStatic='false' isFinal='false' isOverride='false'  param_names='elem' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='applyUpdateElements' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:applyUpdateElements' isStatic='false' isFinal='false' isOverride='false'  param_names='okToUnloadGraphics' param_types='Boolean' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeFlowComposer' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:changeFlowComposer' isStatic='false' isFinal='false' isOverride='false'  param_names='newComposer;okToUnloadGraphics' param_types='flashx.textLayout.compose:IFlowComposer;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearBackgroundManager' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:clearBackgroundManager' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='damage' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:damage' isStatic='false' isFinal='false' isOverride='false'  param_names='damageStart;damageLen;damageType;needNormalize' param_types='int;int;String;Boolean' param_defaults='undefined;undefined;undefined;true' result_type='void'>
<description><![CDATA[

		 Mark the a range of text as invalid - needs to be recomposed.

		 <p>The text classes are self damaging.  This is only used when modifying the container chain.</p>

		 <p>Warning: Plan to evaulate a way to hide this method totally.</p>

		 ]]></description>
<param><![CDATA[start		text index of first character to marked invalid

		 ]]></param>
<param><![CDATA[damageLen	number of characters to mark invalid

		 ]]></param>
<param><![CDATA[needNormalize optional parameter (true is default) - normalize should include this range.

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='decGraphicObjectCount' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:decGraphicObjectCount' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='decInteractiveObjectCount' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:decInteractiveObjectCount' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='dispatchEvent' fullname='flashx.textLayout.elements:TextFlow/dispatchEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[flash.events.IEventDispatcher#dispatchEvent()

		 
		 ]]></copy>
<langversion><![CDATA[3.0

 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doComputeTextLayoutFormat' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:doComputeTextLayoutFormat' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='findAbsoluteFlowGroupElement' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:findAbsoluteFlowGroupElement' isStatic='false' isFinal='false' isOverride='false'  param_names='pos' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[

		 Find the FlowGroupElement at the absolute position,

		 could be synonymous with the paragraph OR a subBlockElement

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='findAbsoluteParagraph' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:findAbsoluteParagraph' isStatic='false' isFinal='false' isOverride='false'  param_names='pos' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.elements:ParagraphElement'>
<description><![CDATA[

		 Find the paragraph at the specified absolute position

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getBackgroundManager' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:getBackgroundManager' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:BackgroundManager'>
<description><![CDATA[ ]]></description>
<private.><![CDATA[Returns the existing backgroundManager - creating it if it doesn't exist.  Use when adding backgrounds to draw.  ]]></private.>
</method>
<method name='getElementByID' fullname='flashx.textLayout.elements:TextFlow/getElementByID' isStatic='false' isFinal='false' isOverride='false'  param_names='idName' param_types='String' param_defaults='undefined' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ Returns an element whose <code>id</code> property matches the <code>idName</code> parameter. Provides

		 the ability to apply a style based on the <code>id</code>. 

		 
		 <p>For example, the following line sets the style "color" to 0xFF0000 (red), for the

		 element having the <code>id</code> span1.</p>

		 
		 <listing version="3.0" >

		 textFlow.getElementByID("span1").setStyle("color", 0xFF0000);

		 </listing>

		 
		 <p><strong>Note:</strong> In the following code, <code>p.addChild(s)</code> <em>removes</em> <code>s</code> 

		 from its original parent and adds it to <code>p</code>, the new parent.</p>

		 
		 <listing version="3.0" >

		 var s:SpanElement = new SpanElement();

		 var p:ParagraphElement = new ParagraphElement();

		 ...

		 s = textFlow.getElementByID("span3") as SpanElement;

		 p.addChild(s);

		 textFlow.addChild(p);

		 </listing>

		 
		 ]]></description>
<includeExample><![CDATA[examples\TextFlow_getElementByIDExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[idName The <code>id</code> value of the element to find.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[The element whose id matches <code>idName</code>.

		 
		 ]]></return>
<see><![CDATA[FlowElement#id 

		 ]]></see>
</method>
<method name='getElementsByStyleName' fullname='flashx.textLayout.elements:TextFlow/getElementsByStyleName' isStatic='false' isFinal='false' isOverride='false'  param_names='styleNameValue' param_types='String' param_defaults='undefined' result_type='Array'>
<description><![CDATA[ Returns all elements that have <code>styleName</code> set to <code>styleNameValue</code>.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[styleNameValue The name of the style for which to find elements that have it set.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[An array of the elements whose <code>styleName</code> value matches <code>styleNameValue</code>. For example,

		 all elements that have the style name "color".

		 
		 ]]></return>
<see><![CDATA[FlowElement#styleName 

		 ]]></see>
</method>
<method name='getElementsByTypeName' fullname='flashx.textLayout.elements:TextFlow/getElementsByTypeName' isStatic='false' isFinal='false' isOverride='false'  param_names='typeNameValue' param_types='String' param_defaults='undefined' result_type='Array'>
<description><![CDATA[ Returns all elements that have <code>typeName</code> set to <code>typeNameValue</code>.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[styleNameValue The name of the style for which to find elements that have it set.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[An array of the elements whose <code>typeName</code> value matches <code>typeNameValue</code>. For example,

		 all elements that have the type name "foo".

		 
		 ]]></return>
<see><![CDATA[FlowElement#styleName 

		 ]]></see>
</method>
<method name='getTextLayoutFormatStyle' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:getTextLayoutFormatStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='elem' param_types='Object' param_defaults='undefined' result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[ Use the formatResolver to get the character style of an Object.

		 ]]></description>
<param><![CDATA[elem is either a FlowElement or a ContainerController(doesn't happen for characterformat)

		 ]]></param>
<return><![CDATA[any styled CharacterFormat for that element

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='hasEventListener' fullname='flashx.textLayout.elements:TextFlow/hasEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[flash.events.IEventDispatcher#hasEventListener()

		 
		 ]]></copy>
<langversion><![CDATA[3.0

 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='incGraphicObjectCount' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:incGraphicObjectCount' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='incInteractiveObjectCount' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:incInteractiveObjectCount' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initializeForConstructor' fullname='flashx.textLayout.elements:TextFlow/private:initializeForConstructor' isStatic='false' isFinal='false' isOverride='false'  param_names='config' param_types='flashx.textLayout.elements:IConfiguration' param_defaults='undefined' result_type='void'>
</method>
<method name='invalidateAllFormats' fullname='flashx.textLayout.elements:TextFlow/invalidateAllFormats' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Invalidates all formatting information for the TextFlow, forcing it to be recomputed.

		 Call this method when styles have changed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[IFormatResolver#invalidateAll()

		 ]]></see>
</method>
<method name='mustUseComposer' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:mustUseComposer' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='normalize' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:normalize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Examine the damaged textLength of the TextFlow and put it in a normal form.  This includes adding spans to empty paragraph and

		 merging sibling spans that have the same attributes.

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='preCompose' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:preCompose' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='prepareGraphicsForLoad' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:prepareGraphicsForLoad' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='processAutoSizeImageLoaded' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:processAutoSizeImageLoaded' isStatic='false' isFinal='false' isOverride='false'  param_names='elem' param_types='flashx.textLayout.elements:InlineGraphicElement' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='processModelChanged' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:processModelChanged' isStatic='false' isFinal='false' isOverride='false'  param_names='changeType;elem;changeStart;changeLen;needNormalize;bumpGeneration' param_types='String;Object;int;int;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeEventListener' fullname='flashx.textLayout.elements:TextFlow/removeEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture' param_types='String;Function;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[flash.events.IEventDispatcher#removeEventListener().

		 

		 ]]></copy>
<langversion><![CDATA[3.0

 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='setGeneration' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:setGeneration' isStatic='false' isFinal='false' isOverride='false'  param_names='num' param_types='uint' param_defaults='undefined' result_type='void'>
<description><![CDATA[ used to reset the number backwards after an undo or redo. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='shallowCopy' fullname='flashx.textLayout.elements:TextFlow/shallowCopy' isStatic='false' isFinal='false' isOverride='true'  param_names='startPos;endPos' param_types='int;int' param_defaults='0;-1' result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='unloadGraphics' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:unloadGraphics' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateLengths' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:updateLengths' isStatic='false' isFinal='false' isOverride='true'  param_names='startIdx;len;updateLines' param_types='int;int;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='willTrigger' fullname='flashx.textLayout.elements:TextFlow/willTrigger' isStatic='false' isFinal='false' isOverride='false'  param_names='type' param_types='String' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[flash.events.IEventDispatcher#willTrigger()

		 

		 ]]></copy>
<langversion><![CDATA[3.0

 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:TextFlow/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='backgroundManager' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:backgroundManager/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:BackgroundManager'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='configuration' fullname='flashx.textLayout.elements:TextFlow/configuration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:IConfiguration'>
<description><![CDATA[ 

		The Configuration object for this TextFlow object. The Configuration object specifies the initial character 

		and paragraph formats, the initial container format, and attributes for selection highlighting, 

		links, focus, and scrolling.

		
		<p>If you do not specify a Configuration object, Text Layout Framework uses a default Configuration object, which

		is referenced by the <code>defaultConfiguration</code> property.</p>

		
		]]></description>
<langversion><![CDATA[3.0

	 	
	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[Configuration

	 	]]></see>
<see><![CDATA[#defaultConfiguration

	 	]]></see>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='flowComposer' fullname='flashx.textLayout.elements:TextFlow/flowComposer/get' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.compose:IFlowComposer'>
<description><![CDATA[ Manages the containers for this element.

		 

		 <p>The TextLines that are created from the element appear as children of the container.

		 The flowComposer manages the containers, and as the text is edited it adds lines to and removes lines

		 from the containers. The flowComposer also keeps track of some critical attributes, such as the

		 width and height to compose to, whether scrolling is on, and so on.</p>

		 

		 <p>The container and <code>flowComposer</code> are closely related. If you reset <code>flowComposer</code>, 

		 the container is reset to the new flowComposer's container. Likewise if the container is reset, 

		 <code>flowComposer</code> is reset to the container's new flowComposer.</p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.IFlowComposer FlowComposer

		 ]]></see>
</method>
<method name='formatResolver' fullname='flashx.textLayout.elements:TextFlow/formatResolver/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:IFormatResolver'>
<description><![CDATA[ A callback function for resolving element styles. You can use this to provide styling using CSS or 

		 named styles, for example. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[IFormatResolver

		 ]]></see>
</method>
<method name='generation' fullname='flashx.textLayout.elements:TextFlow/generation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[ 

		The generation number for this TextFlow object. The undo and redo operations use the generation number to validate that 

		it's legal to undo or redo an operation. The generation numbers must match. 

		

		<p>Each model change increments <code>generation</code> so if the generation number changes, you know the 

		TextFlow model has changed.</p>

		

		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='graphicObjectCount' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:graphicObjectCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hostFormat' fullname='flashx.textLayout.elements:TextFlow/hostFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ The TextLayoutFormat object for this TextFlow object. This enables several optimizations for reusing 

		host formats. For example;

		
		<listing>

		textFlowA.hostFormat = textFlowB.hostFormat

		</listing>

		

		You must set format values before assigning the TextLayoutFormat object to <code>hostFormat</code>.

		For example, the following lines do <em>not</em> set the font size to 24 because

		the font size is set <em>after</em> the TextLayoutFormat object has been assigned to <code>hostFormat</code>.

		
		<listing>

		format = new TextLayoutFormat()

		textFlow.hostFormat = format

		format.fontSize = 24;

		</listing>

		
		]]></description>
<langversion><![CDATA[3.0

	 	
	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat ITextLayoutFormat

	 	]]></see>
</method>
<method name='interactionManager' fullname='flashx.textLayout.elements:TextFlow/interactionManager/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:ISelectionManager'>
<description><![CDATA[

		 The InteractionManager associated with this TextFlow object.

		 <p>Controls all selection and editing on the text. If the TextFlow is not selectable, 

		 the interactionManager is null. To make the TextFlow editable, assign a interactionManager

		 that is both an ISelectionManager and an IEditManager. To make a TextFlow that is read-only

		 and allows selection, assign a interactionManager that is an ISelectionManager only. </p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.ISelectionManager ISelectionManager

		 ]]></see>
<see><![CDATA[flashx.textLayout.edit.IEditManager IEditManager

		 ]]></see>
</method>
<method name='interactiveObjectCount' fullname='flashx.textLayout.elements:TextFlow/tlf_internal:interactiveObjectCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='flowComposer' fullname='flashx.textLayout.elements:TextFlow/flowComposer/set' isStatic='false' isFinal='false' isOverride='false'  param_names='composer' param_types='flashx.textLayout.compose:IFlowComposer' param_defaults='undefined' result_type='void'>
</method>
<method name='formatResolver' fullname='flashx.textLayout.elements:TextFlow/formatResolver/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.elements:IFormatResolver' param_defaults='undefined' result_type='void'>
</method>
<method name='hostFormat' fullname='flashx.textLayout.elements:TextFlow/hostFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='interactionManager' fullname='flashx.textLayout.elements:TextFlow/interactionManager/set' isStatic='false' isFinal='false' isOverride='false'  param_names='newInteractionManager' param_types='flashx.textLayout.edit:ISelectionManager' param_defaults='undefined' result_type='void'>
</method>
<method name='mxmlChildren' fullname='flashx.textLayout.elements:TextFlow/mxmlChildren/set' isStatic='false' isFinal='false' isOverride='true'  param_names='array' param_types='Array' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_backgroundManager' fullname='flashx.textLayout.elements:TextFlow/private:_backgroundManager' type='flashx.textLayout.elements:BackgroundManager' isStatic='false' isConst='false' >
<description><![CDATA[ Manages computing and drawing backgroundColor attribute ]]></description>
</field>
<field name='_configuration' fullname='flashx.textLayout.elements:TextFlow/private:_configuration' type='flashx.textLayout.elements:IConfiguration' isStatic='false' isConst='false' >
<description><![CDATA[ References the Configuration object for this TextFlow object. ]]></description>
</field>
<field name='_elemsToUpdate' fullname='flashx.textLayout.elements:TextFlow/private:_elemsToUpdate' type='flash.utils:Dictionary' isStatic='false' isConst='false' >
</field>
<field name='_eventDispatcher' fullname='flashx.textLayout.elements:TextFlow/private:_eventDispatcher' type='flash.events:EventDispatcher' isStatic='false' isConst='false' >
</field>
<field name='_flowComposer' fullname='flashx.textLayout.elements:TextFlow/private:_flowComposer' type='flashx.textLayout.compose:IFlowComposer' isStatic='false' isConst='false' >
</field>
<field name='_formatResolver' fullname='flashx.textLayout.elements:TextFlow/private:_formatResolver' type='flashx.textLayout.elements:IFormatResolver' isStatic='false' isConst='false' >
</field>
<field name='_generation' fullname='flashx.textLayout.elements:TextFlow/private:_generation' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_graphicObjectCount' fullname='flashx.textLayout.elements:TextFlow/private:_graphicObjectCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_hostFormatHelper' fullname='flashx.textLayout.elements:TextFlow/private:_hostFormatHelper' type='TextFlow.as$27:HostFormatHelper' isStatic='false' isConst='false' >
</field>
<field name='_interactionManager' fullname='flashx.textLayout.elements:TextFlow/private:_interactionManager' type='flashx.textLayout.edit:ISelectionManager' isStatic='false' isConst='false' >
<description><![CDATA[ References the Selection manager attached to this TextFlow object. ]]></description>
</field>
<field name='_interactiveObjectCount' fullname='flashx.textLayout.elements:TextFlow/private:_interactiveObjectCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_nextGeneration' fullname='flashx.textLayout.elements:TextFlow/private:_nextGeneration' type='uint' isStatic='true' isConst='false' defaultValue='1' >
</field>
<field name='defaultConfiguration' fullname='flashx.textLayout.elements:TextFlow/defaultConfiguration' type='flashx.textLayout.elements:Configuration' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ Default configuration for all new TextFlow objects if the configuration is not specified. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[Configuration

		 ]]></see>
</field>
<field name='normalizeLen' fullname='flashx.textLayout.elements:TextFlow/private:normalizeLen' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='normalizeStart' fullname='flashx.textLayout.elements:TextFlow/private:normalizeStart' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<classRec name='ListElement' fullname='flashx.textLayout.elements:ListElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\ListElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:ContainerFormattedElement' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The List class is used for grouping together items into a numbered or unnumbered list. A ListElement's children may be of type ListItemElement,

	 ListElement, ParagraphElement, or DivElement. 

	 

	 <p>Each ListElement creates a scope with an implicit counter 'ordered'.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat#listStyleType

	 ]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat#listStylePosition

	 ]]></see>
<see><![CDATA[flashx.textLayout.formats.ListMarkerFormat

	 

	 ]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:ListElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='arabicIndicString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:arabicIndicString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='bengaliString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:bengaliString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='canOwnFlowElement' fullname='flashx.textLayout.elements:ListElement/tlf_internal:canOwnFlowElement' isStatic='false' isFinal='false' isOverride='true'  param_names='elem' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='cjkEarthlyBranchString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:cjkEarthlyBranchString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='cjkHeavenlyStemString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:cjkHeavenlyStemString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computeListItemTextSpecified' fullname='flashx.textLayout.elements:ListElement/tlf_internal:computeListItemTextSpecified' isStatic='false' isFinal='false' isOverride='false'  param_names='child;listMarkerFormat;listStyleType;suffixOverride' param_types='flashx.textLayout.elements:ListItemElement;flashx.textLayout.formats:IListMarkerFormat;String;String' param_defaults='undefined;undefined;undefined;undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computeListItemText' fullname='flashx.textLayout.elements:ListElement/tlf_internal:computeListItemText' isStatic='false' isFinal='false' isOverride='false'  param_names='child;listMarkerFormat' param_types='flashx.textLayout.elements:ListItemElement;flashx.textLayout.formats:IListMarkerFormat' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createContinuousAlphaString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:createContinuousAlphaString' isStatic='true' isFinal='false' isOverride='false'  param_names='n;first;base' param_types='int;int;int' param_defaults='undefined;undefined;undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createNumericBaseTenString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:createNumericBaseTenString' isStatic='true' isFinal='false' isOverride='false'  param_names='n;zero' param_types='int;int' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createRomanString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:createRomanString' isStatic='true' isFinal='false' isOverride='false'  param_names='n;data' param_types='int;Vector$String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createTableAlphaString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:createTableAlphaString' isStatic='true' isFinal='false' isOverride='false'  param_names='n;table' param_types='int;Vector$int' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='decimalLeadingZeroString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:decimalLeadingZeroString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='decimalString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:decimalString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='devanagariString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:devanagariString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingBottom' fullname='flashx.textLayout.elements:ListElement/tlf_internal:getEffectivePaddingBottom' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingLeft' fullname='flashx.textLayout.elements:ListElement/tlf_internal:getEffectivePaddingLeft' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingRight' fullname='flashx.textLayout.elements:ListElement/tlf_internal:getEffectivePaddingRight' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingTop' fullname='flashx.textLayout.elements:ListElement/tlf_internal:getEffectivePaddingTop' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='gujaratiString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:gujaratiString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='gurmukhiString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:gurmukhiString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hangulConstantString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:hangulConstantString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hangulString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:hangulString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hiraganaIrohaString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:hiraganaIrohaString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hiraganaString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:hiraganaString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='isNumberedList' fullname='flashx.textLayout.elements:ListElement/tlf_internal:isNumberedList' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='kannadaString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:kannadaString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='katakanaIrohaString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:katakanaIrohaString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='katakanaString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:katakanaString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='lowerAlphaString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:lowerAlphaString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='lowerGreekString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:lowerGreekString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='lowerLatinString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:lowerLatinString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='lowerRomanString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:lowerRomanString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='modelChanged' fullname='flashx.textLayout.elements:ListElement/tlf_internal:modelChanged' isStatic='false' isFinal='false' isOverride='true'  param_names='changeType;elem;changeStart;changeLen;needNormalize;bumpGeneration' param_types='String;flashx.textLayout.elements:FlowElement;int;int;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined;true;true' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='persianString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:persianString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='thaiString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:thaiString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='upperAlphaString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:upperAlphaString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='upperGreekString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:upperGreekString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='upperLatinString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:upperLatinString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='upperRomanString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:upperRomanString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='urduString' fullname='flashx.textLayout.elements:ListElement/tlf_internal:urduString' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:ListElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:ListElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='LIST_MARKER_FORMAT_NAME' fullname='flashx.textLayout.elements:ListElement/tlf_internal:LIST_MARKER_FORMAT_NAME' type='String' isStatic='true' isConst='true' defaultValue='listMarkerFormat' >
<description><![CDATA[ 

		 Specifies the name of the ListMarker format

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<private><![CDATA[]]></private>
</field>
<field name='algorithmicListStyles' fullname='flashx.textLayout.elements:ListElement/tlf_internal:algorithmicListStyles' type='Object' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='alphabeticListStyles' fullname='flashx.textLayout.elements:ListElement/tlf_internal:alphabeticListStyles' type='Object' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cjkEarthlyBranchData' fullname='flashx.textLayout.elements:ListElement/tlf_internal:cjkEarthlyBranchData' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cjkHeavenlyStemData' fullname='flashx.textLayout.elements:ListElement/tlf_internal:cjkHeavenlyStemData' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='constantListStyles' fullname='flashx.textLayout.elements:ListElement/tlf_internal:constantListStyles' type='Object' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ avoid switches and if-else statements.  switches behave like if-else

		 http://www.w3.org/Style/CSS/Test/CSS1/current/sec563.htm

		 http://en.wikipedia.org/wiki/Unicode_Geometric_Shapes

		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hangulConstantData' fullname='flashx.textLayout.elements:ListElement/tlf_internal:hangulConstantData' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hangulData' fullname='flashx.textLayout.elements:ListElement/tlf_internal:hangulData' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hiraganaData' fullname='flashx.textLayout.elements:ListElement/tlf_internal:hiraganaData' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hiraganaIrohaData' fullname='flashx.textLayout.elements:ListElement/tlf_internal:hiraganaIrohaData' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='katakanaData' fullname='flashx.textLayout.elements:ListElement/tlf_internal:katakanaData' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='katakanaIrohaData' fullname='flashx.textLayout.elements:ListElement/tlf_internal:katakanaIrohaData' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='listSuffixes' fullname='flashx.textLayout.elements:ListElement/tlf_internal:listSuffixes' type='Object' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='lowerGreekData' fullname='flashx.textLayout.elements:ListElement/tlf_internal:lowerGreekData' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='lowerRomanData' fullname='flashx.textLayout.elements:ListElement/private:lowerRomanData' type='Vector$String' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='numericListStyles' fullname='flashx.textLayout.elements:ListElement/tlf_internal:numericListStyles' type='Object' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='romanDigitFunction' fullname='flashx.textLayout.elements:ListElement/private:romanDigitFunction' type='Vector$Function' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='upperGreekData' fullname='flashx.textLayout.elements:ListElement/tlf_internal:upperGreekData' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='upperRomanData' fullname='flashx.textLayout.elements:ListElement/private:upperRomanData' type='Vector$String' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<classRec name='ListItemElement' fullname='flashx.textLayout.elements:ListItemElement' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\elements\ListItemElement.as' namespace='flashx.textLayout.elements' access='public' baseclass='flashx.textLayout.elements:ContainerFormattedElement' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	 <p> ListItemElement is an item in a list. It most commonly contains one or more ParagraphElement objects, but could

	 also have children of type DivElement or ListElement. A ListItemElement always appears within a ListElement.</p>

	 
	 <p>A ListItemElement has automatically generated content that appears before the regular content of the list. This is called

	 the <i>marker</i>, and it is what visually distinguishes the list item. The listStyleType property governs how the marker

	 is generated and allows the user to control whether the list item is marked with a bullet, a number, or alphabetically.

	 The listStylePosition governs where the marker appears relative to the list item; specifically it may appear outside, in the 

	 margin of the list, or inside, beside the list item itself. The ListMarkerFormat defines the TextLayoutFormat of the marker

	 (by default this will be the same as the list item), as well as an optional suffix that goes at the end of the marker. For 

	 instance, for a numbered list, it is common to have a "." as a suffix that appears after the number. The ListMarkerFormat also

	 allows specification of text that goes at the start of the marker, and for numbered lists allows control over the numbering.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[ParagraphElement

	 ]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat#listStyleType

	 ]]></see>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat#listStylePosition

	 ]]></see>
<see><![CDATA[flashx.textLayout.formats.ListMarkerFormat

	 ]]></see>
<metadata>
	<DefaultProperty owner='flashx.textLayout.elements:ListItemElement' name='mxmlChildren' >
	</DefaultProperty>
</metadata>
</classRec>
<method name='computedListMarkerFormat' fullname='flashx.textLayout.elements:ListItemElement/tlf_internal:computedListMarkerFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:IListMarkerFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingBottom' fullname='flashx.textLayout.elements:ListItemElement/tlf_internal:getEffectivePaddingBottom' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingLeft' fullname='flashx.textLayout.elements:ListItemElement/tlf_internal:getEffectivePaddingLeft' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingRight' fullname='flashx.textLayout.elements:ListItemElement/tlf_internal:getEffectivePaddingRight' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingTop' fullname='flashx.textLayout.elements:ListItemElement/tlf_internal:getEffectivePaddingTop' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getListItemNumber' fullname='flashx.textLayout.elements:ListItemElement/tlf_internal:getListItemNumber' isStatic='false' isFinal='false' isOverride='false'  param_names='listMarkerFormat' param_types='flashx.textLayout.formats:IListMarkerFormat' param_defaults='null' result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='normalizeNeedsInitialParagraph' fullname='flashx.textLayout.elements:ListItemElement/tlf_internal:normalizeNeedsInitialParagraph' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='normalizeRange' fullname='flashx.textLayout.elements:ListItemElement/tlf_internal:normalizeRange' isStatic='false' isFinal='false' isOverride='true'  param_names='normalizeStart;normalizeEnd' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='abstract' fullname='flashx.textLayout.elements:ListItemElement/protected:abstract/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultTypeName' fullname='flashx.textLayout.elements:ListItemElement/tlf_internal:defaultTypeName/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_listNumberHint' fullname='flashx.textLayout.elements:ListItemElement/tlf_internal:_listNumberHint' type='int' isStatic='false' isConst='false' defaultValue='2.147483647E9' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='TextScrap' fullname='flashx.textLayout.edit:TextScrap' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\TextScrap.as' namespace='flashx.textLayout.edit' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The TextScrap class represents a fragment of a text flow.

	 

	 <p>A TextScrap is a holding place for all or part of a TextFlow. A range of text can be copied 

	 from a TextFlow into a TextScrap, and pasted from the TextScrap into another TextFlow.</p>

	 
	 ]]></description>
<langversion><![CDATA[3.0

	]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionManager

	 

	 ]]></see>
</classRec>
<method name='TextScrap' fullname='flashx.textLayout.edit:TextScrap/TextScrap' isStatic='false' isFinal='false' isOverride='false'  param_names='textFlow' param_types='flashx.textLayout.elements:TextFlow' param_defaults='null' result_type='*'>
<description><![CDATA[

		 Creates a TextScrap object.

		 

		 <p>Use the <code>createTextScrap()</code> method to create a TextScrap object from

		 a range of text represented by a TextRange object.</p>

		  

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[textFlow if set, the new TextScrap object contains the entire text flow.

		 Otherwise, the TextScrap object is empty.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='clone' fullname='flashx.textLayout.edit:TextScrap/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:TextScrap'>
<description><![CDATA[

		 Creates a duplicate copy of this TextScrap object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<return><![CDATA[TextScrap A copy of this TextScrap.

		 

		 ]]></return>
</method>
<method name='createTextScrap' fullname='flashx.textLayout.edit:TextScrap/createTextScrap' isStatic='true' isFinal='false' isOverride='false'  param_names='range' param_types='flashx.textLayout.elements:TextRange' param_defaults='undefined' result_type='flashx.textLayout.edit:TextScrap'>
<description><![CDATA[

		 Creates a TextScrap object from a range of text represented by a TextRange object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[range the TextRange object representing the range of text to copy.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='isPlainText' fullname='flashx.textLayout.edit:TextScrap/tlf_internal:isPlainText' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Returns true if the text is plain text (not formatted)

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='setPlainText' fullname='flashx.textLayout.edit:TextScrap/tlf_internal:setPlainText' isStatic='false' isFinal='false' isOverride='false'  param_names='plainText' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Marks the TextScrap's content as being either plain or formatted ]]></description>
</method>
<method name='textFlow' fullname='flashx.textLayout.edit:TextScrap/textFlow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[ 

		 Gets the TextFlow that is currently in the TextScrap.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<field name='MERGE_TO_NEXT_ON_PASTE' fullname='flashx.textLayout.edit:TextScrap/tlf_internal:MERGE_TO_NEXT_ON_PASTE' type='String' isStatic='true' isConst='true' defaultValue='mergeToNextOnPaste' >
</field>
<field name='_plainText' fullname='flashx.textLayout.edit:TextScrap/private:_plainText' type='int' isStatic='false' isConst='false' >
</field>
<field name='_textFlow' fullname='flashx.textLayout.edit:TextScrap/private:_textFlow' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
</field>
<classRec name='ElementRange' fullname='flashx.textLayout.edit:ElementRange' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\ElementRange.as' namespace='flashx.textLayout.edit' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

 The ElementRange class represents the range of objects selected within a text flow.

 

 <p>The beginning elements 

 (such as <code>firstLeaf</code>) are always less than or equal to the end elements (in this case, <code>lastLeaf</code>)

 for each pair of values in an element range.</p>

 

 ]]></description>
<langversion><![CDATA[3.0

 ]]></langversion>
<playerversion><![CDATA[Flash 10

 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow

 

 ]]></see>
</classRec>
<method name='adjustForLeanLeft' fullname='flashx.textLayout.edit:ElementRange/private:adjustForLeanLeft' isStatic='true' isFinal='false' isOverride='false'  param_names='rslt' param_types='flashx.textLayout.edit:ElementRange' param_defaults='undefined' result_type='void'>
</method>
<method name='createElementRange' fullname='flashx.textLayout.edit:ElementRange/createElementRange' isStatic='true' isFinal='false' isOverride='false'  param_names='textFlow;absoluteStart;absoluteEnd' param_types='flashx.textLayout.elements:TextFlow;int;int' param_defaults='undefined;undefined;undefined' result_type='flashx.textLayout.edit:ElementRange'>
<description><![CDATA[ 

	 Creates an ElementRange object.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<param><![CDATA[textFlow	the text flow

	 ]]></param>
<param><![CDATA[beginIndex absolute text position of the first character in the text range

	 ]]></param>
<param><![CDATA[endIndex one beyond the absolute text position of the last character in the text range

	 

	 ]]></param>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</method>
<method name='getCommonCharacterFormat' fullname='flashx.textLayout.edit:ElementRange/getCommonCharacterFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[

	 Gets the character format attributes that are common to all characters in the text range or current selection.

	 

	 <p>Format attributes that do not have the same value for all characters in the element range are set to 

	 <code>null</code> in the returned TextLayoutFormat instance.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<return><![CDATA[The common character style settings

	 

	 ]]></return>
</method>
<method name='getCommonContainerFormat' fullname='flashx.textLayout.edit:ElementRange/getCommonContainerFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[

		 Gets the container format attributes that are common to all containers in the element range.

	 

	 <p>Format attributes that do not have the same value for all containers in the element range are set to 

	 <code>null</code> in the returned TextLayoutFormat instance.</p>

	 	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<return><![CDATA[The common paragraph style settings

	 

	 ]]></return>
<see><![CDATA[flashx.textLayout.edit.ISelectionManager#getCommonParagraphFormat	 

		]]></see>
</method>
<method name='getCommonParagraphFormat' fullname='flashx.textLayout.edit:ElementRange/getCommonParagraphFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[

	 Gets the paragraph format attributes that are common to all paragraphs in the element range.

	 

	 <p>Format attributes that do not have the same value for all paragraphs in the element range are set to 

	 <code>null</code> in the returned TextLayoutFormat instance.</p>

	 	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<return><![CDATA[The common paragraph style settings

	 

	 ]]></return>
<see><![CDATA[flashx.textLayout.edit.ISelectionManager#getCommonParagraphFormat

	 

	 ]]></see>
</method>
<method name='absoluteEnd' fullname='flashx.textLayout.edit:ElementRange/absoluteEnd/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

	 The absolute text position of the FlowLeafElement object that contains the end of the range. 

	 

	 ]]></description>
<langversion><![CDATA[3.0

 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</method>
<method name='absoluteStart' fullname='flashx.textLayout.edit:ElementRange/absoluteStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

	 The absolute text position of the FlowLeafElement object that contains the start of the range.

	  

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</method>
<method name='characterFormat' fullname='flashx.textLayout.edit:ElementRange/characterFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

	 The format attributes of the characters in the range. 

	 

	 <p>If the range spans more than one FlowElement object, which means that more than one

	 character format may exist within the range, the format of the first FlowElement object is returned.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</method>
<method name='containerFormat' fullname='flashx.textLayout.edit:ElementRange/containerFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

	 The format attributes of the container displaying the range. 

	 

	 <p>If the range spans more than one container, the format of the first container is returned.</p>

	  

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</method>
<method name='firstLeaf' fullname='flashx.textLayout.edit:ElementRange/firstLeaf/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowLeafElement'>
<description><![CDATA[ 

	 The FlowLeafElement object that contains the start of the range. 

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</method>
<method name='firstParagraph' fullname='flashx.textLayout.edit:ElementRange/firstParagraph/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:ParagraphElement'>
<description><![CDATA[ 

	 The ParagraphElement object that contains the start of the range. 

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</method>
<method name='lastLeaf' fullname='flashx.textLayout.edit:ElementRange/lastLeaf/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowLeafElement'>
<description><![CDATA[ 

	 The FlowLeafElement object that contains the end of the range. 

	 

	 ]]></description>
<langversion><![CDATA[3.0

	]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</method>
<method name='lastParagraph' fullname='flashx.textLayout.edit:ElementRange/lastParagraph/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:ParagraphElement'>
<description><![CDATA[ 

	 The ParagraphElement object that contains the end of the range. 

	 

	 ]]></description>
<langversion><![CDATA[3.0

	]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</method>
<method name='paragraphFormat' fullname='flashx.textLayout.edit:ElementRange/paragraphFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

	 The format attributes of the paragraph containing the range. 

	 

	 <p>If the range spans more than one paragraph, the format of the first paragraph is returned.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</method>
<method name='textFlow' fullname='flashx.textLayout.edit:ElementRange/textFlow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[ 

	 The TextFlow object that contains the range. 

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</method>
<method name='absoluteEnd' fullname='flashx.textLayout.edit:ElementRange/absoluteEnd/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='absoluteStart' fullname='flashx.textLayout.edit:ElementRange/absoluteStart/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='firstLeaf' fullname='flashx.textLayout.edit:ElementRange/firstLeaf/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:FlowLeafElement' param_defaults='undefined' result_type='void'>
</method>
<method name='firstParagraph' fullname='flashx.textLayout.edit:ElementRange/firstParagraph/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:ParagraphElement' param_defaults='undefined' result_type='void'>
</method>
<method name='lastLeaf' fullname='flashx.textLayout.edit:ElementRange/lastLeaf/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:FlowLeafElement' param_defaults='undefined' result_type='void'>
</method>
<method name='lastParagraph' fullname='flashx.textLayout.edit:ElementRange/lastParagraph/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:ParagraphElement' param_defaults='undefined' result_type='void'>
</method>
<method name='textFlow' fullname='flashx.textLayout.edit:ElementRange/textFlow/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='void'>
</method>
<field name='_absoluteEnd' fullname='flashx.textLayout.edit:ElementRange/private:_absoluteEnd' type='int' isStatic='false' isConst='false' >
</field>
<field name='_absoluteStart' fullname='flashx.textLayout.edit:ElementRange/private:_absoluteStart' type='int' isStatic='false' isConst='false' >
</field>
<field name='_firstLeaf' fullname='flashx.textLayout.edit:ElementRange/private:_firstLeaf' type='flashx.textLayout.elements:FlowLeafElement' isStatic='false' isConst='false' >
</field>
<field name='_firstParagraph' fullname='flashx.textLayout.edit:ElementRange/private:_firstParagraph' type='flashx.textLayout.elements:ParagraphElement' isStatic='false' isConst='false' >
</field>
<field name='_lastLeaf' fullname='flashx.textLayout.edit:ElementRange/private:_lastLeaf' type='flashx.textLayout.elements:FlowLeafElement' isStatic='false' isConst='false' >
</field>
<field name='_lastParagraph' fullname='flashx.textLayout.edit:ElementRange/private:_lastParagraph' type='flashx.textLayout.elements:ParagraphElement' isStatic='false' isConst='false' >
</field>
<field name='_textFlow' fullname='flashx.textLayout.edit:ElementRange/private:_textFlow' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
</field>
<classRec name='EditingMode' fullname='flashx.textLayout.edit:EditingMode' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\EditingMode.as' namespace='flashx.textLayout.edit' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	 The EditingMode class defines constants used with EditManager class to represent the 

	 read, select, and edit permissions of a document.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 

	 ]]></see>
</classRec>
<field name='READ_ONLY' fullname='flashx.textLayout.edit:EditingMode/READ_ONLY' type='String' isStatic='true' isConst='true' defaultValue='readOnly' >
<description><![CDATA[ 

		 The document is read-only.

		 

		 <p>Neither selection nor editing is allowed.</p> 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</field>
<field name='READ_SELECT' fullname='flashx.textLayout.edit:EditingMode/READ_SELECT' type='String' isStatic='true' isConst='true' defaultValue='readSelect' >
<description><![CDATA[ 

		 The text in the document can be selected and copied, but not edited. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</field>
<field name='READ_WRITE' fullname='flashx.textLayout.edit:EditingMode/READ_WRITE' type='String' isStatic='true' isConst='true' defaultValue='readWrite' >
<description><![CDATA[ 

		 The document can be edited.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</field>
<interfaceRec name='IInteractionEventHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\IInteractionEventHandler.as' namespace='flashx.textLayout.edit' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The IInteractionEventHandler interface defines the event handler functions that

	 are handled by a Text Layout Framework selection or edit manager.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</interfaceRec>
<method name='activateHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:activateHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes an activate event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='deactivateHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:deactivateHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a deactivate event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='editHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:editHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes an edit event.

		 

		 <p>Edit events are dispatched for cut, copy, paste, and selectAll commands.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='focusChangeHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:focusChangeHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a focusChange event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='focusInHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:focusInHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a focusIn event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='focusOutHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:focusOutHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a focusOut event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='imeStartCompositionHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:imeStartCompositionHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:IMEEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes an imeStartComposition event

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='keyDownHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:keyDownHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		Processes a keyDown event.

		 

		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
</method>
<method name='keyFocusChangeHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:keyFocusChangeHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		Processes a keyFocusChange event.

		

		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
</method>
<method name='keyUpHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:keyUpHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		Processes a keyUp event.

		

		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
</method>
<method name='menuSelectHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:menuSelectHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:ContextMenuEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a menuSelect event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='mouseDoubleClickHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:mouseDoubleClickHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a mouseDoubleClick event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='mouseDownHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:mouseDownHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a mouseDown event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='mouseMoveHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:mouseMoveHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a mouseMove event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='mouseOutHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:mouseOutHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a mouseOut event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='mouseOverHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:mouseOverHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a mouseOver event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='mouseUpHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:mouseUpHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a mouseUp event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='mouseWheelHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:mouseWheelHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a mouseWheel event.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='softKeyboardActivatingHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:softKeyboardActivatingHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes an softKeyboardActivating event

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.2

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='textInputHandler' fullname='flashx.textLayout.edit:IInteractionEventHandler/flashx.textLayout.edit:IInteractionEventHandler:textInputHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TextEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes a TextEvent.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<classRec name='SelectionFormat' fullname='flashx.textLayout.edit:SelectionFormat' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\SelectionFormat.as' namespace='flashx.textLayout.edit' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The SelectionFormat class defines the properties of a selection highlight.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.ISelectionManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionManager

	 

	 ]]></see>
</classRec>
<method name='SelectionFormat' fullname='flashx.textLayout.edit:SelectionFormat/SelectionFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='rangeColor;rangeAlpha;rangeBlendMode;pointColor;pointAlpha;pointBlendMode;pointBlinkRate' param_types='uint;Number;String;uint;Number;String;Number' param_defaults='0xffffff;1.0;difference;0xffffff;1.0;difference;500' result_type='*'>
<description><![CDATA[ 

		 Creates a SelectionFormat object with the specified properties.

		 

		 <p>A SelectionFormat created with the default values will use black for

		 the highlight colors, 1.0 for the alphas, and BlendMode.DIFFERENCE for the blending modes.

		 The cursor blink rate is 500 milliseconds.</p>

		 
		 <p>Setting the <code>pointAlpha</code> and <code>rangeAlpha</code> properties to zero disables selection highlighting.</p>

		 

		 <p>Non-zero blink rate is only used when an EditManager is attached to the TextFlow.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[rangeColor The color for drawing the highlight.

		 ]]></param>
<param><![CDATA[rangeAlpha The transparency value for drawing the highlight. Valid values are between 0

		 (completely transparent) and 1 (completely opaque, which is the default).

		 ]]></param>
<param><![CDATA[rangeBlendMode The blend mode for drawing the highlight. Use constants defined in the BlendMode class

		 to set this parameter.

		 ]]></param>
<param><![CDATA[pointColor The color for the drawing cursor.

		 ]]></param>
<param><![CDATA[pointAlpha The transparency value for drawing the cursor. Valid values are between 0

		 (completely transparent) and 1 (completely opaque, which is the default).

		 ]]></param>
<param><![CDATA[pointBlendMode The blend mode for drawing the cursor. Use constants defined in the BlendMode class

		 to set this parameter.

		 ]]></param>
<param><![CDATA[pointBlinkRate The rate at which the cursor blinks, in milliseconds.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flash.display.BlendMode

		 ]]></see>
<see><![CDATA[#pointAlpha

		 ]]></see>
<see><![CDATA[#rangeAlpha

		 

		 ]]></see>
</method>
<method name='equals' fullname='flashx.textLayout.edit:SelectionFormat/equals' isStatic='false' isFinal='false' isOverride='false'  param_names='selectionFormat' param_types='flashx.textLayout.edit:SelectionFormat' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Determines whether this SelectionFormat object has the same property values

		 as another SelectionFormat object.

		  

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[selectionFormat	the SelectionFormat to compare against.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<return><![CDATA[<code>true</code>, if the property values are identical; <code>false</code>, otherwise.

		 

		 ]]></return>
</method>
<method name='pointAlpha' fullname='flashx.textLayout.edit:SelectionFormat/pointAlpha/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The alpha for drawing the cursor. Valid values are between 0

		 (completely transparent) and 1 (completely opaque, which is the default).

		 
		 <p>Setting the <code>pointAlpha</code> and <code>rangeAlpha</code> properties to zero disables selection highlighting.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

 	 	 
 	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[#rangeAlpha

		 ]]></see>
</method>
<method name='pointBlendMode' fullname='flashx.textLayout.edit:SelectionFormat/pointBlendMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 The blend mode for drawing the cursor.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flash.display.BlendMode

		 

		 ]]></see>
</method>
<method name='pointBlinkRate' fullname='flashx.textLayout.edit:SelectionFormat/pointBlinkRate/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The rate at which the cursor blinks, in milliseconds.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='pointColor' fullname='flashx.textLayout.edit:SelectionFormat/pointColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[

		 The color for drawing the cursor.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='rangeAlpha' fullname='flashx.textLayout.edit:SelectionFormat/rangeAlpha/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The alpha for drawing the highlight of a range selection. Valid values are between 0

		 (completely transparent) and 1 (completely opaque, which is the default).

		 
		 <p>Setting the <code>pointAlpha</code> and <code>rangeAlpha</code> properties to zero disables selection highlighting.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

 	 	 
 	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[#pointAlpha

		 ]]></see>
</method>
<method name='rangeBlendMode' fullname='flashx.textLayout.edit:SelectionFormat/rangeBlendMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 The blending mode for drawing the highlight of a range selection. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flash.display.BlendMode

		 ]]></see>
</method>
<method name='rangeColor' fullname='flashx.textLayout.edit:SelectionFormat/rangeColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[

		 The color for drawing the highlight of a range selection. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<field name='_pointAlpha' fullname='flashx.textLayout.edit:SelectionFormat/private:_pointAlpha' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_pointBlendMode' fullname='flashx.textLayout.edit:SelectionFormat/private:_pointBlendMode' type='String' isStatic='false' isConst='false' >
</field>
<field name='_pointBlinkRate' fullname='flashx.textLayout.edit:SelectionFormat/private:_pointBlinkRate' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_pointColor' fullname='flashx.textLayout.edit:SelectionFormat/private:_pointColor' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_rangeAlpha' fullname='flashx.textLayout.edit:SelectionFormat/private:_rangeAlpha' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_rangeBlendMode' fullname='flashx.textLayout.edit:SelectionFormat/private:_rangeBlendMode' type='String' isStatic='false' isConst='false' >
</field>
<field name='_rangeColor' fullname='flashx.textLayout.edit:SelectionFormat/private:_rangeColor' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='TextClipboard' fullname='flashx.textLayout.edit:TextClipboard' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\TextClipboard.as' namespace='flashx.textLayout.edit' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The TextClipboard class copies and pastes TextScrap objects to and from the system clipboard.

	 

	 <p>When you copy a TextScrap to the TextClipboard, the information is copied to the

	 system clipboard in two clipboard formats. One format is an XML string expressing the copied 

	 TextScrap object in Text Layout Markup syntax. This clipboard object uses the format name: 

	 "TEXT_LAYOUT_MARKUP". The second format is a plain-text string, which uses the standard 

	 Clipboard.TEXT_FORMAT name.</p>

	 

	 <p>The methods of the TextClipboard class are static functions, you do not need to

	 create an instance of TextClipboard.</p>  

	 

	 ]]></description>
<langversion><![CDATA[3.0

	]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
<see><![CDATA[flash.desktop.Clipboard

	 

	 ]]></see>
</classRec>
<method name='exportForClipboard' fullname='flashx.textLayout.edit:TextClipboard/tlf_internal:exportForClipboard' isStatic='true' isFinal='false' isOverride='false'  param_names='scrap;format' param_types='flashx.textLayout.edit:TextScrap;String' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='exportScrap' fullname='flashx.textLayout.edit:TextClipboard/tlf_internal:exportScrap' isStatic='true' isFinal='false' isOverride='false'  param_names='scrap;exportFunctor' param_types='flashx.textLayout.edit:TextScrap;Function' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getBeginArray' fullname='flashx.textLayout.edit:TextClipboard/private:getBeginArray' isStatic='true' isFinal='false' isOverride='false'  param_names='beginArrayChild;textFlow' param_types='XML;flashx.textLayout.elements:TextFlow' param_defaults='undefined;undefined' result_type='Array'>
</method>
<method name='getContents' fullname='flashx.textLayout.edit:TextClipboard/getContents' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:TextScrap'>
<description><![CDATA[

		 Gets any text on the system clipboard as a TextScrap object.

		  

		 <p>If the "TEXT_LAYOUT_MARKUP" format is available, this method converts the formatted

		 string into a TextScrap and returns it. Otherwise, if the Clipboard.TEXT_Format is available,

		 this method converts the plain-text string into a TextScrap. If neither clipboard format

		 is available, this method returns <code>null</code>.</p>

		 

		 <p>Flash Player requires that the <code>getContents()</code> method be called in a paste event handler. In AIR, 

		 this restriction only applies to content outside of the application security sandbox.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flash.events.Event#PASTE

		 

		 ]]></see>
</method>
<method name='getEndArray' fullname='flashx.textLayout.edit:TextClipboard/private:getEndArray' isStatic='true' isFinal='false' isOverride='false'  param_names='endArrayChild;textFlow' param_types='XML;flashx.textLayout.elements:TextFlow' param_defaults='undefined;undefined' result_type='Array'>
</method>
<method name='importOldTextLayoutFormatToScrap' fullname='flashx.textLayout.edit:TextClipboard/tlf_internal:importOldTextLayoutFormatToScrap' isStatic='true' isFinal='false' isOverride='false'  param_names='textOnClipboard' param_types='String' param_defaults='undefined' result_type='flashx.textLayout.edit:TextScrap'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='importScrap' fullname='flashx.textLayout.edit:TextClipboard/tlf_internal:importScrap' isStatic='true' isFinal='false' isOverride='false'  param_names='importFunctor' param_types='Function' param_defaults='undefined' result_type='flashx.textLayout.edit:TextScrap'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='importToScrap' fullname='flashx.textLayout.edit:TextClipboard/tlf_internal:importToScrap' isStatic='true' isFinal='false' isOverride='false'  param_names='textOnClipboard;format' param_types='String;String' param_defaults='undefined;undefined' result_type='flashx.textLayout.edit:TextScrap'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setContents' fullname='flashx.textLayout.edit:TextClipboard/setContents' isStatic='true' isFinal='false' isOverride='false'  param_names='textScrap' param_types='flashx.textLayout.edit:TextScrap' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Puts a TextScrap onto the system clipboard.  

		 

		 <p>The TextScrap is placed onto the system clipboard as both a Text Layout Markup

		 representation and a plain text representation.</p>

		 

		 <p>Flash Player requires a user event (such as a key press or mouse click) before 

		 calling <code>setContents()</code>. In AIR, this restriction only applies to content outside of 

		 the application security sandbox. </p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

 		 ]]></langversion>
<param><![CDATA[scrap The TextScrap to paste into the clipboard.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flash.events.Event#COPY

		 ]]></see>
<see><![CDATA[flash.events.Event#CUT

		 

		 ]]></see>
</method>
<field name='TEXT_LAYOUT_MARKUP' fullname='flashx.textLayout.edit:TextClipboard/tlf_internal:TEXT_LAYOUT_MARKUP' type='String' isStatic='true' isConst='true' defaultValue='TEXT_LAYOUT_MARKUP' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='IMEClient' fullname='flashx.textLayout.edit:IMEClient' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\IMEClient.as' namespace='flashx.textLayout.edit' access='internal' baseclass='Object' interfaces='flash.text.ime:IIMEClient' isFinal='false' isDynamic='false' >
</classRec>
<method name='IMEClient' fullname='flashx.textLayout.edit:IMEClient/IMEClient' isStatic='false' isFinal='false' isOverride='false'  param_names='editManager' param_types='flashx.textLayout.edit:EditManager' param_defaults='undefined' result_type='*'>
</method>
<method name='compositionAbandoned' fullname='flashx.textLayout.edit:IMEClient/compositionAbandoned' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='confirmComposition' fullname='flashx.textLayout.edit:IMEClient/confirmComposition' isStatic='false' isFinal='false' isOverride='false'  param_names='text;preserveSelection' param_types='String;Boolean' param_defaults='null;false' result_type='void'>
</method>
<method name='deleteIMEText' fullname='flashx.textLayout.edit:IMEClient/private:deleteIMEText' isStatic='false' isFinal='false' isOverride='false'  param_names='textFlow' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='void'>
</method>
<method name='doIMEClauseOperation' fullname='flashx.textLayout.edit:IMEClient/private:doIMEClauseOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='selState;clause' param_types='flashx.textLayout.edit:SelectionState;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='doIMEStatusOperation' fullname='flashx.textLayout.edit:IMEClient/private:doIMEStatusOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='selState;attrRange' param_types='flashx.textLayout.edit:SelectionState;flash.text.ime:CompositionAttributeRange' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='endIMESession' fullname='flashx.textLayout.edit:IMEClient/private:endIMESession' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getTextBounds' fullname='flashx.textLayout.edit:IMEClient/getTextBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='startIndex;endIndex' param_types='int;int' param_defaults='undefined;undefined' result_type='flash.geom:Rectangle'>
</method>
<method name='getTextInRange' fullname='flashx.textLayout.edit:IMEClient/getTextInRange' isStatic='false' isFinal='false' isOverride='false'  param_names='startIndex;endIndex' param_types='int;int' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[ 

		 Gets the specified range of text from a component implementing ITextSupport.

		 To retrieve all text in the component, do not specify values for <code>startIndex</code> and <code>endIndex</code>.

		 Components which wish to support inline IME or web searchability should call into this method.

		 Components overriding this method should ensure that the default values of <code>-1</code> 

		 for <code>startIndex</code> and <code>endIndex</code> are supported.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.0

		 ]]></playerversion>
</method>
<method name='rollBackIMEChanges' fullname='flashx.textLayout.edit:IMEClient/private:rollBackIMEChanges' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='selectRange' fullname='flashx.textLayout.edit:IMEClient/selectRange' isStatic='false' isFinal='false' isOverride='false'  param_names='anchorIndex;activeIndex' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='selectionChanged' fullname='flashx.textLayout.edit:IMEClient/selectionChanged' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<private><![CDATA[]]></private>
</method>
<method name='setFocus' fullname='flashx.textLayout.edit:IMEClient/setFocus' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='updateComposition' fullname='flashx.textLayout.edit:IMEClient/updateComposition' isStatic='false' isFinal='false' isOverride='false'  param_names='text;attributes;compositionStartIndex;compositionEndIndex' param_types='String;Vector$flash.text.ime:CompositionAttributeRange;int;int' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='compositionEndIndex' fullname='flashx.textLayout.edit:IMEClient/compositionEndIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='compositionStartIndex' fullname='flashx.textLayout.edit:IMEClient/compositionStartIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='selectionActiveIndex' fullname='flashx.textLayout.edit:IMEClient/selectionActiveIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='selectionAnchorIndex' fullname='flashx.textLayout.edit:IMEClient/selectionAnchorIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='verticalTextLayout' fullname='flashx.textLayout.edit:IMEClient/verticalTextLayout/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<field name='_closing' fullname='flashx.textLayout.edit:IMEClient/private:_closing' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_controller' fullname='flashx.textLayout.edit:IMEClient/private:_controller' type='flashx.textLayout.container:ContainerController' isStatic='false' isConst='false' >
</field>
<field name='_editManager' fullname='flashx.textLayout.edit:IMEClient/private:_editManager' type='flashx.textLayout.edit:EditManager' isStatic='false' isConst='false' >
</field>
<field name='_imeAnchorPosition' fullname='flashx.textLayout.edit:IMEClient/private:_imeAnchorPosition' type='int' isStatic='false' isConst='false' >
<description><![CDATA[ Maintain position of text we've inserted while in the middle of processing IME. ]]></description>
</field>
<field name='_imeLength' fullname='flashx.textLayout.edit:IMEClient/private:_imeLength' type='int' isStatic='false' isConst='false' >
</field>
<field name='_undoManager' fullname='flashx.textLayout.edit:IMEClient/private:_undoManager' type='flashx.undo:UndoManager' isStatic='false' isConst='false' >
</field>
<classRec name='SelectionState' fullname='flashx.textLayout.edit:SelectionState' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\SelectionState.as' namespace='flashx.textLayout.edit' access='public' baseclass='flashx.textLayout.elements:TextRange' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The SelectionState class represents a selection in a text flow.  

	 

	 <p>A selection range has an anchor point, representing the point at which the selection of text began, and an

	 active point, representing the point to which the selection is extended. The active point can be before or after 

	 the anchor point in the text. If a selection is modified (for example, by a user shift-clicking with the mouse),

	 the active point changes while the anchor point always remains in the same position.</p>

	 
	 ]]></description>
<langversion><![CDATA[3.0

 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.ISelectionManager#getSelectionState()

	 ]]></see>
<see><![CDATA[flashx.textLayout.elements.TextFlow

	 ]]></see>
<see><![CDATA[flashx.textLayout.elements.TextRange

	 

	 ]]></see>
</classRec>
<method name='SelectionState' fullname='flashx.textLayout.edit:SelectionState/SelectionState' isStatic='false' isFinal='false' isOverride='false'  param_names='root;anchorPosition;activePosition;format' param_types='flashx.textLayout.elements:TextFlow;int;int;flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined;undefined;undefined;null' result_type='*'>
<description><![CDATA[ 

		 Creates a SelectionState object.

		 

		 <p><b>Note:</b> Do not construct a SelectionState object in order to create a selection. To

		 create a selection in a text flow, call the <code>setSelection()</code> method of the relevant

		 ISelectionManager instance (which is the SelectionManager or EditManager object assigned 

		 to the <code>interactionManager</code> property of the text flow).</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[root	The TextFlow associated with the selection.

		 ]]></param>
<param><![CDATA[anchorPosition	The anchor index of the selection.

		 ]]></param>
<param><![CDATA[activePosition	The active index of the selection.

		 ]]></param>
<param><![CDATA[format	The TextLayoutFormat to be applied on next character typed when a point selection

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.ISelectionManager#getSelectionState()

		 ]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionManager

		 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

		 

		 ]]></see>
</method>
<method name='clone' fullname='flashx.textLayout.edit:SelectionState/tlf_internal:clone' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateRange' fullname='flashx.textLayout.edit:SelectionState/updateRange' isStatic='false' isFinal='false' isOverride='true'  param_names='newAnchorPosition;newActivePosition' param_types='int;int' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[ 

		 Updates the selection range with new anchor or active position values.  

		 

		 <p>The <code>pointFormat</code> styles are cleared if the selection is changed.</p>

		 

		 ]]></description>
<param><![CDATA[newAnchorPosition	the anchor index of the selection.

		 ]]></param>
<param><![CDATA[newActivePosition	the active index of the selection.

		 ]]></param>
<return><![CDATA[true if selection is changed

		 

		 ]]></return>
</method>
<method name='pointFormat' fullname='flashx.textLayout.edit:SelectionState/pointFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The format attributes applied to inserted text. 

		 

		 <p><b>Note:</b> The <code>pointFormat</code> object does not include inherited styles. To

		 get all the applicable style definitions, use the <code>getCommonCharacterFormat()</code>

		 method of the ISelectionManager class.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[ISelectionManager#getCommonCharacterFormat()

		 

		 ]]></see>
</method>
<method name='selectionManagerOperationState' fullname='flashx.textLayout.edit:SelectionState/tlf_internal:selectionManagerOperationState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='pointFormat' fullname='flashx.textLayout.edit:SelectionState/pointFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='format' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='selectionManagerOperationState' fullname='flashx.textLayout.edit:SelectionState/tlf_internal:selectionManagerOperationState/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_pointFormat' fullname='flashx.textLayout.edit:SelectionState/private:_pointFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
<description><![CDATA[ Format that are associated with the caret position & will be applied to inserted text ]]></description>
</field>
<field name='_selectionManagerOperationState' fullname='flashx.textLayout.edit:SelectionState/private:_selectionManagerOperationState' type='Boolean' isStatic='false' isConst='false' >
</field>
<interfaceRec name='ISelectionManager' fullname='flashx.textLayout.edit:ISelectionManager' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\ISelectionManager.as' namespace='flashx.textLayout.edit' access='public' baseClasses='flashx.textLayout.edit:IInteractionEventHandler' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The ISelectionManager interface defines the interface for handling text selection.

	 

	 <p>A SelectionManager keeps track of the selected text range and handles events for a TextFlow.</p>

	 

	 <p>A selection can be either a point selection or a range selection. A point selection is the insertion point

	 and is indicated visually by drawing a cursor. A range

	 selection includes the text between an anchor point and an active point.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.TextScrap

	 ]]></see>
<see><![CDATA[flashx.textLayout.elements.TextFlow

	 

	 ]]></see>
</interfaceRec>
<method name='flushPendingOperations' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:flushPendingOperations' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Executes any pending FlowOperations. 

		 

		 <p>The execution of some editing operations, such as text insertion, is delayed 

		 until the next enterFrame event. Calling <code>flushPendingOperations()</code> causes any deferred operations to be executed 

		 immediately.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='getCommonCharacterFormat' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:getCommonCharacterFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='range' param_types='flashx.textLayout.elements:TextRange' param_defaults='null' result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[

		 Gets the character format attributes that are common to all characters in the specified text range or current selection.

		 

		 <p>Format attributes that do not have the same value for all characters in the specified element range or selection are set to 

		 <code>null</code> in the returned TextLayoutFormat instance.</p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\SelectionManager_getCommonCharacterFormat.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[range The optional range of text for which common attributes are requested. If null, the current selection is used. 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
<return><![CDATA[The common character style settings

		 

		 ]]></return>
</method>
<method name='getCommonContainerFormat' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:getCommonContainerFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='range' param_types='flashx.textLayout.elements:TextRange' param_defaults='null' result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[

		 Gets the container format attributes that are common to all containers in the specified text range or current selection.

		 

		 <p>Format attributes that do not have the same value for all containers in the specified element range or selection are set to 

		 <code>null</code> in the returned TextLayoutFormat instance.</p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\SelectionManager_getCommonContainerFormat.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[range The optional range of text for which common attributes are requested. If null, the current selection is used. 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
<return><![CDATA[The common container style settings

		 

		 ]]></return>
</method>
<method name='getCommonParagraphFormat' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:getCommonParagraphFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='range' param_types='flashx.textLayout.elements:TextRange' param_defaults='null' result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[

		 Gets the paragraph format attributes that are common to all paragraphs in the specified text range or current selection.

		 

		 <p>Format attributes that do not have the same value for all paragraphs in the specified element range or selection are set to 

		 <code>null</code> in the returned TextLayoutFormat instance.</p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\SelectionManager_getCommonParagraphFormat.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[range The optional range of text for which common attributes are requested. If null, the current selection is used. 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
<return><![CDATA[The common paragraph style settings

		 

		 ]]></return>
</method>
<method name='getSelectionState' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:getSelectionState' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[

		 Gets the SelectionState object of the current selection.

		 

		 ]]></description>
<includeExample><![CDATA[examples\SelectionManager_getSelectionState.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionState

		 

		 ]]></see>
</method>
<method name='hasSelection' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:hasSelection' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Indicates whether there is a selection. 

		 

		 <p>Returns <code>true</code> if there is either a range selection or a point selection. 

		 By default, when a selection manager is first set up, there is no selection (the start and end are -1).</p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\SelectionManager_hasSelection.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='isRangeSelection' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:isRangeSelection' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Indicates whether the selection covers a range of text.

		 

		 <p>Returns <code>true</code> if there is a selection that extends past a single position.</p> 

		 

		 ]]></description>
<includeExample><![CDATA[examples\SelectionManager_isRangeSelection.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='notifyInsertOrDelete' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:notifyInsertOrDelete' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition;length' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 Updates the selection manager when text is inserted or deleted.

		 

		 <p>Operations must call <code>notifyInsertOrDelete</code> when changing the text in the text flow. 

		 The selection manager adjusts index-based position indicators accordingly. If you create a new Operation

		 class that changes text in a text flow directly (not using another operation) your operation must call this function 

		 to keep the selection up to date.</p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\SelectionManager_notifyInsertOrDelete.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[absolutePosition	The point in the text where the change was made.

		 ]]></param>
<param><![CDATA[length A positive or negative number indicating how many characters were inserted or deleted.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='refreshSelection' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:refreshSelection' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Redisplays the selection shapes. 

		 

		 <p><b>Note:</b> You do not need to call this method directly. It is called automatically.</p>	

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='selectAll' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:selectAll' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Selects the entire flow.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='selectRange' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:selectRange' isStatic='false' isFinal='false' isOverride='false'  param_names='anchorPosition;activePosition' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Selects a range of text.

		 

		 <p>If a negative number is passed as either of the parameters, then any existing selection is

		 removed.</p>

		 

		 ]]></description>
<includeExample><![CDATA[examples\SelectionManager_setSelection.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[anchorPosition	The anchor point for the new selection, as an absolute position in the TextFlow 

		 ]]></param>
<param><![CDATA[activePosition	The active end of the new selection, as an absolute position in the TextFlow

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='setFocus' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:setFocus' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Gives the focus to the first container in the selection.

		  

		 ]]></description>
<includeExample><![CDATA[examples\SelectionManager_setFocus.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='setSelectionState' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:setSelectionState' isStatic='false' isFinal='false' isOverride='false'  param_names='state' param_types='flashx.textLayout.edit:SelectionState' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets the SelectionState object of the current selection.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionState

		 

		 ]]></see>
</method>
<method name='absoluteEnd' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:absoluteEnd/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The text position of the end of the selection, as an offset from the start of the text flow.

		  

		 <p>The absolute end is the same as either the active or the anchor point of the selection, whichever comes

		 last in the text flow.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='absoluteStart' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:absoluteStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The text position of the start of the selection, as an offset from the start of the text flow.

		  

		 <p>The absolute start is the same as either the active or the anchor point of the selection, whichever comes

		 first in the text flow.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='activePosition' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:activePosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The active point of the selection.

		 

		 <p>The <em>active</em> point is the volatile end of the selection. The active point is changed 

		 when the selection is modified. The active point can be at either the beginning 

		 or the end of the selection.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='anchorPosition' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:anchorPosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The anchor point of the selection. 

		 

		 <p>An <em>anchor</em> point is the stable end of the selection. When the selection

		 is extended, the anchor point does not change. The anchor point can be at either the beginning 

		 or the end of the selection.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='currentSelectionFormat' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:currentSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[ 

		 The current SelectionFormat object.

		 

		 <p>The current SelectionFormat object is chosen from the SelectionFormat objects assigned to the 

		 <code>unfocusedSelectionFormat</code>, <code>inactiveSelectionFormat</code> and <code>focusedSelectionFormat</code> 

		 properties based on the current state of the <code>windowActive</code> and <code>focused</code> properties.</p> 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='editingMode' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:editingMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 The editing mode. 

		 

		 <p>The editing mode indicates whether the text flow supports selection, editing, or only reading.

		 A text flow is made selectable by assigning a selection manager and editable by assigning an edit manager.

		 Constants representing the editing modes are defined in the EditingMode class.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.EditingMode

		 

		 ]]></see>
</method>
<method name='focusedSelectionFormat' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:focusedSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[

		 The SelectionFormat object used to draw the selection in a focused container. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='focused' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:focused/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Indicates whether a container in the text flow has the focus.

		 

		 <p>The <code>focused</code> property is <code>true</code> 

		 if any of the containers in the text flow has key focus.</p> 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='inactiveSelectionFormat' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:inactiveSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[

		 The SelectionFormat object used to draw the selection when it is not in the active window.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='textFlow' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:textFlow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[ 

		 The TextFlow object managed by this selection manager. 

		 

		 <p>A selection manager manages a single text flow. A selection manager can also be

		 assigned to a text flow by setting the <code>interactionManager</code> property of the

		 TextFlow object.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow#interactionManager

		 

		 ]]></see>
</method>
<method name='unfocusedSelectionFormat' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:unfocusedSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[

		 The SelectionFormat object used to draw the selection when it is not in a focused container, but is in

		 the active window.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='windowActive' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:windowActive/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Indicates whether the window associated with the text flow is active.

		 

		 <p>The <code>windowActive</code> property is <code>true</code> if the window 

		 displaying with the text flow is the active window.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='focusedSelectionFormat' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:focusedSelectionFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.edit:SelectionFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='inactiveSelectionFormat' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:inactiveSelectionFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.edit:SelectionFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='textFlow' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:textFlow/set' isStatic='false' isFinal='false' isOverride='false'  param_names='flow' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='void'>
</method>
<method name='unfocusedSelectionFormat' fullname='flashx.textLayout.edit:ISelectionManager/flashx.textLayout.edit:ISelectionManager:unfocusedSelectionFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.edit:SelectionFormat' param_defaults='undefined' result_type='void'>
</method>
<classRec name='SelectionManager' fullname='flashx.textLayout.edit:SelectionManager' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\SelectionManager.as' namespace='flashx.textLayout.edit' access='public' baseclass='Object' interfaces='flashx.textLayout.edit:ISelectionManager' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

     The SelectionManager class manages text selection in a text flow.

     

     <p>The selection manager keeps track of the selected text range, manages its formatting, 

     and can handle events affecting the selection. To allow a user to make selections in

     a text flow, assign a SelectionManager object to the <code>interactionManager</code>

     property of the flow. (To allow editing, assign an instance of the EditManager class,

     which extends SelectionManager.)</p>

     
     <p>The following table describes how the SelectionManager class handles keyboard shortcuts:</p>

     
     <table class="innertable" width="100%">

     <thead>

     <tr><th></th><th></th><th align = "center">TB,LTR</th><th align = "right"></th><th></th><th align = "center">TB,RTL</th><th></th><th></th><th align = "center">TL,LTR</th><th></th><th></th><th align = "center">RL,RTL</th><th></th></tr>

     <tr><th></th><th>none</th><th>ctrl</th><th>alt|ctrl+alt</th><th>none</th><th>ctrl</th><th>alt|ctrl+alt</th><th>none</th><th>ctrl</th><th>alt|ctrl+alt</th><th>none</th><th>ctrl</th><th>alt|ctrl+alt</th></tr>

     </thead>

     <tr><td>leftarrow</td><td>previousCharacter</td><td>previousWord</td><td>previousWord</td><td>nextCharacter</td><td>nextWord</td><td>nextWord</td><td>nextLine</td><td>endOfDocument</td><td>endOfParagraph</td><td>nextLine</td><td>endOfDocument</td><td>endOfParagraph</td></tr>

     <tr><td>uparrow</td><td>previousLine</td><td>startOfDocument</td><td>startOfParagraph</td><td>previousLine</td><td>startOfDocument</td><td>startOfParagraph</td><td>previousCharacter</td><td>previousWord</td><td>previousWord</td><td>nextCharacter</td><td>nextWord</td><td>nextWord</td></tr>

     <tr><td>rightarrow</td><td>nextCharacter</td><td>nextWord</td><td>nextWord</td><td>previousCharacter</td><td>previousWord</td><td>previousWord</td><td>previousLine</td><td>startOfDocument</td><td>startOfParagraph</td><td>previousLine</td><td>startOfDocument</td><td>startOfParagraph</td></tr>

     <tr><td>downarrow</td><td>nextLine</td><td>endOfDocument</td><td>endOfParagraph</td><td>nextLine</td><td>endOfDocument</td><td>endOfParagraph</td><td>nextCharacter</td><td>nextWord</td><td>nextWord</td><td>previousCharacter</td><td>previousWord</td><td>previousWord</td></tr>

     <tr><td>home</td><td>startOfLine</td><td>startOfDocument</td><td>startOfLine</td><td>startOfLine</td><td>startOfDocument</td><td>startOfLine</td><td>startOfLine</td><td>startOfDocument</td><td>startOfLine</td><td>startOfLine</td><td>startOfDocument</td><td>startOfLine</td></tr>

     <tr><td>end</td><td>endOfLine</td><td>endOfDocument</td><td>endOfLine</td><td>endOfLine</td><td>endOfDocument</td><td>endOfLine</td><td>endOfLine</td><td>endOfDocument</td><td>endOfLine</td><td>endOfLine</td><td>endOfDocument</td><td>endOfLine</td></tr>

     <tr><td>pagedown</td><td>nextPage</td><td>nextPage</td><td>nextPage</td><td>nextPage</td><td>nextPage</td><td>nextPage</td><td>nextPage</td><td>nextPage</td><td>nextPage</td><td>nextPage</td><td>nextPage</td><td>nextPage</td></tr>

     <tr><td>pageup</td><td>previousPage</td><td>previousPage</td><td>previousPage</td><td>previousPage</td><td>previousPage</td><td>previousPage</td><td>previousPage</td><td>previousPage</td><td>previousPage</td><td>previousPage</td><td>previousPage</td><td>previousPage</td></tr>

     </table>

     
     <p><strong>Key:</strong>

     <ul>

      <li>none = no modifier</li>

      <li>ctrl, shift, alt = modifiers</li>

      <li>alt-key and ctrl+alt-key are the same on all platforms (on some platforms alt-key does not get to the Text Layout Framework (TLF)</li>

      <li>shift key modifes to extend the active end of the selection in the specified manner</li>            

      <li>TB (top-to-bottom),RL (right-to-left) are textFlow level <code>blockProgression</code> settings</li>                        

      <li>LTR (left-to-right),RTL (right-to-left) are textFlow level <code>direction</code> settings</li>                 

      <li>next and prev in logical order in the textFlow - the effect in RTL text is that the selection moves in the physical direction</li>

     </ul></p>

     

     ]]></description>
<includeExample><![CDATA[examples\SelectionManager_example.as -noswf

     

     ]]></includeExample>
<langversion><![CDATA[3.0

     ]]></langversion>
<playerversion><![CDATA[Flash 10

     ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

     ]]></playerversion>
<see><![CDATA[EditManager

     ]]></see>
<see><![CDATA[flashx.elements.TextFlow

     

     ]]></see>
</classRec>
<method name='SelectionManager' fullname='flashx.textLayout.edit:SelectionManager/SelectionManager' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ 

         

         Creates a SelectionManager object.

         

         <p>Assign a SelectionManager object to the <code>interactionManager</code> property of

         a text flow to enable text selection.</p>

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='activateHandler' fullname='flashx.textLayout.edit:SelectionManager/activateHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#activateHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='addSelectionShapes' fullname='flashx.textLayout.edit:SelectionManager/private:addSelectionShapes' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='atBeginningWordPos' fullname='flashx.textLayout.edit:SelectionManager/private:atBeginningWordPos' isStatic='false' isFinal='false' isOverride='false'  param_names='activePara;pos' param_types='flashx.textLayout.elements:ParagraphElement;int' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='checkForDisplayed' fullname='flashx.textLayout.edit:SelectionManager/private:checkForDisplayed' isStatic='true' isFinal='false' isOverride='false'  param_names='container' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='clearSelectionShapes' fullname='flashx.textLayout.edit:SelectionManager/private:clearSelectionShapes' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clear' fullname='flashx.textLayout.edit:SelectionManager/private:clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Clear any active selections.

         ]]></description>
</method>
<method name='cloneSelectionFormatState' fullname='flashx.textLayout.edit:SelectionManager/tlf_internal:cloneSelectionFormatState' isStatic='false' isFinal='false' isOverride='false'  param_names='oldISelectionManager' param_types='flashx.textLayout.edit:ISelectionManager' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computeSelectionIndexInContainer' fullname='flashx.textLayout.edit:SelectionManager/private:computeSelectionIndexInContainer' isStatic='true' isFinal='false' isOverride='false'  param_names='textFlow;controller;localX;localY' param_types='flashx.textLayout.elements:TextFlow;flashx.textLayout.container:ContainerController;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='int'>
</method>
<method name='computeSelectionIndexInLine' fullname='flashx.textLayout.edit:SelectionManager/private:computeSelectionIndexInLine' isStatic='true' isFinal='false' isOverride='false'  param_names='textFlow;textLine;localX;localY' param_types='flashx.textLayout.elements:TextFlow;flash.text.engine:TextLine;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='int'>
</method>
<method name='computeSelectionIndex' fullname='flashx.textLayout.edit:SelectionManager/tlf_internal:computeSelectionIndex' isStatic='true' isFinal='false' isOverride='false'  param_names='textFlow;target;currentTarget;localX;localY' param_types='flashx.textLayout.elements:TextFlow;Object;Object;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createMark' fullname='flashx.textLayout.edit:SelectionManager/tlf_internal:createMark' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:Mark'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='deactivateHandler' fullname='flashx.textLayout.edit:SelectionManager/deactivateHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#deactivateHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.edit:SelectionManager/doOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='op' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Perform a SelectionManager operation - these may never modify the flow but clients still are able to cancel them. 

          

          ]]></description>
<langversion><![CDATA[3.0

          ]]></langversion>
<playerversion><![CDATA[Flash 10

          ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

          ]]></playerversion>
</method>
<method name='editHandler' fullname='flashx.textLayout.edit:SelectionManager/editHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#editHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='enterFrameHandler' fullname='flashx.textLayout.edit:SelectionManager/protected:enterFrameHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='flushPendingOperations' fullname='flashx.textLayout.edit:SelectionManager/flushPendingOperations' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#flushPendingOperations()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='focusChangeHandler' fullname='flashx.textLayout.edit:SelectionManager/focusChangeHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#focusChangeHandler()

         ]]></copy>
</method>
<method name='focusInHandler' fullname='flashx.textLayout.edit:SelectionManager/focusInHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#focusInHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='focusOutHandler' fullname='flashx.textLayout.edit:SelectionManager/focusOutHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#focusOutHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='getCommonCharacterFormat' fullname='flashx.textLayout.edit:SelectionManager/getCommonCharacterFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='range' param_types='flashx.textLayout.elements:TextRange' param_defaults='null' result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[

         ]]></description>
<copy><![CDATA[ISelectionManager#getCommonCharacterFormat()

         

         ]]></copy>
<includeExample><![CDATA[examples\SelectionManager_getCommonCharacterFormat.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='getCommonContainerFormat' fullname='flashx.textLayout.edit:SelectionManager/getCommonContainerFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='range' param_types='flashx.textLayout.elements:TextRange' param_defaults='null' result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[

         ]]></description>
<copy><![CDATA[ISelectionManager#getCommonContainerFormat()

         

         ]]></copy>
<includeExample><![CDATA[examples\SelectionManager_getCommonContainerFormat.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='getCommonParagraphFormat' fullname='flashx.textLayout.edit:SelectionManager/getCommonParagraphFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='range' param_types='flashx.textLayout.elements:TextRange' param_defaults='null' result_type='flashx.textLayout.formats:TextLayoutFormat'>
<description><![CDATA[

         ]]></description>
<copy><![CDATA[ISelectionManager#getCommonParagraphFormat()

         

         ]]></copy>
<includeExample><![CDATA[examples\SelectionManager_getCommonParagraphFormat.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='getSelectionState' fullname='flashx.textLayout.edit:SelectionManager/getSelectionState' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[

         ]]></description>
<copy><![CDATA[ISelectionManager#getSelectionState()

         

         ]]></copy>
<includeExample><![CDATA[examples\SelectionManager_getSelectionState.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionState

         ]]></see>
</method>
<method name='handleDownArrow' fullname='flashx.textLayout.edit:SelectionManager/private:handleDownArrow' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='handleEndKey' fullname='flashx.textLayout.edit:SelectionManager/private:handleEndKey' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='handleHomeKey' fullname='flashx.textLayout.edit:SelectionManager/private:handleHomeKey' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='handleKeyEvent' fullname='flashx.textLayout.edit:SelectionManager/private:handleKeyEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='handleLeftArrow' fullname='flashx.textLayout.edit:SelectionManager/private:handleLeftArrow' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='handleMouseEventForSelection' fullname='flashx.textLayout.edit:SelectionManager/tlf_internal:handleMouseEventForSelection' isStatic='false' isFinal='false' isOverride='false'  param_names='event;allowExtend' param_types='flash.events:MouseEvent;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='handlePageDownKey' fullname='flashx.textLayout.edit:SelectionManager/private:handlePageDownKey' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='handlePageUpKey' fullname='flashx.textLayout.edit:SelectionManager/private:handlePageUpKey' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='handleRightArrow' fullname='flashx.textLayout.edit:SelectionManager/private:handleRightArrow' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='handleUpArrow' fullname='flashx.textLayout.edit:SelectionManager/private:handleUpArrow' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='hasSelection' fullname='flashx.textLayout.edit:SelectionManager/hasSelection' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

          ]]></description>
<copy><![CDATA[ISelectionManager#hasSelection()

         

         ]]></copy>
<includeExample><![CDATA[examples\SelectionManager_hasSelection.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='imeStartCompositionHandler' fullname='flashx.textLayout.edit:SelectionManager/imeStartCompositionHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:IMEEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#imeStartCompositionHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

        ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='internalSetSelection' fullname='flashx.textLayout.edit:SelectionManager/private:internalSetSelection' isStatic='false' isFinal='false' isOverride='false'  param_names='root;anchorPosition;activePosition;format' param_types='flashx.textLayout.elements:TextFlow;int;int;flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined;undefined;undefined;null' result_type='void'>
</method>
<method name='isRangeSelection' fullname='flashx.textLayout.edit:SelectionManager/isRangeSelection' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

          ]]></description>
<copy><![CDATA[ISelectionManager#isRangeSelection()

         

         ]]></copy>
<includeExample><![CDATA[examples\SelectionManager_isRangeSelection.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='keyDownHandler' fullname='flashx.textLayout.edit:SelectionManager/keyDownHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#keyDownHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='keyFocusChangeHandler' fullname='flashx.textLayout.edit:SelectionManager/keyFocusChangeHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#keyFocusChangeHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

          ]]></langversion>
<param><![CDATA[event   the FocusChange event

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='keyUpHandler' fullname='flashx.textLayout.edit:SelectionManager/keyUpHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#keyUpHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

          ]]></langversion>
<param><![CDATA[event   the keyUp event

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='locateNearestColumn' fullname='flashx.textLayout.edit:SelectionManager/private:locateNearestColumn' isStatic='true' isFinal='false' isOverride='false'  param_names='container;localX;localY;wm;direction' param_types='flashx.textLayout.container:ContainerController;Number;Number;String;String' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='int'>
</method>
<method name='menuSelectHandler' fullname='flashx.textLayout.edit:SelectionManager/menuSelectHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:ContextMenuEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#menuSelectHandler()

         ]]></copy>
</method>
<method name='mouseDoubleClickHandler' fullname='flashx.textLayout.edit:SelectionManager/mouseDoubleClickHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#mouseDoubleClickHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='mouseDownHandler' fullname='flashx.textLayout.edit:SelectionManager/mouseDownHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

          ]]></description>
<copy><![CDATA[IInteractionEventHandler#mouseDownHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='mouseMoveHandler' fullname='flashx.textLayout.edit:SelectionManager/mouseMoveHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#mouseMoveHandler()

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='mouseOutHandler' fullname='flashx.textLayout.edit:SelectionManager/mouseOutHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#mouseOutHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='mouseOverHandler' fullname='flashx.textLayout.edit:SelectionManager/mouseOverHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#mouseOverHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='mouseUpHandler' fullname='flashx.textLayout.edit:SelectionManager/mouseUpHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#mouseUpHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='mouseWheelHandler' fullname='flashx.textLayout.edit:SelectionManager/mouseWheelHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#mouseWheelHandler()

         ]]></copy>
</method>
<method name='notifyInsertOrDelete' fullname='flashx.textLayout.edit:SelectionManager/notifyInsertOrDelete' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition;length' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[ISelectionManager#notifyInsertOrDelete()

         

         ]]></copy>
<includeExample><![CDATA[examples\SelectionManager_notifyInsertOrDelete.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='refreshSelection' fullname='flashx.textLayout.edit:SelectionManager/refreshSelection' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

          ]]></description>
<copy><![CDATA[ISelectionManager#refreshSelection()

         

         ]]></copy>
<langversion><![CDATA[3.0

        ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='removeMark' fullname='flashx.textLayout.edit:SelectionManager/tlf_internal:removeMark' isStatic='false' isFinal='false' isOverride='false'  param_names='mark' param_types='flashx.textLayout.edit:Mark' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='selectAll' fullname='flashx.textLayout.edit:SelectionManager/selectAll' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

          ]]></description>
<copy><![CDATA[ISelectionManager#selectAll

         

         ]]></copy>
<langversion><![CDATA[3.0

         

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.IFlowComposer

         ]]></see>
</method>
<method name='selectRange' fullname='flashx.textLayout.edit:SelectionManager/selectRange' isStatic='false' isFinal='false' isOverride='false'  param_names='anchorPosition;activePosition' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

          ]]></description>
<copy><![CDATA[ISelectionManager#selectRange

         

         ]]></copy>
<includeExample><![CDATA[examples\SelectionManager_selectRange.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.IFlowComposer

         ]]></see>
</method>
<method name='selectionChanged' fullname='flashx.textLayout.edit:SelectionManager/tlf_internal:selectionChanged' isStatic='false' isFinal='false' isOverride='false'  param_names='doDispatchEvent;resetPointFormat' param_types='Boolean;Boolean' param_defaults='true;true' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[doDispatchEvent   true if a selection changed event will be sent

         ]]></param>
<param><![CDATA[resetPointFormat  true if the attributes associated with the caret should be discarded

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<private><![CDATA[]]></private>
</method>
<method name='selectionPoint' fullname='flashx.textLayout.edit:SelectionManager/private:selectionPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='currentTarget;target;localX;localY;extendSelection' param_types='Object;flash.display:InteractiveObject;Number;Number;Boolean' param_defaults='undefined;undefined;undefined;undefined;false' result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[

         Gets the SelectionState at the specified mouse position.

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[currentTarget     The object that is actively processing the Event object with an event listener.

         ]]></param>
<param><![CDATA[target            The InteractiveObject instance under the pointing device. The target is not always the object in the display list that registered the event listener. Use the currentTarget property to access the object in the display list that is currently processing the event.

         ]]></param>
<param><![CDATA[localX            The horizontal coordinate at which the event occurred relative to the containing sprite.

         ]]></param>
<param><![CDATA[localY            The vertical coordinate at which the event occurred relative to the containing sprite.

         ]]></param>
<param><![CDATA[extendSelection   Indicates that only activeIndex should move

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[the resulting SelectionState

         ]]></return>
<see><![CDATA[flashx.textLayout.edit.SelectionState

         ]]></see>
</method>
<method name='setFocus' fullname='flashx.textLayout.edit:SelectionManager/setFocus' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

          ]]></description>
<copy><![CDATA[ISelectionManager#setFocus()

         

         ]]></copy>
<includeExample><![CDATA[examples\SelectionManager_setFocus.as -noswf

         

        ]]></includeExample>
<langversion><![CDATA[3.0

        ]]></langversion>
<playerversion><![CDATA[Flash 10

        ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='setMouseCursor' fullname='flashx.textLayout.edit:SelectionManager/protected:setMouseCursor' isStatic='false' isFinal='false' isOverride='false'  param_names='cursor' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         Set the Mouse cursor. 

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[cursor    New cursor value, MouseCursor.AUTO if mouse is going off text, MouseCursor.IBEAM if mouse is going into text

         

         ]]></param>
<playerversion><![CDATA[Flash 10.2

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
</method>
<method name='setNewSelectionPoint' fullname='flashx.textLayout.edit:SelectionManager/tlf_internal:setNewSelectionPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='currentTarget;target;localX;localY;extendSelection' param_types='Object;flash.display:InteractiveObject;Number;Number;Boolean' param_defaults='undefined;undefined;undefined;undefined;false' result_type='Boolean'>
<description><![CDATA[ initialize a new point selection at click point ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setSelectionFormatState' fullname='flashx.textLayout.edit:SelectionManager/tlf_internal:setSelectionFormatState' isStatic='false' isFinal='false' isOverride='false'  param_names='selFormatState' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<see><![CDATA[flashx.textLayout.edit.SelectionFormatState ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='setSelectionState' fullname='flashx.textLayout.edit:SelectionManager/setSelectionState' isStatic='false' isFinal='false' isOverride='false'  param_names='sel' param_types='flashx.textLayout.edit:SelectionState' param_defaults='undefined' result_type='void'>
<description><![CDATA[

         ]]></description>
<copy><![CDATA[ISelectionManager#setSelectionState()

         

         ]]></copy>
<langversion><![CDATA[3.0

         

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionState

         ]]></see>
</method>
<method name='softKeyboardActivatingHandler' fullname='flashx.textLayout.edit:SelectionManager/softKeyboardActivatingHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#softKeyboardActivatingHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10.2

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='textInputHandler' fullname='flashx.textLayout.edit:SelectionManager/textInputHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TextEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         ]]></description>
<copy><![CDATA[IInteractionEventHandler#textInputHandler()

         

         ]]></copy>
<langversion><![CDATA[3.0

        ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='updateSelectionAndShapes' fullname='flashx.textLayout.edit:SelectionManager/private:updateSelectionAndShapes' isStatic='false' isFinal='false' isOverride='false'  param_names='tf;begIdx;endIdx' param_types='flashx.textLayout.elements:TextFlow;int;int' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

         Refreshes and displays TextFlow selection defined by a beginning and ending index.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='absoluteEnd' fullname='flashx.textLayout.edit:SelectionManager/absoluteEnd/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

          ]]></description>
<copy><![CDATA[ISelectionManager#absoluteEnd

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='absoluteStart' fullname='flashx.textLayout.edit:SelectionManager/absoluteStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

          ]]></description>
<copy><![CDATA[ISelectionManager#absoluteStart

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='activePosition' fullname='flashx.textLayout.edit:SelectionManager/activePosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

          ]]></description>
<copy><![CDATA[ISelectionManager#activePosition

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='anchorPosition' fullname='flashx.textLayout.edit:SelectionManager/anchorPosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

          ]]></description>
<copy><![CDATA[ISelectionManager#anchorPosition

         ]]></copy>
</method>
<method name='currentSelectionFormat' fullname='flashx.textLayout.edit:SelectionManager/currentSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[

          ]]></description>
<copy><![CDATA[ISelectionManager#currentSelectionFormat

         

         ]]></copy>
<langversion><![CDATA[3.0

         

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat

         ]]></see>
</method>
<method name='editingMode' fullname='flashx.textLayout.edit:SelectionManager/editingMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

          ]]></description>
<copy><![CDATA[ISelectionManager#editingMode

         

         ]]></copy>
<langversion><![CDATA[3.0

         

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditingMode

         ]]></see>
</method>
<method name='focusedSelectionFormat' fullname='flashx.textLayout.edit:SelectionManager/focusedSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[

         ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='focused' fullname='flashx.textLayout.edit:SelectionManager/focused/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

          ]]></description>
<copy><![CDATA[ISelectionManager#focused

         

         ]]></copy>
<langversion><![CDATA[3.0

        ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='inactiveSelectionFormat' fullname='flashx.textLayout.edit:SelectionManager/inactiveSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[

         ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='pointFormat' fullname='flashx.textLayout.edit:SelectionManager/protected:pointFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

         The format that will be applied to inserted text. 

         

         TBD: pointFormat needs to be extended to remember user styles and "undefine" of formats from calls to IEditManager.undefineFormat with leafFormat values on a point selection.

         ]]></description>
</method>
<method name='selectionFormatState' fullname='flashx.textLayout.edit:SelectionManager/tlf_internal:selectionFormatState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ ]]></description>
<see><![CDATA[flashx.textLayout.edit.SelectionFormatState ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='textFlow' fullname='flashx.textLayout.edit:SelectionManager/textFlow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[

         The TextFlow object managed by this selection manager. 

         

         <p>A selection manager manages a single text flow. A selection manager can also be

         assigned to a text flow by setting the <code>interactionManager</code> property of the

         TextFlow object.</p>

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow#interactionManager

         

         ]]></see>
</method>
<method name='unfocusedSelectionFormat' fullname='flashx.textLayout.edit:SelectionManager/unfocusedSelectionFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[

          ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='windowActive' fullname='flashx.textLayout.edit:SelectionManager/windowActive/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

          ]]></description>
<copy><![CDATA[ISelectionManager#windowActive

         

         ]]></copy>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='focusedSelectionFormat' fullname='flashx.textLayout.edit:SelectionManager/focusedSelectionFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.edit:SelectionFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

          ]]></description>
<copy><![CDATA[ISelectionManager#focusedSelectionFormat

         

         ]]></copy>
<langversion><![CDATA[3.0

         

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat

         ]]></see>
</method>
<method name='inactiveSelectionFormat' fullname='flashx.textLayout.edit:SelectionManager/inactiveSelectionFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.edit:SelectionFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

          ]]></description>
<copy><![CDATA[ISelectionManager#inactiveSelectionFormat

         

         ]]></copy>
<langversion><![CDATA[3.0

         

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat

         ]]></see>
</method>
<method name='textFlow' fullname='flashx.textLayout.edit:SelectionManager/textFlow/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='void'>
</method>
<method name='unfocusedSelectionFormat' fullname='flashx.textLayout.edit:SelectionManager/unfocusedSelectionFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.edit:SelectionFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[

          ]]></description>
<copy><![CDATA[ISelectionManager#unfocusedSelectionFormat

         

         ]]></copy>
<langversion><![CDATA[3.0

         

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.SelectionFormat

         ]]></see>
</method>
<field name='_focusedSelectionFormat' fullname='flashx.textLayout.edit:SelectionManager/private:_focusedSelectionFormat' type='flashx.textLayout.edit:SelectionFormat' isStatic='false' isConst='false' >
</field>
<field name='_inactiveSelectionFormat' fullname='flashx.textLayout.edit:SelectionManager/private:_inactiveSelectionFormat' type='flashx.textLayout.edit:SelectionFormat' isStatic='false' isConst='false' >
</field>
<field name='_isActive' fullname='flashx.textLayout.edit:SelectionManager/private:_isActive' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_mouseOverSelectionArea' fullname='flashx.textLayout.edit:SelectionManager/private:_mouseOverSelectionArea' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_pointFormat' fullname='flashx.textLayout.edit:SelectionManager/private:_pointFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_selFormatState' fullname='flashx.textLayout.edit:SelectionManager/private:_selFormatState' type='String' isStatic='false' isConst='false' defaultValue='unfocused' >
</field>
<field name='_textFlow' fullname='flashx.textLayout.edit:SelectionManager/private:_textFlow' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
<description><![CDATA[ The TextFlow of the selection. ]]></description>
</field>
<field name='_unfocusedSelectionFormat' fullname='flashx.textLayout.edit:SelectionManager/private:_unfocusedSelectionFormat' type='flashx.textLayout.edit:SelectionFormat' isStatic='false' isConst='false' >
</field>
<field name='activeMark' fullname='flashx.textLayout.edit:SelectionManager/private:activeMark' type='flashx.textLayout.edit:Mark' isStatic='false' isConst='false' >
<description><![CDATA[ Active end of the current selection, as an index into the TextFlow. ]]></description>
</field>
<field name='allowOperationMerge' fullname='flashx.textLayout.edit:SelectionManager/protected:allowOperationMerge' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[

          ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='anchorMark' fullname='flashx.textLayout.edit:SelectionManager/private:anchorMark' type='flashx.textLayout.edit:Mark' isStatic='false' isConst='false' >
<description><![CDATA[ Anchor point of the current selection, as an index into the TextFlow. ]]></description>
</field>
<field name='ignoreNextTextEvent' fullname='flashx.textLayout.edit:SelectionManager/protected:ignoreNextTextEvent' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='marks' fullname='flashx.textLayout.edit:SelectionManager/private:marks' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<interfaceRec name='IEditManager' fullname='flashx.textLayout.edit:IEditManager' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\IEditManager.as' namespace='flashx.textLayout.edit' access='public' baseClasses='flashx.textLayout.edit:ISelectionManager' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

     IEditManager defines the interface for handling edit operations of a text flow.

     

     <p>To enable text flow editing, assign an IEditManager instance to the <code>interactionManager</code> 

     property of the TextFlow object. The edit manager handles changes to the text (such as insertions, 

     deletions, and format changes). Changes are reversible if the edit manager has an undo manager. The edit

     manager triggers the recomposition and display of the text flow, as necessary.</p>

     

     ]]></description>
<langversion><![CDATA[3.0

     

     ]]></langversion>
<playerversion><![CDATA[Flash 10

     ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

     ]]></playerversion>
<see><![CDATA[EditManager

     ]]></see>
<see><![CDATA[flashx.textLayout.elements.TextFlow

     ]]></see>
<see><![CDATA[flashx.undo.UndoManager

     

     ]]></see>
<metadata>
	<Exclude owner='flashx.textLayout.edit:IEditManager' name='delayedOperations' kind='property' >
	</Exclude>
</metadata>
</interfaceRec>
<method name='applyContainerFormat' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:applyContainerFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='format;operationState' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

         Applies container styles to any containers in the selection.

         

         <p>Any style properties in the format object that are <code>null</code> are left unchanged.</p> 

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_applyContainerFormat.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[format    The format to apply to the containers in the range

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='applyFormatToElement' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:applyFormatToElement' isStatic='false' isFinal='false' isOverride='false'  param_names='targetElement;format;relativeStart;relativeEnd;operationState' param_types='flashx.textLayout.elements:FlowElement;flashx.textLayout.formats:ITextLayoutFormat;int;int;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;0;-1;null' result_type='void'>
<description><![CDATA[ 

         Applies styles to the specified element.

         

         <p>Any style properties in the format object that are <code>null</code> are left unchanged.

         Only styles that are relevant to the specified element are applied.</p> 

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_applyFormatToElement.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[targetElement The element to which the styles are applied.

         ]]></param>
<param><![CDATA[format  The format containing the styles to apply.

         ]]></param>
<param><![CDATA[relativeStart An offset from the beginning of the element at which to split the element when assigning the new formatting.

         ]]></param>
<param><![CDATA[relativeEnd An offset from the beginning of the element at which to split the element when applying the new formatting.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='applyFormat' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:applyFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='leafFormat;paragraphFormat;containerFormat;operationState' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;undefined;null' result_type='void'>
<description><![CDATA[ 

         Changes the formats of the specified (or current) selection.

         

         <p>Executes an undoable operation that applies the new formats.

         Only style attributes set for the TextLayoutFormat objects are applied.

         Undefined attributes in the format objects are not changed.

         </p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_applyFormat.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[leafFormat    The format to apply to leaf elements such as spans and inline graphics.

         ]]></param>
<param><![CDATA[paragraphFormat   The format to apply to paragraph elements.

         ]]></param>
<param><![CDATA[containerFormat   The format to apply to the containers.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         
         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='applyLeafFormat' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:applyLeafFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='format;operationState' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

         Changes the format applied to the leaf elements in the 

         specified (or current) selection.

         

         <p>Executes an undoable operation that applies the new format to leaf elements such as

         SpanElement and InlineGraphicElement objects.

         Only style attributes set for the TextLayoutFormat objects are applied.

         Undefined attributes in the format object are changed.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_applyLeafFormat.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[format    The format to apply.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='applyLink' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:applyLink' isStatic='false' isFinal='false' isOverride='false'  param_names='href;target;extendToLinkBoundary;operationState' param_types='String;String;Boolean;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null;false;null' result_type='flashx.textLayout.elements:LinkElement'>
<description><![CDATA[ 

         Transforms a selection into a link, or a link into normal text.

         

         <p>Executes an undoable operation that creates or removes the link.</p>

         

          <p>If a <code>target</code> parameter is specified, it must be one of the following values:</p>

         <ul>

          <li>"_self"</li>

          <li>"_blank"</li>

          <li>"_parent"</li>

          <li>"_top"</li>

         </ul>

         <p>In browser-hosted runtimes, a target of "_self" replaces the current html page.  

         So, if the SWF content containing the link is in a page within

         a frame or frameset, the linked content loads within that frame.  If the page 

         is at the top level, the linked content opens to replace the original page.  

         A target of "_blank" opens a new browser window with no name.  

         A target of "_parent" replaces the parent of the html page containing the SWF content.  

         A target of "_top" replaces the top-level page in the current browser window.</p>

         

         <p>In other runtimes, such as Adobe AIR, the link opens in the user's default browser and the

         <code>target</code> parameter is ignored.</p>

         

         <p>The <code>extendToLinkBoundary</code> parameter determines how the edit manager 

         treats a selection that intersects with one or more existing links. If the parameter is 

         <code>true</code>, then the operation is applied as a unit to the selection and the

         whole text of the existing links. Thus, a single link is created that spans from

         the beginning of the first link intersected to the end of the last link intersected.

         In contrast, if <code>extendToLinkBoundary</code> were <code>false</code> in this situation, 

         the existing partially selected links would be split into two links.</p>

         
         ]]></description>
<includeExample><![CDATA[examples\EditManager_applyLink.as -noswf

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[href The uri referenced by the link.

         ]]></param>
<param><![CDATA[target The target browser window of the link.

         ]]></param>
<param><![CDATA[extendToLinkBoundary Specifies whether to consolidate selection with any overlapping existing links, and then apply the change.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The LinkElement that was created.

         

         ]]></return>
<see><![CDATA[flashx.textLayout.elements.LinkElement

         

         ]]></see>
</method>
<method name='applyParagraphFormat' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:applyParagraphFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='format;operationState' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

         Applies paragraph styles to any paragraphs in the selection.

         

         <p>Any style properties in the format object that are <code>null</code> are left unchanged.</p> 

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_applyParagraphFormat.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[format The format to apply to the selected paragraphs.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='applyTCY' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:applyTCY' isStatic='false' isFinal='false' isOverride='false'  param_names='tcyOn;operationState' param_types='Boolean;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='flashx.textLayout.elements:TCYElement'>
<description><![CDATA[ 

         Transforms text into a TCY run, or a TCY run into non-TCY text. 

         

         <p>TCY, or tate-chu-yoko, causes text to draw horizontally within a vertical line, and is 

         used to make small blocks of non-Japanese text or numbers, such as dates, more readable in vertical text.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_applyTCY.as -noswf

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[tcyOn Set to <code>true</code> to apply TCY to a text range, <code>false</code> to remove TCY. 

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The TCYElement that was created.

         

         ]]></return>
<see><![CDATA[flashx.textLayout.elements.TCYElement

         

         ]]></see>
</method>
<method name='beginCompositeOperation' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:beginCompositeOperation' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

         Begins a new group of operations. 

         

         <p>All operations executed after the call to <code>beginCompositeOperation()</code>, and before the 

         matching call to <code>endCompositeOperation()</code> are executed and grouped together as a single 

         operation that can be undone as a unit.</p> 

         

         <p>A <code>beginCompositeOperation</code>/<code>endCompositeOperation</code> block can be nested inside another 

         <code>beginCompositeOperation</code>/<code>endCompositeOperation</code> block.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_beginCompositeOperation.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.IEditManager.endCompositeOperation

         

         ]]></see>
</method>
<method name='changeElementID' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:changeElementID' isStatic='false' isFinal='false' isOverride='false'  param_names='newID;targetElement;relativeStart;relativeEnd;operationState' param_types='String;flashx.textLayout.elements:FlowElement;int;int;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;0;-1;null' result_type='void'>
<description><![CDATA[

        Changes the ID of an element.

        

         <p>If the <code>relativeStart</code> or <code>relativeEnd</code> parameters are set (to

         anything other than the default values), then the element is split. The parts of the element

         outside this range retain the original ID. Setting both the <code>relativeStart</code> and 

         <code>relativeEnd</code> parameters creates elements with duplicate IDs.</p>

         

        ]]></description>
<includeExample><![CDATA[examples\EditManager_changeElementID.as -noswf

         

        ]]></includeExample>
<langversion><![CDATA[3.0 

        ]]></langversion>
<param><![CDATA[newID The new ID value.

        ]]></param>
<param><![CDATA[targetElement The element to modify.

        ]]></param>
<param><![CDATA[relativeStart An offset from the beginning of the element at which to split the element when assigning the new ID.

        ]]></param>
<param><![CDATA[relativeEnd An offset from the beginning of the element at which to split the element when assigning the new ID.

        ]]></param>
<param><![CDATA[operationState Specifies the selection to restore when undoing this operation; 

        if <code>null</code>, the operation saves the current selection.

        

         ]]></param>
<playerversion><![CDATA[Flash 10

        ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

        ]]></playerversion>
</method>
<method name='changeStyleName' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:changeStyleName' isStatic='false' isFinal='false' isOverride='false'  param_names='newName;targetElement;relativeStart;relativeEnd;operationState' param_types='String;flashx.textLayout.elements:FlowElement;int;int;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;0;-1;null' result_type='void'>
<description><![CDATA[

        Changes the styleName of an element or part of an element.

         

         <p>If the <code>relativeStart</code> or <code>relativeEnd</code> parameters are set (to

         anything other than the default values), then the element is split. The parts of the element

         outside this range retain the original style.</p>

         

        ]]></description>
<includeExample><![CDATA[examples\EditManager_changeStyleName.as -noswf

        ]]></includeExample>
<langversion><![CDATA[3.0 

        ]]></langversion>
<param><![CDATA[newName The name of the new style.

        ]]></param>
<param><![CDATA[targetElement Specifies the element to change.

        ]]></param>
<param><![CDATA[relativeStart An offset from the beginning of the element at which to split the element when assigning the new style.

        ]]></param>
<param><![CDATA[relativeEnd An offset from the end of the element at which to split the element when assigning the new style.

        ]]></param>
<param><![CDATA[operationState Specifies the selection to restore when undoing this operation; 

        if <code>null</code>, the operation saves the current selection.

        

         ]]></param>
<playerversion><![CDATA[Flash 10

        ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

        ]]></playerversion>
<metadata>
	<Deprecated owner='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:changeStyleName' replacement='applyFormatToElement' since='2.0' >
	</Deprecated>
</metadata>
</method>
<method name='changeTypeName' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:changeTypeName' isStatic='false' isFinal='false' isOverride='false'  param_names='newName;targetElement;relativeStart;relativeEnd;operationState' param_types='String;flashx.textLayout.elements:FlowElement;int;int;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;0;-1;null' result_type='void'>
<description><![CDATA[

         Changes the typeName of an element or part of an element.

         

         <p>If the <code>relativeStart</code> or <code>relativeEnd</code> parameters are set (to

         anything other than the default values), then the element is split. The parts of the element

         outside this range retain the original style.</p>

         

         ]]></description>
<langversion><![CDATA[3.0 

         ]]></langversion>
<param><![CDATA[newName The name of the new type.

         ]]></param>
<param><![CDATA[targetElement Specifies the element to change.

         ]]></param>
<param><![CDATA[relativeStart An offset from the beginning of the element at which to split the element when assigning the new style

         ]]></param>
<param><![CDATA[relativeEnd An offset from the end of the element at which to split the element when assigning the new style

         ]]></param>
<param><![CDATA[operationState    Specifies the selection to restore when undoing this operation; 

         if <code>null</code>, the operation saves the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='clearFormatOnElement' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:clearFormatOnElement' isStatic='false' isFinal='false' isOverride='false'  param_names='targetElement;format;operationState' param_types='flashx.textLayout.elements:FlowElement;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;null' result_type='void'>
<description><![CDATA[ 

         Undefines styles to the specified element.

         

         <p>Any style properties in the format object that are <code>undefined</code> are left unchanged.

         Any styles that are defined in the specififed format are undefined on the specified element.</p> 

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[targetElement The element to which the styles are applied.

         ]]></param>
<param><![CDATA[format  The format containing the styles to undefine.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='clearFormat' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:clearFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='leafFormat;paragraphFormat;containerFormat;operationState' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;undefined;null' result_type='void'>
<description><![CDATA[ 

         Undefines formats of the specified (or current) selection.

         

         <p>Executes an undoable operation that undefines the specified formats.

         Only style attributes set for the TextLayoutFormat objects are applied.

         Undefined attributes in the format objects are not changed.

         </p>

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[leafFormat     The format whose set values indicate properties to undefine to LeafFlowElement objects in the selected range.

         ]]></param>
<param><![CDATA[paragraphFormat The format whose set values indicate properties to undefine to ParagraphElement objects in the selected range.

         ]]></param>
<param><![CDATA[containerFormat The format whose set values indicate properties to undefine to ContainerController objects in the selected range.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='createDiv' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:createDiv' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;format;operationState' param_types='flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='null;null;null' result_type='flashx.textLayout.elements:DivElement'>
<description><![CDATA[ Creates a new DivElement that contains the entire range specified in the operationState at the lowest

         common parent element that contains both the start and end points of the range. If the start and end

         points are the same, a new DivElement is created at that position with a single child paragraph.

         

         ]]></description>
<langversion><![CDATA[3.0

          ]]></langversion>
<param><![CDATA[parent    Specifies a parent element for the new DivElement.

         If <code>null</code> the new parent will be lowest level that contains the SelectionState.

         ]]></param>
<param><![CDATA[format    Formatting attributes to apply to the new DivElement.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The new DivElement that was created.

         

         ]]></return>
</method>
<method name='createList' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:createList' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;format;operationState' param_types='flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='null;null;null' result_type='flashx.textLayout.elements:ListElement'>
<description><![CDATA[ Creates a new ListElement that contains the entire range specified in the operationState at the lowest

         common parent element that contains both the start and end points of the range. Each paragraph within the 

         range will become a ListItemElement in the new ListElement. If the start and end

         points are the same, a new ListElement is created at that position with a single ListItemElement child.

         

         ]]></description>
<langversion><![CDATA[3.0

          ]]></langversion>
<param><![CDATA[parent Optionally specifies a parent element for the new ListElement.  

         If <code>null</code> the new parent will be lowest level that contains the SelectionState.

         ]]></param>
<param><![CDATA[format Formatting attributes to apply to the new ListElement.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The new ListElement that was created.

         

         ]]></return>
</method>
<method name='createSubParagraphGroup' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:createSubParagraphGroup' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;format;operationState' param_types='flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='null;null;null' result_type='flashx.textLayout.elements:SubParagraphGroupElement'>
<description><![CDATA[ Creates a new SubParagraphGroupElement that contains the entire range specified in the operationState at the lowest

         common parent element that contains both the start and end points of the range. If the start and end

         points are the same, nothing is done.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[parent Specifies a parent element for the new SubParagraphGroupElement element.

         If <code>null</code> the new parent will be lowest level that contains the SelectionState.

         ]]></param>
<param><![CDATA[format    Formatting attributes to apply to the new SubParagraphGroupElement

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The new SubParagraphGroupElement that was created.

         

         ]]></return>
</method>
<method name='cutTextScrap' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:cutTextScrap' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='flashx.textLayout.edit:TextScrap'>
<description><![CDATA[ 

         Deletes the selected area and returns the deleted area in a TextScrap object. 

         

         <p>The resulting TextScrap can be posted to the system clipboard or used in a 

         subsequent <code>pasteTextOperation()</code> operation.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_cutTextScrap.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The TextScrap that was cut.

         

         ]]></return>
<see><![CDATA[flashx.textLayout.edit.IEditManager.pasteTextScrap

         ]]></see>
<see><![CDATA[flashx.textLayout.edit.TextClipboard.setContents

          

         ]]></see>
</method>
<method name='deleteNextCharacter' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:deleteNextCharacter' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='void'>
<description><![CDATA[ 

         Deletes a range of text, or, if a point selection is given, deletes the next character.

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_deleteNextCharacter.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[operationState    specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='deleteNextWord' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:deleteNextWord' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='void'>
<description><![CDATA[ 

         Deletes the next word.

         

         <p>If a range is selected, the first word of the range is deleted.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_deleteNextWord.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[operationState Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='deletePreviousCharacter' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:deletePreviousCharacter' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='void'>
<description><![CDATA[ 

         Deletes a range of text, or, if a point selection is given, deletes the previous character.

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_deletePreviousCharacter.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='deletePreviousWord' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:deletePreviousWord' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='void'>
<description><![CDATA[ 

         Deletes the previous word.

         

         <p>If a range is selected, the first word of the range is deleted.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_deletePreviousWord.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='deleteText' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:deleteText' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='void'>
<description><![CDATA[ 

         Deletes a range of text.

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_deleteText.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:doOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operation' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

         Executes a FlowOperation.  

          

          <p>The <code>doOperation()</code> method is called by IEditManager functions that 

          update the text flow. You do not typically need to call this function directly unless 

          you create your own custom operations.</p>

          

          <p>This function proceeds in the following steps:</p>

          <ol>

          <li>Flush any pending operations before performing this operation.</li>

          <li>Send a cancelable flowOperationBegin event.  If canceled this method returns immediately.</li>

          <li>Execute the operation.  The operation returns <code>true</code> or <code>false</code>.  

          <code>False</code> indicates that no changes were made.</li>

          <li>Push the operation onto the undo stack.</li>

          <li>Clear the redo stack.</li>

          <li>Update the display.</li>

          <li>Send a cancelable flowOperationEnd event.</li>

          </ol>

          <p>Exception handling:  If the operation throws an exception, it is caught and the error is 

          attached to the flowOperationEnd event.  If the event is not canceled the error is rethrown.</p>

          

          ]]></description>
<includeExample><![CDATA[examples\EditManager_doOperation.as -noswf

          

          ]]></includeExample>
<langversion><![CDATA[3.0

          ]]></langversion>
<param><![CDATA[operation a FlowOperation object

          

          ]]></param>
<playerversion><![CDATA[Flash 10

          ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

          ]]></playerversion>
</method>
<method name='endCompositeOperation' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:endCompositeOperation' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

         Ends a group of operations. 

         

         <p>All operations executed since the last call to <code>beginCompositeOperation()</code> are 

         grouped as a CompositeOperation that is then completed. This CompositeOperation object is added 

         to the undo stack or, if this composite operation is nested inside another composite operation, 

         added to the parent operation.</p>

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.IEditManager.beginCompositeOperation

         

         ]]></see>
</method>
<method name='insertInlineGraphic' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:insertInlineGraphic' isStatic='false' isFinal='false' isOverride='false'  param_names='source;width;height;options;operationState' param_types='Object;Object;Object;Object;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;undefined;null;null' result_type='flashx.textLayout.elements:InlineGraphicElement'>
<description><![CDATA[ 

         Inserts an image.

         

         <p>The source of the image can be a string containing a URI, URLRequest object, a Class object representing an embedded asset,

         or a DisplayObject instance.</p>

          

         <p>The width and height values can be the number of pixels, a percent, or the string, 'auto', 

         in which case the actual dimension of the graphic is used.</p>

         

         <p>Set the <code>float</code> to one of the constants defined in the Float class to specify whether

         the image should be displayed to the left or right of any text or inline with the text.</p>

         

          ]]></description>
<includeExample><![CDATA[examples\EditManager_insertInlineGraphic.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[source  Can be either a String interpreted as a uri, a Class interpreted as the class of an Embed DisplayObject, 

                          a DisplayObject instance or a URLRequest. 

          ]]></param>
<param><![CDATA[width   The width of the image to insert (number, percent, or 'auto').

          ]]></param>
<param><![CDATA[height  The height of the image to insert (number, percent, or 'auto').

          ]]></param>
<param><![CDATA[options None supported.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.InlineGraphicElement

         

         ]]></see>
</method>
<method name='insertText' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:insertText' isStatic='false' isFinal='false' isOverride='false'  param_names='text;operationState' param_types='String;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

         Inserts text.

         

         <p>Inserts the text at a position or range in the text. If the location supplied in the 

         <code>operationState</code> parameter is a range (or the parameter is <code>null</code> and the

         current selection is a range), then the text currently in the range 

         is replaced by the inserted text.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_insertText.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[text        The string to insert.

         ]]></param>
<param><![CDATA[operationState    Specifies the text in the flow to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='modifyInlineGraphic' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:modifyInlineGraphic' isStatic='false' isFinal='false' isOverride='false'  param_names='source;width;height;options;operationState' param_types='Object;Object;Object;Object;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;undefined;null;null' result_type='void'>
<description><![CDATA[ 

         Modifies an existing inline graphic.

         

         <p>Set unchanging properties to the values in the original graphic. (Modifying an existing graphic object

         is typically more efficient than deleting and recreating one.)</p>

         

          ]]></description>
<includeExample><![CDATA[examples\EditManager_modifyInlineGraphic.as -noswf

         

          ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[source  Can be either a String interpreted as a uri, a Class interpreted as the class of an Embed DisplayObject, 

                          a DisplayObject instance or a URLRequest. 

          ]]></param>
<param><![CDATA[width   The new width for the image (number or percent).

          ]]></param>
<param><![CDATA[height  The new height for the image (number or percent).

          ]]></param>
<param><![CDATA[options None supported.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

        ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.InlineGraphicElement

         

        ]]></see>
</method>
<method name='moveChildren' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:moveChildren' isStatic='false' isFinal='false' isOverride='false'  param_names='source;sourceIndex;numChildren;destination;destinationIndex;operationState' param_types='flashx.textLayout.elements:FlowGroupElement;int;int;flashx.textLayout.elements:FlowGroupElement;int;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;undefined;undefined;undefined;null' result_type='void'>
<description><![CDATA[ Move a set of FlowElements from one FlowGroupElement to another. The desinationElement must be a legal parent type for the children being moved,

         or an exception is thrown.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[source    The orginal parent of the elements to be moved.

         ]]></param>
<param><![CDATA[sourceIndex   The child index within the source of the first element to be moved.

         ]]></param>
<param><![CDATA[numChildren   The number of children being moved.

         ]]></param>
<param><![CDATA[destination   The new parent of elements after move.

         ]]></param>
<param><![CDATA[destinationIndex  The child index within the destination to where elements are moved to.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies, and to which selection returns to upon undo.  

         If <code>null</code>, the operation applies to the current selection.  If there is no current selection, this parameter must be non-null.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='overwriteText' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:overwriteText' isStatic='false' isFinal='false' isOverride='false'  param_names='text;operationState' param_types='String;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

         Overwrites the selected text.

         

         <p>If the selection is a point selection, the first character is overwritten by the new text.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_overwriteText.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[text The string to insert.

         ]]></param>
<param><![CDATA[operationState Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='pasteTextScrap' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:pasteTextScrap' isStatic='false' isFinal='false' isOverride='false'  param_names='scrapToPaste;operationState' param_types='flashx.textLayout.edit:TextScrap;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

         Pastes the TextScrap into the selected area.

         

         <p>If a range of text is specified, the text 

         in the range is deleted.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_pasteTextScrap.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[scrapToPaste  The TextScrap to paste.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.IEditManager.cutTextScrap

         ]]></see>
<see><![CDATA[flashx.textLayout.edit.TextClipboard.getContents

         ]]></see>
<see><![CDATA[flashx.textLayout.edit.TextScrap

         

         ]]></see>
</method>
<method name='performRedo' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:performRedo' isStatic='false' isFinal='false' isOverride='false'  param_names='operation' param_types='flashx.undo:IOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='performUndo' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:performUndo' isStatic='false' isFinal='false' isOverride='false'  param_names='operation' param_types='flashx.undo:IOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:redo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

         Reperforms the previous undone operation.

         

         <p><b>Note:</b> If the IUndoManager associated with this IEditManager is also associated with 

         another IEditManager, then it is possible that the redo operation associated with the other 

         IEditManager is the one redone. This can happen if the FlowOperation of another IEditManager 

         is on top of the redo stack.</p>  

         

         <p>This function does nothing if undo is not turned on.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_redo.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.undo.IUndoManager#redo()

         

         ]]></see>
</method>
<method name='splitElement' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:splitElement' isStatic='false' isFinal='false' isOverride='false'  param_names='target;operationState' param_types='flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[ Splits the target element at the location specified, creating a new element after the current one.

         If the operationState is a range, the text within the range is deleted. The new element is created 

         after the text position specified by operationState. Note that splitting a SubParagraphGroupElement 

         will have no effect because they will automatically remerge with the adejacent elements.

         

         <p>An example where you might want to use this is if you have a list, and you want to divide it into two lists.</p>

         

         ]]></description>
<langversion><![CDATA[3.0

          ]]></langversion>
<param><![CDATA[target  The element to be split.

         ]]></param>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The new paragraph that was created.

         

         ]]></return>
</method>
<method name='splitParagraph' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:splitParagraph' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='flashx.textLayout.elements:ParagraphElement'>
<description><![CDATA[ 

         Splits the paragraph at the current position, creating a new paragraph after the current one.

           

         <p>If a range of text is specified, the text 

         in the range is deleted.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_splitParagraph.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[operationState    Specifies the text to which this operation applies; 

         if <code>null</code>, the operation applies to the current selection.

         

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The new paragraph that was created.

         

         ]]></return>
</method>
<method name='undo' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:undo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

         Reverses the previous operation. 

         

         <p><b>Note:</b> If the IUndoManager associated with this IEditManager is also associated with 

         another IEditManager, then it is possible that the undo operation associated with the other 

         IEditManager is the one undone.  This can happen if the FlowOperation of another IEditManager 

         is on top of the undo stack.</p>  

         

         <p>This function does nothing if undo is not turned on.</p>

         

         ]]></description>
<includeExample><![CDATA[examples\EditManager_undo.as -noswf

         

         ]]></includeExample>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.undo.IUndoManager#undo()

         

         ]]></see>
</method>
<method name='updateAllControllers' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:updateAllControllers' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Updates the display after an operation has modified it. Normally this is handled automatically, but call

         this method if <code>delayUpdates</code> is on, and the display should be updated before the next <code>enter_frame</code> event. 

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10.2

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
</method>
<method name='allowDelayedOperations' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:allowDelayedOperations/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Controls whether operations can be queued up for later execution.

         

         <p>Execution of some operations might be delayed as a performance optimization. For example, it is 

         convenient to be able to combine multiple keystrokes into a single insert operation. If 

         <code>allowDelayedOperations</code> is <code>true</code>, then operations may be queued up. If <code>false</code>, all operations are

         executed immediately. By default, it is <code>true</code>.</p>

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10.2

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
<see><![CDATA[flashx.edit.ISelectionManager#flushPendingOperations

         

         ]]></see>
</method>
<method name='delayUpdates' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:delayUpdates/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

         By default, calls into IEditManager handle updates synchronously, so the requested change is made and the text recomposed 

         and added to the display list within the IEditManager method. To get a delayed redraw, set <code>delayUpdates</code> to <code>true</code>. This 

         causes the IEditManager to only update the model, and recompose and redraw on the next <code>enter_frame</code> event. 

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10.2

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
</method>
<method name='undoManager' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:undoManager/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.undo:IUndoManager'>
<description><![CDATA[ 

         The UndoManager object assigned to this EditManager instance, if there is one.

         

         <p>An undo manager handles undo and redo operations.</p>

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='allowDelayedOperations' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:allowDelayedOperations/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='delayUpdates' fullname='flashx.textLayout.edit:IEditManager/flashx.textLayout.edit:IEditManager:delayUpdates/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<classRec name='EditManager' fullname='flashx.textLayout.edit:EditManager' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\edit\EditManager.as' namespace='flashx.textLayout.edit' access='public' baseclass='flashx.textLayout.edit:SelectionManager' interfaces='flashx.textLayout.edit:IEditManager' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The EditManager class manages editing changes to a TextFlow. 

	 

	 <p>To enable text flow editing, assign an EditManager object to the <code>interactionManager</code> 

	 property of the TextFlow object. The edit manager handles changes to the text (such as insertions, 

	 deletions, and format changes). Changes are reversible if the edit manager has an undo manager. The edit

	 manager triggers the recomposition and display of the text flow, as necessary.</p>

	 
	 <p>The EditManager class supports the following keyboard shortcuts:</p>

	 

	 <table class="innertable" width="100%">

	  <tr><th>Keys</th><th>Result</th></tr>

	  <tr><td>ctrl-z</td><td>undo</td></tr>					

	 	<tr><td>ctrl-y</td><td>redo</td></tr>					

	 	<tr><td>ctrl-backspace</td><td>deletePreviousWord</td></tr>					

	 	<tr><td>ctrl-delete</td><td>deleteNextWord</td></tr>					

	 	<tr><td>alt+delete</td><td>deleteNextWord</td></tr>					

	 	<tr><td>ctrl+alt-delete</td><td>deleteNextWord</td></tr>					

	 	<tr><td>ctrl-shift-hyphen</td><td>insert discretionary hyphen</td></tr>					

	 	<tr><td>ctrl+backspace</td><td>deletePreviousWord</td></tr>					

	 	<tr><td>alt+backspace</td><td>deletePreviousWord</td></tr>					

	 	<tr><td>ctrl+alt-backspace</td><td>deletePreviousWord</td></tr>					

	 	<tr><td>INSERT</td><td>toggles overWriteMode</td></tr>					

	 	<tr><td>backspace</td><td>deletePreviousCharacter</td></tr>					

	 	<tr><td>ENTER</td><td>if textFlow.configuration.manageEnterKey in a list it creates a new list item, otherwise creates a new paragraph</td></tr>					

	 	<tr><td>shift-ENTER</td><td>if textFlow.configuration.manageEnterKey creates a new paragraph</td></tr>					

	 	<tr><td>TAB</td><td>if textFlow.configuration.manageTabKey in a list it creates nested list, otherwise inserts a TAB or overwrites next character with a TAB</td></tr>    

	 	<tr><td>shift-TAB</td><td>if textFlow.configuration.manageTabKey in the first item of a list it moves the item out of the list (promotes it)</td></tr>    

	 </table>

	 
	 <p><strong>Note:</strong> The following keys do not work on Windows: alt-backspace, alt-delete, ctrl+alt-backspace,

	 and ctrl+alt-delete. These keys do not generate an event for the runtime.</p>						

 	 

 	 ]]></description>
<includeExample><![CDATA[examples\EditManager_example.as -noswf

	 

	 ]]></includeExample>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow

 	 ]]></see>
<see><![CDATA[flashx.undo.UndoManager

	 
	 ]]></see>
</classRec>
<method name='EditManager' fullname='flashx.textLayout.edit:EditManager/EditManager' isStatic='false' isFinal='false' isOverride='false'  param_names='undoManager' param_types='flashx.undo:IUndoManager' param_defaults='null' result_type='*'>
<description><![CDATA[ 

		 Creates an EditManager object.

		 

		 <p>Assign an EditManager object to the <code>interactionManager</code> property

		 of a text flow to enable editing of that text flow. </p>

		 
		 <p>To enable support for undoing and redoing changes, pass an 

		 IUndoManager instance to the EditManager constructor. You can use

		 the <code>flashx.undo.UndoManager</code> class

		 or create a custom IUndoManager instance. Use a custom IUndoManager instance

		 to integrate Text Layout Framework changes with an existing

		 undo manager that is not an instance of the UndoManager class.

		 To create a custom IUndoManager instance, ensure that the class

		 you use to define the undo manager 

		 implements the IUndoManager interface.</p>

		 

		 

		 ]]></description>
<includeExample><![CDATA[examples\EditManager_constructor.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[undo	The UndoManager for the application

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow#interactionManager

		 ]]></see>
<see><![CDATA[flashx.undo.IUndoManager

		 

		 ]]></see>
</method>
<method name='applyContainerFormat' fullname='flashx.textLayout.edit:EditManager/applyContainerFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='containerFormat;operationState' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#applyContainerFormat()

		 

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_applyContainerFormat.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='applyFormatToElement' fullname='flashx.textLayout.edit:EditManager/applyFormatToElement' isStatic='false' isFinal='false' isOverride='false'  param_names='targetElement;format;relativeStart;relativeEnd;operationState' param_types='flashx.textLayout.elements:FlowElement;flashx.textLayout.formats:ITextLayoutFormat;int;int;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;0;-1;null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#applyFormatToElement()

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='applyFormat' fullname='flashx.textLayout.edit:EditManager/applyFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='leafFormat;paragraphFormat;containerFormat;operationState' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;undefined;null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#applyFormat()

		 

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_applyFormat.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='applyLeafFormat' fullname='flashx.textLayout.edit:EditManager/applyLeafFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='characterFormat;operationState' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#applyLeafFormat()

		 

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_applyLeafFormat.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='applyLink' fullname='flashx.textLayout.edit:EditManager/applyLink' isStatic='false' isFinal='false' isOverride='false'  param_names='href;targetString;extendToLinkBoundary;operationState' param_types='String;String;Boolean;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null;false;null' result_type='flashx.textLayout.elements:LinkElement'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#applyLink()

		 Returns the new LinkElement that was created.

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_applyLink.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10 + 10.2

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='applyParagraphFormat' fullname='flashx.textLayout.edit:EditManager/applyParagraphFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='paragraphFormat;operationState' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#applyParagraphFormat()

		 

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_applyParagraphFormat.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='applyTCY' fullname='flashx.textLayout.edit:EditManager/applyTCY' isStatic='false' isFinal='false' isOverride='false'  param_names='tcyOn;operationState' param_types='Boolean;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='flashx.textLayout.elements:TCYElement'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#applyTCY()

		 Returns the new TCYElement that was created.

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_applyTCY.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10 + 10.2

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='beginCompositeOperation' fullname='flashx.textLayout.edit:EditManager/beginCompositeOperation' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#beginCompositeOperation()

		 

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_beginCompositeOperation.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

 	 	 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='beginIMEOperation' fullname='flashx.textLayout.edit:EditManager/tlf_internal:beginIMEOperation' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='changeElementID' fullname='flashx.textLayout.edit:EditManager/changeElementID' isStatic='false' isFinal='false' isOverride='false'  param_names='newID;targetElement;relativeStart;relativeEnd;operationState' param_types='String;flashx.textLayout.elements:FlowElement;int;int;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;0;-1;null' result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IEditManager#changeElementID()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_changeElementID.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0 

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='changeStyleName' fullname='flashx.textLayout.edit:EditManager/changeStyleName' isStatic='false' isFinal='false' isOverride='false'  param_names='newName;targetElement;relativeStart;relativeEnd;operationState' param_types='String;flashx.textLayout.elements:FlowElement;int;int;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;0;-1;null' result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IEditManager#changeStyleName()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_changeStyleName.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<metadata>
	<Deprecated owner='flashx.textLayout.edit:EditManager/changeStyleName' replacement='applyFormatToElement' since='2.0' >
	</Deprecated>
</metadata>
</method>
<method name='changeTypeName' fullname='flashx.textLayout.edit:EditManager/changeTypeName' isStatic='false' isFinal='false' isOverride='false'  param_names='newName;targetElement;relativeStart;relativeEnd;operationState' param_types='String;flashx.textLayout.elements:FlowElement;int;int;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;0;-1;null' result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IEditManager#changeTypeName()

		 

		 ]]></copy>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='clearFormatOnElement' fullname='flashx.textLayout.edit:EditManager/clearFormatOnElement' isStatic='false' isFinal='false' isOverride='false'  param_names='targetElement;format;operationState' param_types='flashx.textLayout.elements:FlowElement;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#clearFormatOnElement()

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='clearFormat' fullname='flashx.textLayout.edit:EditManager/clearFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='leafFormat;paragraphFormat;containerFormat;operationState' param_types='flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;undefined;null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#clearFormat()

		 

		 Known issue is that undefines of leafFormat values with a point selection are not applied at the next insertion.

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='createDiv' fullname='flashx.textLayout.edit:EditManager/createDiv' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;format;operationState' param_types='flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='null;null;null' result_type='flashx.textLayout.elements:DivElement'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IEditManager#createDiv() ]]></copy>
</method>
<method name='createList' fullname='flashx.textLayout.edit:EditManager/createList' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;format;operationState' param_types='flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='null;null;null' result_type='flashx.textLayout.elements:ListElement'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IEditManager#createList() ]]></copy>
</method>
<method name='createSubParagraphGroup' fullname='flashx.textLayout.edit:EditManager/createSubParagraphGroup' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;format;operationState' param_types='flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.edit:SelectionState' param_defaults='null;null;null' result_type='flashx.textLayout.elements:SubParagraphGroupElement'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IEditManager#createSubParagraphGroup() ]]></copy>
</method>
<method name='cutTextScrap' fullname='flashx.textLayout.edit:EditManager/cutTextScrap' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='flashx.textLayout.edit:TextScrap'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#cutTextScrap()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_cutTextScrap.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

 	 	 

		  ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.TextScrap

		 ]]></see>
</method>
<method name='deactivateHandler' fullname='flashx.textLayout.edit:EditManager/deactivateHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='defaultOperationState' fullname='flashx.textLayout.edit:EditManager/tlf_internal:defaultOperationState' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='deleteNextCharacter' fullname='flashx.textLayout.edit:EditManager/deleteNextCharacter' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IEditManager#deleteNextCharacter()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_deleteNextCharacter.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='deleteNextWord' fullname='flashx.textLayout.edit:EditManager/deleteNextWord' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#deleteNextWord()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_deleteNextWord.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='deletePreviousCharacter' fullname='flashx.textLayout.edit:EditManager/deletePreviousCharacter' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IEditManager#deletePreviousCharacter()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_deletePreviousCharacter.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='deletePreviousWord' fullname='flashx.textLayout.edit:EditManager/deletePreviousWord' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#deletePreviousWord()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_deletePreviousWord.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='deleteText' fullname='flashx.textLayout.edit:EditManager/deleteText' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#deleteText()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_deleteText.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='doInternal' fullname='flashx.textLayout.edit:EditManager/private:doInternal' isStatic='false' isFinal='false' isOverride='false'  param_names='op' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='flashx.textLayout.operations:FlowOperation'>
<description><![CDATA[ Internal guts of a dooperation - Execute a FlowOperation.  This function proceeds in steps.

		  <p>Step 2. Send a canceallable OperationEvent.  If cancelled this method returns immediately.</p>

		  If it is not cancelled, the listener may "do" other operations by calling back into the EditManager. This will result

		  in a nested call to do which will post additional commands to the captureOperations array.

		  <p>Step 3. Execute the operation.  The operation returns true or false.  false indicates no changes were made.</p>

		  <p>Step 7. Send a OperationEvent. </p>

		  The listener may "do" other operations by calling back into the EditManager. This will result

		  in a nested call to do which will post additional commands to the captureOperations array.

		  <p>Exception handling.  If the operation throws the exception is caught and the error is attached to the event dispatched

		  at step 7.  If the event is not cancelled the error is rethrown.</p>

		  ]]></description>
</method>
<method name='doOperation' fullname='flashx.textLayout.edit:EditManager/doOperation' isStatic='false' isFinal='false' isOverride='true'  param_names='operation' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		  ]]></description>
<copy><![CDATA[IEditManager#doOperation()

		  

		  ]]></copy>
<includeExample><![CDATA[examples\EditManager_doOperation.as -noswf

		  

		  ]]></includeExample>
<langversion><![CDATA[3.0

		  ]]></langversion>
<playerversion><![CDATA[Flash 10

		  ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	  ]]></playerversion>
</method>
<method name='editHandler' fullname='flashx.textLayout.edit:EditManager/editHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='endCompositeOperation' fullname='flashx.textLayout.edit:EditManager/endCompositeOperation' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#endCompositeOperation()

		 

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_beginCompositeOperation.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

 	 	 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='endIMEOperation' fullname='flashx.textLayout.edit:EditManager/tlf_internal:endIMEOperation' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='endIMESession' fullname='flashx.textLayout.edit:EditManager/tlf_internal:endIMESession' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='finalizeDo' fullname='flashx.textLayout.edit:EditManager/private:finalizeDo' isStatic='false' isFinal='false' isOverride='false'  param_names='op' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='void'>
</method>
<method name='flushPendingOperations' fullname='flashx.textLayout.edit:EditManager/flushPendingOperations' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='focusOutHandler' fullname='flashx.textLayout.edit:EditManager/focusOutHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getNextWordForDelete' fullname='flashx.textLayout.edit:EditManager/private:getNextWordForDelete' isStatic='false' isFinal='false' isOverride='false'  param_names='absoluteStart' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='getPreviousWordForDelete' fullname='flashx.textLayout.edit:EditManager/private:getPreviousWordForDelete' isStatic='false' isFinal='false' isOverride='false'  param_names='absoluteStart' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='handleUpdate' fullname='flashx.textLayout.edit:EditManager/private:handleUpdate' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='imeStartCompositionHandler' fullname='flashx.textLayout.edit:EditManager/imeStartCompositionHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:IMEEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='insertInlineGraphic' fullname='flashx.textLayout.edit:EditManager/insertInlineGraphic' isStatic='false' isFinal='false' isOverride='false'  param_names='source;width;height;options;operationState' param_types='Object;Object;Object;Object;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;undefined;null;null' result_type='flashx.textLayout.elements:InlineGraphicElement'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#insertInlineGraphic()

		 Returns the new InlineGraphicElement that was created.

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_insertInlineGraphic.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10 + 10.2

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextRotation

		 ]]></see>
</method>
<method name='insertText' fullname='flashx.textLayout.edit:EditManager/insertText' isStatic='false' isFinal='false' isOverride='false'  param_names='text;origOperationState' param_types='String;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#insertText()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_insertText.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='keyDownHandler' fullname='flashx.textLayout.edit:EditManager/keyDownHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='keyFocusChangeHandler' fullname='flashx.textLayout.edit:EditManager/keyFocusChangeHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='keyUpHandler' fullname='flashx.textLayout.edit:EditManager/keyUpHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='modifyInlineGraphic' fullname='flashx.textLayout.edit:EditManager/modifyInlineGraphic' isStatic='false' isFinal='false' isOverride='false'  param_names='source;width;height;options;operationState' param_types='Object;Object;Object;Object;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;undefined;null;null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#modifyInlineGraphic()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_modifyInlineGraphic.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='mouseDownHandler' fullname='flashx.textLayout.edit:EditManager/mouseDownHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='moveChildren' fullname='flashx.textLayout.edit:EditManager/moveChildren' isStatic='false' isFinal='false' isOverride='false'  param_names='source;sourceIndex;numChildren;destination;destinationIndex;selectionState' param_types='flashx.textLayout.elements:FlowGroupElement;int;int;flashx.textLayout.elements:FlowGroupElement;int;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;undefined;undefined;undefined;null' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IEditManager#moveChildren() ]]></copy>
</method>
<method name='overwriteText' fullname='flashx.textLayout.edit:EditManager/overwriteText' isStatic='false' isFinal='false' isOverride='false'  param_names='text;operationState' param_types='String;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#overwriteText()

		 

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_overwriteText.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='pasteTextScrap' fullname='flashx.textLayout.edit:EditManager/pasteTextScrap' isStatic='false' isFinal='false' isOverride='false'  param_names='scrapToPaste;operationState' param_types='flashx.textLayout.edit:TextScrap;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#pasteTextScrap()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_pasteTextScrap.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

 	 	 

		  ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.TextScrap

		 ]]></see>
</method>
<method name='performRedo' fullname='flashx.textLayout.edit:EditManager/performRedo' isStatic='false' isFinal='false' isOverride='false'  param_names='theop' param_types='flashx.undo:IOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='performUndo' fullname='flashx.textLayout.edit:EditManager/performUndo' isStatic='false' isFinal='false' isOverride='false'  param_names='theop' param_types='flashx.undo:IOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.edit:EditManager/redo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#redo()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_redo.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flashx.undo.IUndoManager#redo()

		 

		 ]]></see>
</method>
<method name='redrawHandler' fullname='flashx.textLayout.edit:EditManager/private:redrawHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='selectionChanged' fullname='flashx.textLayout.edit:EditManager/tlf_internal:selectionChanged' isStatic='false' isFinal='false' isOverride='true'  param_names='doDispatchEvent;resetPointFormat' param_types='Boolean;Boolean' param_defaults='true;true' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[doDispatchEvent	true if a selection changed event will be sent

		 ]]></param>
<param><![CDATA[resetPointFormat	true if the attributes associated with the caret should be discarded

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<private><![CDATA[]]></private>
</method>
<method name='setFocus' fullname='flashx.textLayout.edit:EditManager/setFocus' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setUndoManager' fullname='flashx.textLayout.edit:EditManager/tlf_internal:setUndoManager' isStatic='false' isFinal='false' isOverride='false'  param_names='undoManager' param_types='flashx.undo:IUndoManager' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='splitElement' fullname='flashx.textLayout.edit:EditManager/splitElement' isStatic='false' isFinal='false' isOverride='false'  param_names='target;operationState' param_types='flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.edit:SelectionState' param_defaults='undefined;null' result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IEditManager#splitElement() ]]></copy>
</method>
<method name='splitParagraph' fullname='flashx.textLayout.edit:EditManager/splitParagraph' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='null' result_type='flashx.textLayout.elements:ParagraphElement'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#splitParagraph()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_splitParagraph.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='textInputHandler' fullname='flashx.textLayout.edit:EditManager/textInputHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:TextEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.edit:EditManager/undo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IEditManager#undo()

		 ]]></copy>
<includeExample><![CDATA[examples\EditManager_undo.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flashx.undo.IUndoManager#undo()

		 

		 ]]></see>
</method>
<method name='updateAllControllers' fullname='flashx.textLayout.edit:EditManager/updateAllControllers' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IEditManager.updateAllControllers

		 ]]></copy>
</method>
<method name='allowDelayedOperations' fullname='flashx.textLayout.edit:EditManager/allowDelayedOperations/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IEditManager#allowDelayedOperations() ]]></copy>
</method>
<method name='delayUpdates' fullname='flashx.textLayout.edit:EditManager/delayUpdates/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IEditManager.delayUpdates

		 ]]></copy>
</method>
<method name='editingMode' fullname='flashx.textLayout.edit:EditManager/editingMode/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
<description><![CDATA[

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditingMode.

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='undoManager' fullname='flashx.textLayout.edit:EditManager/undoManager/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.undo:IUndoManager'>
<description><![CDATA[  

		 The IUndoManager assigned to this edit manager.

		 

		 <p>To allow edits to be undone (and redone), pass an IUndoManager instance to the EditManager

		 constructor. The undo manager maintains a stack of operations that have been executed, and it can 

		 undo or redo individual operations. </p>

		 

		 <p><b>Note:</b> If the TextFlow is modified directly (not via

		 calls to the EditManager, but directly via calls to the managed FlowElement objects), then the EditManager

		 clears the undo stack to prevent the stack from getting out of sync with the current state.</p>

		 

	 	 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='allowDelayedOperations' fullname='flashx.textLayout.edit:EditManager/allowDelayedOperations/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='delayUpdates' fullname='flashx.textLayout.edit:EditManager/delayUpdates/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='textFlow' fullname='flashx.textLayout.edit:EditManager/textFlow/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_allowDelayedOperations' fullname='flashx.textLayout.edit:EditManager/private:_allowDelayedOperations' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_delayUpdates' fullname='flashx.textLayout.edit:EditManager/private:_delayUpdates' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_imeOperationInProgress' fullname='flashx.textLayout.edit:EditManager/private:_imeOperationInProgress' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_imeSession' fullname='flashx.textLayout.edit:EditManager/private:_imeSession' type='flashx.textLayout.edit:IMEClient' isStatic='false' isConst='false' >
</field>
<field name='_undoManager' fullname='flashx.textLayout.edit:EditManager/private:_undoManager' type='flashx.undo:IUndoManager' isStatic='false' isConst='false' >
</field>
<field name='captureLevel' fullname='flashx.textLayout.edit:EditManager/tlf_internal:captureLevel' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='captureOperations' fullname='flashx.textLayout.edit:EditManager/private:captureOperations' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='enterFrameListener' fullname='flashx.textLayout.edit:EditManager/private:enterFrameListener' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='overwriteMode' fullname='flashx.textLayout.edit:EditManager/overwriteMode' type='Boolean' isStatic='true' isConst='false' defaultValue='false' >
<description><![CDATA[ 

		 Indicates whether overwrite mode is on or off.

		 

		 <p>If <code>true</code>, then a keystroke overwrites the character following the cursor.

		 If <code>false</code>, then a keystroke is inserted at the cursor location.</p> 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</field>
<field name='parentStack' fullname='flashx.textLayout.edit:EditManager/private:parentStack' type='Array' isStatic='false' isConst='false' >
</field>
<field name='pendingInsert' fullname='flashx.textLayout.edit:EditManager/private:pendingInsert' type='flashx.textLayout.operations:InsertTextOperation' isStatic='false' isConst='false' >
<description><![CDATA[

		  To minimize expensive recompositions during fast typing, inserts

		  don't necessarily take place immediately. An insert operation that

		  hasn't yet executed is held here.

		 ]]></description>
</field>
<field name='redrawListener' fullname='flashx.textLayout.edit:EditManager/private:redrawListener' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<interfaceRec name='IOperation' fullname='flashx.undo:IOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\undo\IOperation.as' namespace='flashx.undo' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 IOperation defines the interface for operations that can be undone and redone.

	  

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
</interfaceRec>
<method name='performRedo' fullname='flashx.undo:IOperation/flashx.undo:IOperation:performRedo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Reperforms the operation.

		 

		 <p>The operation is also responsible for pushing itself onto the undo stack.</p>

		  

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='performUndo' fullname='flashx.undo:IOperation/flashx.undo:IOperation:performUndo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Reverses the operation.

		 

		 <p>The operation is also responsible for pushing itself onto the redo stack.</p> 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<interfaceRec name='IUndoManager' fullname='flashx.undo:IUndoManager' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\undo\IUndoManager.as' namespace='flashx.undo' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

     IUndoManager defines the interface for managing the undo and redo stacks.

     

     <p>An undo manager maintains a stack of operations that can be undone and redone.</p>

     

     ]]></description>
<langversion><![CDATA[3.0

     ]]></langversion>
<playerversion><![CDATA[Flash 10

     ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

     ]]></playerversion>
</interfaceRec>
<method name='canRedo' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:canRedo' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

         Indicates whether there is currently an operation that can be redone.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[Boolean <code>true</code>, if there is an operation on the redo stack that can be redone.

         Otherwise, <code>false</code>.

         

         ]]></return>
</method>
<method name='canUndo' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:canUndo' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

         Indicates whether there is currently an operation that can be undone.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[Boolean <code>true</code>, if there is an operation on the undo stack that can be reversed.

         Otherwise, <code>false</code>.

         

         ]]></return>
</method>
<method name='clearAll' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:clearAll' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

         Clears both the undo and the redo histories.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='clearRedo' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:clearRedo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

         Clears the redo stack.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='peekRedo' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:peekRedo' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.undo:IOperation'>
<description><![CDATA[

         Returns the next operation to be redone.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The redoable IOperation object, or <code>null</code>, if no redoable operation

         is on the stack.

         

         ]]></return>
</method>
<method name='peekUndo' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:peekUndo' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.undo:IOperation'>
<description><![CDATA[

         Returns the next operation to be undone.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The undoable IOperation object, or <code>null</code>, if no undoable operation

         is on the stack.

         

         ]]></return>
</method>
<method name='popRedo' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:popRedo' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.undo:IOperation'>
<description><![CDATA[

         Removes the next operation to be redone from the redo stack, and returns it.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The redoable IOperation object, or <code>null</code>, if no redoable operation

         is on the stack.

         ]]></return>
</method>
<method name='popUndo' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:popUndo' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.undo:IOperation'>
<description><![CDATA[

         Removes the next operation to be undone from the undo stack, and returns it.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[The undoable IOperation object, or <code>null</code>, if no undoable operation

         is on the stack.

         

         ]]></return>
</method>
<method name='pushRedo' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:pushRedo' isStatic='false' isFinal='false' isOverride='false'  param_names='operation' param_types='flashx.undo:IOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[

         Adds a redoable operation to the redo stack.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='pushUndo' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:pushUndo' isStatic='false' isFinal='false' isOverride='false'  param_names='operation' param_types='flashx.undo:IOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[

         Adds an undoable operation to the undo stack.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='redo' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:redo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

         Removes the next IOperation object from the redo stack and calls the performRedo() 

         function of that object.

         

         ]]></description>
<see><![CDATA[flashx.textLayout.edit.IEditManager#redo()

         ]]></see>
<see><![CDATA[flashx.undo.IUndoManager#canRedo()

         ]]></see>
<see><![CDATA[flashx.undo.IUndoManager#clearRedo()

         ]]></see>
<see><![CDATA[flashx.undo.IUndoManager#peekRedo()

         ]]></see>
<see><![CDATA[flashx.undo.IUndoManager#pushRedo()

         ]]></see>
<see><![CDATA[flashx.undo.IUndoManager#popRedo()

         ]]></see>
</method>
<method name='undo' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:undo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

         Removes the next IOperation object from the undo stack and calls the performUndo() 

         function of that object.

         

         ]]></description>
<see><![CDATA[flashx.textLayout.edit.IEditManager#undo()

         ]]></see>
<see><![CDATA[flashx.undo.IUndoManager#canUndo()

         ]]></see>
<see><![CDATA[flashx.undo.IUndoManager#clearUndo()

         ]]></see>
<see><![CDATA[flashx.undo.IUndoManager#peekUndo()

         ]]></see>
<see><![CDATA[flashx.undo.IUndoManager#pushUndo()

         ]]></see>
<see><![CDATA[flashx.undo.IUndoManager#popUndo()

         ]]></see>
</method>
<method name='undoAndRedoItemLimit' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:undoAndRedoItemLimit/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

         The maximum number of undoable or redoable operations to track.

         

         <p>To disable the undo function, set this value to 0.</p> 

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='undoAndRedoItemLimit' fullname='flashx.undo:IUndoManager/flashx.undo:IUndoManager:undoAndRedoItemLimit/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<classRec name='UndoManager' fullname='flashx.undo:UndoManager' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\undo\UndoManager.as' namespace='flashx.undo' access='public' baseclass='Object' interfaces='flashx.undo:IUndoManager' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The UndoManager class manages the history of editing operations on a text flow so

	 that these operations can be undone and redone.

	 

	 <p>The undo manager maintains two stacks of IOperation objects. When a reversible

	 operation is executed, it is placed on the undo stack. If that operation is undone,

	 it is removed from the undo stack, reversed, and placed on the redo stack. Likewise, 

	 if that operation is then redone, it is removed from the redo stack, re-executed, and

	 then placed onto the undo stack again. If another operation is executed first, the redo 

	 stack is cleared.</p>

	 

	 <p>If the TextFlow is modified directly (not via

	 calls to the edit manager, but directly via calls to the managed FlowElement objects), then the edit manager

	 clears the undo stack to prevent the stack from getting out of sync with the current state.</p>

	 

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
</classRec>
<method name='UndoManager' fullname='flashx.undo:UndoManager/UndoManager' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Creates an UndoManager object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='canRedo' fullname='flashx.undo:UndoManager/canRedo' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IUndoManager#canRedo()

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='canUndo' fullname='flashx.undo:UndoManager/canUndo' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IUndoManager#canUndo()

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='clearAll' fullname='flashx.undo:UndoManager/clearAll' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IUndoManager#clearAll()

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='clearRedo' fullname='flashx.undo:UndoManager/clearRedo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IUndoManager#clearRedo()

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='peekRedo' fullname='flashx.undo:UndoManager/peekRedo' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.undo:IOperation'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IUndoManager#peekRedo()

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='peekUndo' fullname='flashx.undo:UndoManager/peekUndo' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.undo:IOperation'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IUndoManager#peekUndo()

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='popRedo' fullname='flashx.undo:UndoManager/popRedo' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.undo:IOperation'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IUndoManager#popRedo()

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='popUndo' fullname='flashx.undo:UndoManager/popUndo' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.undo:IOperation'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IUndoManager#popUndo()

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='pushRedo' fullname='flashx.undo:UndoManager/pushRedo' isStatic='false' isFinal='false' isOverride='false'  param_names='operation' param_types='flashx.undo:IOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IUndoManager#pushRedo()

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='pushUndo' fullname='flashx.undo:UndoManager/pushUndo' isStatic='false' isFinal='false' isOverride='false'  param_names='operation' param_types='flashx.undo:IOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IUndoManager#pushUndo()

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='redo' fullname='flashx.undo:UndoManager/redo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IUndoManager#redo()

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.IEditManager#redo()

		 

		 ]]></see>
</method>
<method name='trimUndoRedoStacks' fullname='flashx.undo:UndoManager/private:trimUndoRedoStacks' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ trim the sizes of the undo/redo stacks to the maximum limits ]]></description>
</method>
<method name='undo' fullname='flashx.undo:UndoManager/undo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[IUndoManager#undo()

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.IEditManager#undo()

		 

		 ]]></see>
</method>
<method name='undoAndRedoItemLimit' fullname='flashx.undo:UndoManager/undoAndRedoItemLimit/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[IUndoManager#undoAndRedoItemLimit

		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
<tiptext><![CDATA[The maximum number of undoable or redoable operations to track. 

		 ]]></tiptext>
</method>
<method name='undoAndRedoItemLimit' fullname='flashx.undo:UndoManager/undoAndRedoItemLimit/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<field name='_undoAndRedoItemLimit' fullname='flashx.undo:UndoManager/private:_undoAndRedoItemLimit' type='int' isStatic='false' isConst='false' defaultValue='25' >
</field>
<field name='redoStack' fullname='flashx.undo:UndoManager/private:redoStack' type='Array' isStatic='false' isConst='false' >
</field>
<field name='undoStack' fullname='flashx.undo:UndoManager/private:undoStack' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='NavigationUtil' fullname='flashx.textLayout.utils:NavigationUtil' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\utils\NavigationUtil.as' namespace='flashx.textLayout.utils' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	 Utilities for manipulating a TextRange 

	 The methods of this class are static and must be called using

	 the syntax <code>NavigationUtil.method(<em>parameter</em>)</code>.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='adjustForOversetBack' fullname='flashx.textLayout.utils:NavigationUtil/private:adjustForOversetBack' isStatic='true' isFinal='false' isOverride='false'  param_names='range' param_types='flashx.textLayout.elements:TextRange' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ If the range is in overset text (after the last container in a non-scrolling flow), adjust the range so it is at the end of the last controller in the flow. ]]></description>
</method>
<method name='adjustForOversetForward' fullname='flashx.textLayout.utils:NavigationUtil/private:adjustForOversetForward' isStatic='true' isFinal='false' isOverride='false'  param_names='range' param_types='flashx.textLayout.elements:TextRange' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ If the range is in overset text (after the last container in a non-scrolling flow), adjust the range so it is at the end of the flow. ]]></description>
</method>
<method name='checkCompose' fullname='flashx.textLayout.utils:NavigationUtil/private:checkCompose' isStatic='true' isFinal='false' isOverride='false'  param_names='flowComposer;pos' param_types='flashx.textLayout.compose:IFlowComposer;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='clampToFit' fullname='flashx.textLayout.utils:NavigationUtil/private:clampToFit' isStatic='true' isFinal='false' isOverride='false'  param_names='range;endPos' param_types='flashx.textLayout.elements:TextRange;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='computeEndIdx' fullname='flashx.textLayout.utils:NavigationUtil/tlf_internal:computeEndIdx' isStatic='true' isFinal='false' isOverride='false'  param_names='targetFlowLine;curTextFlowLine;blockProgression;isRTLDirection;globalPoint' param_types='flashx.textLayout.compose:TextFlowLine;flashx.textLayout.compose:TextFlowLine;String;Boolean;flash.geom:Point' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='doIncrement' fullname='flashx.textLayout.utils:NavigationUtil/private:doIncrement' isStatic='true' isFinal='false' isOverride='false'  param_names='flowRoot;pos;incrementer' param_types='flashx.textLayout.elements:TextFlow;int;Function' param_defaults='undefined;undefined;undefined' result_type='int'>
</method>
<method name='endOfDocument' fullname='flashx.textLayout.utils:NavigationUtil/endOfDocument' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange at the end of the document.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='endOfLastController' fullname='flashx.textLayout.utils:NavigationUtil/private:endOfLastController' isStatic='true' isFinal='false' isOverride='false'  param_names='flowRoot' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='int'>
</method>
<method name='endOfLine' fullname='flashx.textLayout.utils:NavigationUtil/endOfLine' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange at the end of the line.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='endOfParagraph' fullname='flashx.textLayout.utils:NavigationUtil/endOfParagraph' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange at the end of the paragraph.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='isOverset' fullname='flashx.textLayout.utils:NavigationUtil/private:isOverset' isStatic='true' isFinal='false' isOverride='false'  param_names='flowRoot;absolutePos' param_types='flashx.textLayout.elements:TextFlow;int' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='isScrollable' fullname='flashx.textLayout.utils:NavigationUtil/private:isScrollable' isStatic='true' isFinal='false' isOverride='false'  param_names='flowRoot;absolutePos' param_types='flashx.textLayout.elements:TextFlow;int' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='moveBackwardHelper' fullname='flashx.textLayout.utils:NavigationUtil/private:moveBackwardHelper' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection;incrementor' param_types='flashx.textLayout.elements:TextRange;Boolean;Function' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
</method>
<method name='moveForwardHelper' fullname='flashx.textLayout.utils:NavigationUtil/private:moveForwardHelper' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection;incrementor' param_types='flashx.textLayout.elements:TextRange;Boolean;Function' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
</method>
<method name='nextAtomHelper' fullname='flashx.textLayout.utils:NavigationUtil/private:nextAtomHelper' isStatic='true' isFinal='false' isOverride='false'  param_names='flowRoot;para;pos;paraStart' param_types='flashx.textLayout.elements:TextFlow;flashx.textLayout.elements:ParagraphElement;int;int' param_defaults='undefined;undefined;undefined;undefined' result_type='int'>
</method>
<method name='nextAtomPosition' fullname='flashx.textLayout.utils:NavigationUtil/nextAtomPosition' isStatic='true' isFinal='false' isOverride='false'  param_names='flowRoot;absolutePos' param_types='flashx.textLayout.elements:TextFlow;int' param_defaults='undefined;undefined' result_type='int'>
<description><![CDATA[ 

		 Returns the absolute position of the next atom.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='nextCharacter' fullname='flashx.textLayout.utils:NavigationUtil/nextCharacter' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange forward by one character.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='nextLine' fullname='flashx.textLayout.utils:NavigationUtil/nextLine' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange down one line

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='nextPage' fullname='flashx.textLayout.utils:NavigationUtil/nextPage' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange down one page.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='nextWordPosition' fullname='flashx.textLayout.utils:NavigationUtil/nextWordPosition' isStatic='true' isFinal='false' isOverride='false'  param_names='flowRoot;absolutePos' param_types='flashx.textLayout.elements:TextFlow;int' param_defaults='undefined;undefined' result_type='int'>
<description><![CDATA[ 

		 Returns the absolute position of the beginning of the next word.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='nextWord' fullname='flashx.textLayout.utils:NavigationUtil/nextWord' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange forward by one word.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='previousAtomHelper' fullname='flashx.textLayout.utils:NavigationUtil/private:previousAtomHelper' isStatic='true' isFinal='false' isOverride='false'  param_names='flowRoot;para;pos;paraStart' param_types='flashx.textLayout.elements:TextFlow;flashx.textLayout.elements:ParagraphElement;int;int' param_defaults='undefined;undefined;undefined;undefined' result_type='int'>
</method>
<method name='previousAtomPosition' fullname='flashx.textLayout.utils:NavigationUtil/previousAtomPosition' isStatic='true' isFinal='false' isOverride='false'  param_names='flowRoot;absolutePos' param_types='flashx.textLayout.elements:TextFlow;int' param_defaults='undefined;undefined' result_type='int'>
<description><![CDATA[ 

		 Returns the absolute position of the previous atom. 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='previousCharacter' fullname='flashx.textLayout.utils:NavigationUtil/previousCharacter' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange backward by one character.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='previousLine' fullname='flashx.textLayout.utils:NavigationUtil/previousLine' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange up one line.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='previousPage' fullname='flashx.textLayout.utils:NavigationUtil/previousPage' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange up one page.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='previousWordPosition' fullname='flashx.textLayout.utils:NavigationUtil/previousWordPosition' isStatic='true' isFinal='false' isOverride='false'  param_names='flowRoot;absolutePos' param_types='flashx.textLayout.elements:TextFlow;int' param_defaults='undefined;undefined' result_type='int'>
<description><![CDATA[ 

		 Returns absolute position of the beginning of the previous word.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='previousWord' fullname='flashx.textLayout.utils:NavigationUtil/previousWord' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange backward by one word.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='startOfDocument' fullname='flashx.textLayout.utils:NavigationUtil/startOfDocument' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange at the beginning of the document.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='startOfLine' fullname='flashx.textLayout.utils:NavigationUtil/startOfLine' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange at the beginning of the line.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='startOfParagraph' fullname='flashx.textLayout.utils:NavigationUtil/startOfParagraph' isStatic='true' isFinal='false' isOverride='false'  param_names='range;extendSelection' param_types='flashx.textLayout.elements:TextRange;Boolean' param_defaults='undefined;false' result_type='Boolean'>
<description><![CDATA[

		 Sets the TextRange at the beginning of the paragraph.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[extendSelection	Indicates that only activeIndex should move

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if selection changed.

		 ]]></return>
</method>
<method name='updateEndIfInReadOnlyElement' fullname='flashx.textLayout.utils:NavigationUtil/tlf_internal:updateEndIfInReadOnlyElement' isStatic='true' isFinal='false' isOverride='false'  param_names='textFlow;idx' param_types='flashx.textLayout.elements:TextFlow;int' param_defaults='undefined;undefined' result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateStartIfInReadOnlyElement' fullname='flashx.textLayout.utils:NavigationUtil/tlf_internal:updateStartIfInReadOnlyElement' isStatic='true' isFinal='false' isOverride='false'  param_names='textFlow;idx' param_types='flashx.textLayout.elements:TextFlow;int' param_defaults='undefined;undefined' result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='validateTextRange' fullname='flashx.textLayout.utils:NavigationUtil/private:validateTextRange' isStatic='true' isFinal='false' isOverride='false'  param_names='range' param_types='flashx.textLayout.elements:TextRange' param_defaults='undefined' result_type='Boolean'>
</method>
<classRec name='CharacterUtil' fullname='flashx.textLayout.utils:CharacterUtil' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\utils\CharacterUtil.as' namespace='flashx.textLayout.utils' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	 Utilities for managing and getting information about characters.

	 The methods of this class are static and must be called using

	 the syntax <code>CharacterUtil.method(<em>parameter</em>)</code>.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='createWhiteSpaceObject' fullname='flashx.textLayout.utils:CharacterUtil/private:createWhiteSpaceObject' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='isHighSurrogate' fullname='flashx.textLayout.utils:CharacterUtil/isHighSurrogate' isStatic='true' isFinal='false' isOverride='false'  param_names='charCode' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ 

		 Returns <code>true</code> if the <code>charCode</code> argument is a high word in a surrogate pair. 

		 A surrogate pair represents a character with a code point that requires more

		 than sixteen bits to express and thus requires a combination

		 of two 16-bit words, a high surrogate and a low surrogate, to embody its code point.

		 <p>This method can be used when processing a series of characters to

		 ensure that you do not inadvertently divide a surrogate pair

		 into incomplete halves.</p>

		 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[charCode An integer that represents a character code.

		 Character codes are usually represented in hexadecimal format.

		 For example, the space character's character code can be

		 represented by the number <code>0x0020</code>.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[<code>true</code> if <code>charCode</code> is the high surrogate in a surrogate pair.

		 ]]></return>
</method>
<method name='isLowSurrogate' fullname='flashx.textLayout.utils:CharacterUtil/isLowSurrogate' isStatic='true' isFinal='false' isOverride='false'  param_names='charCode' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ 

		 Returns <code>true</code> if the <code>charCode</code> argument is a low word in a surrogate pair. 

		 A surrogate pair represents a character with a code point that requires more

		 than sixteen bits to express and thus requires a combination

		 of two 16-bit words, a high surrogate and a low surrogate, to embody its code point.

		 <p>This method can be used when processing a series of characters to

		 ensure that you do not inadvertently divide a surrogate pair

		 into incomplete halves.</p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[charCode An integer that represents a character code.

		 Character codes are usually represented in hexadecimal format.

		 For example, the space character's character code can be

		 represented by the number <code>0x0020</code>.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[<code>true</code> if <code>charCode</code> is the low surrogate in a surrogate pair.

		 ]]></return>
</method>
<method name='isWhitespace' fullname='flashx.textLayout.utils:CharacterUtil/isWhitespace' isStatic='true' isFinal='false' isOverride='false'  param_names='charCode' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ 

		 Returns <code>true</code> if <code>charCode</code> is a whitespace character. 

		 <p>The following table describes all characters that this

		 method considers a whitespace character.

		 </p>

		 <table class="innertable">

		     <tr><th>Character Code</th><th>Unicode Character Name</th><th>Category</th></tr>

		     <tr><td><code>0x0020</code></td><td>SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x1680</code></td><td>OGHAM SPACE MARK</td><td>Space Separator</td></tr>

		     <tr><td><code>0x180E</code></td><td>MONGOLIAN VOWEL SEPARATOR</td><td>Space Separator</td></tr>

		     <tr><td><code>0x2000</code></td><td>EN QUAD</td><td>Space Separator</td></tr>

		     <tr><td><code>0x2001</code></td><td>EM QUAD</td><td>Space Separator</td></tr>

		     <tr><td><code>0x2002</code></td><td>EN SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x2003</code></td><td>EM SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x2004</code></td><td>THREE-PER-EM SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x2005</code></td><td>FOUR-PER-EM SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x2006</code></td><td>SIX-PER-EM SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x2007</code></td><td>FIGURE SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x2008</code></td><td>PUNCTUATION SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x2009</code></td><td>THIN SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x200A</code></td><td>HAIR SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x202F</code></td><td>NARROW NO-BREAK SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x205F</code></td><td>MEDIUM MATHEMATICAL SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x3000</code></td><td>IDEOGRAPHIC SPACE</td><td>Space Separator</td></tr>

		     <tr><td><code>0x2028</code></td><td>LINE SEPARATOR</td><td>Line Separator</td></tr>

		     <tr><td><code>0x2029</code></td><td>PARAGRAPH SEPARATOR</td><td>Paragraph Separator</td></tr>

		     <tr><td><code>0x0009</code></td><td>CHARACTER TABULATION</td><td>Other</td></tr>

		     <tr><td><code>0x000A</code></td><td>LINE FEED</td><td>Other</td></tr>

		     <tr><td><code>0x000B</code></td><td>LINE TABULATION</td><td>Other</td></tr>

		     <tr><td><code>0x000C</code></td><td>FORM FEED</td><td>Other</td></tr>

		     <tr><td><code>0x000D</code></td><td>CARRIAGE RETURN</td><td>Other</td></tr>

		     <tr><td><code>0x0085</code></td><td>NEXT LINE</td><td>Other</td></tr>

		     <tr><td><code>0x00A0</code></td><td>NO-BREAK SPACE</td><td>Other</td></tr>

		  </table>



		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[charCode An integer that represents a character code.

		 Character codes are usually represented in hexadecimal format.

		 For example, the space character's character code can be

		 represented by the number <code>0x0020</code>.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[<code>true</code> if <code>charCode</code> is a whitespace character. 

		 ]]></return>
</method>
<field name='whiteSpaceObject' fullname='flashx.textLayout.utils:CharacterUtil/private:whiteSpaceObject' type='Object' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='CompositionAttributeRange' fullname='flash.text.ime:CompositionAttributeRange' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flash\text\ime\CompositionAttributeRange.as' namespace='flash.text.ime' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

The CompositionAttributeRange class represents a range of composition attributes for use with IME events. 

For example, when editing text in the IME, the text is divided by the IME into composition ranges.

These composition ranges are flagged as selected (i.e. currently being lengthened, shortened, or edited),

and/or converted (i.e. they have made one pass through the IME dictionary lookup already).


<p>By convention, the client should adorn these composition ranges with underlining or hiliting according to

the flags.</p>


<p>For example:</p>

<listing>

     !converted              = thick gray underline (raw text)

     !selected &#38;&#38; converted  = thin black underline

      selected &#38;&#38; converted  = thick black underline

</listing>

]]></description>
<langversion><![CDATA[3.0

]]></langversion>
<playerversion><![CDATA[Flash 10.1

 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

]]></playerversion>
</classRec>
<method name='CompositionAttributeRange' fullname='flash.text.ime:CompositionAttributeRange/CompositionAttributeRange' isStatic='false' isFinal='false' isOverride='false'  param_names='relativeStart;relativeEnd;selected;converted' param_types='int;int;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

	 Creates a CompositionAttributeRange object.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 

	 ]]></langversion>
<param><![CDATA[relativeStart  The zero based index of the first character included in the character range.

	 ]]></param>
<param><![CDATA[relativeEnd  The zero based index of the last character included in the character range.

	 ]]></param>
<param><![CDATA[selected  The selected flag

	 ]]></param>
<param><![CDATA[converted  The converted flag

	 
	 ]]></param>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
<tiptext><![CDATA[Constructor for CompositionAttributeRange objects.

	 ]]></tiptext>
</method>
<field name='converted' fullname='flash.text.ime:CompositionAttributeRange/converted' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[

	 The converted flag, meaning this clause has been processed by the IME

	 and is awaiting acceptance/confirmation by the user

	 

	 ]]></description>
<helpid><![CDATA[

	 

	 ]]></helpid>
<langversion><![CDATA[3.0

	 

	]]></langversion>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
</field>
<field name='relativeEnd' fullname='flash.text.ime:CompositionAttributeRange/relativeEnd' type='int' isStatic='false' isConst='false' >
<description><![CDATA[

	 The relative end of the composition clause, relative to the beginning

	 of the inline edit session.

	 i.e. 0 = the start of the text the IME can see (there may be text 

	 before that in the edit field)

	 

	 ]]></description>
<helpid><![CDATA[

	 

	 ]]></helpid>
<langversion><![CDATA[3.0

	 

	]]></langversion>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
</field>
<field name='relativeStart' fullname='flash.text.ime:CompositionAttributeRange/relativeStart' type='int' isStatic='false' isConst='false' >
<description><![CDATA[

	 The relative start from the beginning of the inline edit session

	 i.e. 0 = the start of the text the IME can see (there may be text 

	 before that in the edit field)

	 

	 ]]></description>
<helpid><![CDATA[

	 

	 ]]></helpid>
<langversion><![CDATA[3.0

	 

	]]></langversion>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
</field>
<field name='selected' fullname='flash.text.ime:CompositionAttributeRange/selected' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[

	 The selected flag, meaning this composition clause is active and 

	 being lengthened or shortened or edited with the IME, and the neighboring

	 clauses are not.

	 

	 ]]></description>
<helpid><![CDATA[

	 

	 ]]></helpid>
<langversion><![CDATA[3.0

	 

	]]></langversion>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
</field>
<interfaceRec name='IIMEClient' fullname='flash.text.ime:IIMEClient' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flash\text\ime\IIMEClient.as' namespace='flash.text.ime' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

Interface for IME (input method editor) clients.  Components based on the flash.text.engine package must implement 

this interface to support editing text inline using an IME. This interface is not used with TextField objects. 

TextLayoutFramework (TLF) uses this interface to support inline IME, so clients using TLF do not need to implement this 

interface. 

<p>To support inline IME, set the <code>imeClient</code> property of an <code>ImeEvent.IME_START_COMPOSITION</code> event to

an object which implements this interface.</p>


]]></description>
<langversion><![CDATA[3.0

]]></langversion>
<playerversion><![CDATA[Flash 10.1

]]></playerversion>
<playerversion><![CDATA[AIR 1.5

]]></playerversion>
<see><![CDATA[flash.text.ime.CompositionAttributeRange

]]></see>
<see><![CDATA[flash.events.ImeEvent:imeClient



]]></see>
<metadata>
	<Event owner='flash.text.ime:IIMEClient' name='textInput' type='flash.TextEvent.TEXT_INPUT' >
<description><![CDATA[

 Dispatched when the user enters text. For IME (input method editor) clients, the receiver should 

 insert the string contained in the event object's <code>text</code> property at the current insertion point.

 ]]></description>
<eventType><![CDATA[flash.events.TextEvent.TEXT_INPUT

 ]]></eventType>
<langversion><![CDATA[3.0

 ]]></langversion>
<playerversion><![CDATA[Flash 10

 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flash.text.ime:IIMEClient' name='imeStartComposition' type='flash.IMEEvent.IME_START_COMPOSITION' >
<description><![CDATA[

 Dispatched when the user begins to use an IME (input method editor).

 ]]></description>
<eventType><![CDATA[flash.events.IMEEvent.IME_START_COMPOSITION

 ]]></eventType>
<langversion><![CDATA[3.0

 ]]></langversion>
<playerversion><![CDATA[Flash 10

 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 ]]></playerversion>
	</Event>
</metadata>
</interfaceRec>
<method name='confirmComposition' fullname='flash.text.ime:IIMEClient/flash.text.ime:IIMEClient:confirmComposition' isStatic='false' isFinal='false' isOverride='false'  param_names='text;preserveSelection' param_types='String;Boolean' param_defaults='null;false' result_type='void'>
<description><![CDATA[

	Use this callback to end the inline editing session and confirm the text.

	

	]]></description>
<langversion><![CDATA[3.0

	

	]]></langversion>
<param><![CDATA[text  the final state of the text in the inline session (the text that got confirmed).

	]]></param>
<param><![CDATA[preserveSelection  when true, you should not reset the current selection to the end of the confirmed text.

	]]></param>
<playerversion><![CDATA[Flash 10.1

	]]></playerversion>
</method>
<method name='getTextBounds' fullname='flash.text.ime:IIMEClient/flash.text.ime:IIMEClient:getTextBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='startIndex;endIndex' param_types='int;int' param_defaults='undefined;undefined' result_type='flash.geom:Rectangle'>
<description><![CDATA[

	This callback is used by the IME to query the bounding box of the text being edited with the IME client.

	Use this method to place the candidate window and set the mouse cursor in the IME client when the mouse is over the 

	text field or other component that supports IME.

	

	]]></description>
<langversion><![CDATA[3.0

	

	]]></langversion>
<param><![CDATA[startIndex an integer that specifies the starting location of the range of text for which you need to measure the bounding box.

	]]></param>
<param><![CDATA[endIndex Optional; an integer that specifies the ending location of the range of text for which you need to measure the bounding box.

	
	]]></param>
<playerversion><![CDATA[Flash 10.1

	]]></playerversion>
<return><![CDATA[the bounding box of the specified range of text, or <code>null</code> if either or both of the indexes are invalid.

	The same value should be returned independant of whether <code>startIndex</code> is greater or less than <code>endIndex</code>.

	]]></return>
</method>
<method name='getTextInRange' fullname='flash.text.ime:IIMEClient/flash.text.ime:IIMEClient:getTextInRange' isStatic='false' isFinal='false' isOverride='false'  param_names='startIndex;endIndex' param_types='int;int' param_defaults='undefined;undefined' result_type='String'>
<description><![CDATA[ 

	 Gets the specified range of text from the component.  This method is called during IME reconversion.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<param><![CDATA[startIndex an integer that specifies the starting location of the range of text to be retrieved.

	 ]]></param>
<param><![CDATA[endIndex an integer that specifies the ending location of the range of text to be retrieved.

	 

	 ]]></param>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
<return><![CDATA[The requested text, or <code>null</code> if no text is available in the requested range

	 or if either or both of the indexes are invalid.  The same value should be returned 

	 independant of whether <code>startIndex</code> is greater or less than <code>endIndex</code>.

	 

	 ]]></return>
</method>
<method name='selectRange' fullname='flash.text.ime:IIMEClient/flash.text.ime:IIMEClient:selectRange' isStatic='false' isFinal='false' isOverride='false'  param_names='anchorIndex;activeIndex' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

	 Sets the range of selected text in the component.

	 If either of the arguments is out of bounds the selection should not be changed.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<param><![CDATA[anchorIndex The zero-based index value of the character at the anchor end of the selection

	 ]]></param>
<param><![CDATA[activeIndex The zero-based index value of the character at the active end of the selection.

	 

	 ]]></param>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
</method>
<method name='updateComposition' fullname='flash.text.ime:IIMEClient/flash.text.ime:IIMEClient:updateComposition' isStatic='false' isFinal='false' isOverride='false'  param_names='text;attributes;compositionStartIndex;compositionEndIndex' param_types='String;Vector$flash.text.ime:CompositionAttributeRange;int;int' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

	Callback for updating the contents of the inline editing session.

	This gets called whenever the text being edited with the IME has changed

	and its contents are used by the client to redraw the entire inline edit session.

	

	]]></description>
<langversion><![CDATA[3.0

	

	]]></langversion>
<param><![CDATA[text  contains the text of the inline edit session from the IME

	]]></param>
<param><![CDATA[attributes  contains an array of composition clauses with adornment info 

	]]></param>
<param><![CDATA[relativeSelectionStart  start of the inline session relative to the start of the text object

	]]></param>
<param><![CDATA[relativeSelectionEnd  end of the inline session relative to the start of the text object

	]]></param>
<playerversion><![CDATA[Flash 10.1

	]]></playerversion>
</method>
<method name='compositionEndIndex' fullname='flash.text.ime:IIMEClient/flash.text.ime:IIMEClient:compositionEndIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

	 The zero-based character index value of the end of the current edit session text (i.e.

	 all text in the inline session that is still not yet confirmed to the document).

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
<return><![CDATA[the index of the last character of the composition, or <code>-1</code> if there is no active composition.

	 

	 ]]></return>
</method>
<method name='compositionStartIndex' fullname='flash.text.ime:IIMEClient/flash.text.ime:IIMEClient:compositionStartIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

	 The zero-based character index value of the start of the current edit session text (i.e.

	 all text in the inline session that is still not yet confirmed to the document).

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
<return><![CDATA[the index of the first character of the composition, or <code>-1</code> if there is no active composition.

	 

	 ]]></return>
</method>
<method name='selectionActiveIndex' fullname='flash.text.ime:IIMEClient/flash.text.ime:IIMEClient:selectionActiveIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

	 The zero-based character index value of the last character in the current selection.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
<return><![CDATA[the index of the character at the active end of the selection, or <code>-1</code> if no text is selected.

	 

	 ]]></return>
</method>
<method name='selectionAnchorIndex' fullname='flash.text.ime:IIMEClient/flash.text.ime:IIMEClient:selectionAnchorIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

	 The zero-based character index value of the first character in the current selection.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
<return><![CDATA[the index of the character at the anchor end of the selection, or <code>-1</code> if no text is selected.

	 

	 ]]></return>
</method>
<method name='verticalTextLayout' fullname='flash.text.ime:IIMEClient/flash.text.ime:IIMEClient:verticalTextLayout/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

	 Indicates whether the text in the component is vertical or not.  This will affect the positioning

	 of the candidate window (beside vertical text, below horizontal text).

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10.1

	 ]]></playerversion>
<return><![CDATA[<code>true</code> if the text is vertical, otherwise false.

	 

	 ]]></return>
</method>
<classRec name='ColumnState' fullname='flashx.textLayout.container:ColumnState' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\container\ColumnState.as' namespace='flashx.textLayout.container' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The ColumnState class calculates the sizes and locations of columns using

	 the width of the container and the container attributes. You can create instances of this class 

	 independently to calculate column values, or you can get the column values that 

	 were used for the text after the container has been composed or updated (redrawn).

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[ContainerController

	 ]]></see>
</classRec>
<method name='ColumnState' fullname='flashx.textLayout.container:ColumnState/ColumnState' isStatic='false' isFinal='false' isOverride='false'  param_names='blockProgression;columnDirection;controller;compositionWidth;compositionHeight' param_types='String;String;flashx.textLayout.container:ContainerController;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 Constructor function - creates a ColumnState object.

		 
		 If the values of <code>controller.compositionWidth</code> and <code>controller.compositionHeight</code> equal

		 <code>NaN</code> (not a number), the constructor measures the container's contents to determine the actual 

		 composition width and height that feed into ColumnState.

		 
		 Use the constants defined by the <code>flashx.textLayout.formats.BlockProgression</code> class to 

		 specify the value of the <code>blockProgression</code> parameter. Use the constants defined by

		 <code>flashx.textLayout.formats.Direction</code> to specify the value of the <code>columnDirection</code> 

		 parameter.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[blockProgression The direction of lines for the textflow, either BlockProgression.TB (top-to-bottom) or 

		 		BlockProgression.RL (right-to-left).

		 ]]></param>
<param><![CDATA[columnDirection The direction of column layout for the text flow, either Direction.RTL (right-to-left) or 

		 		Direction.LTR (left-to-right).

		 ]]></param>
<param><![CDATA[controller A ContainerController instance whose attributes are used to calculate the column values.

		 ]]></param>
<param><![CDATA[compositionWidth The horizontal extent, in pixels, allowed for text inside the container.

		 ]]></param>
<param><![CDATA[compositionHeight The vertical extent, in pixels, allowed for text inside the container.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BlockProgression BlockProgression

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.Direction Direction

	 	 ]]></see>
</method>
<method name='computeColumns' fullname='flashx.textLayout.container:ColumnState/tlf_internal:computeColumns' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Compute the actual columns based on the input values ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getColumnAt' fullname='flashx.textLayout.container:ColumnState/getColumnAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='flash.geom:Rectangle'>
<description><![CDATA[ 

		 Returns the area that a column takes within the container. Allows you to access the area for a 

		 specific column.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[index The relative position of the column among all columns in the container, with the first

		 	column at position 0.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[The area of the specified column.

		 

		 ]]></return>
</method>
<method name='updateInputs' fullname='flashx.textLayout.container:ColumnState/tlf_internal:updateInputs' isStatic='false' isFinal='false' isOverride='false'  param_names='newBlockProgression;newColumnDirection;controller;newCompositionWidth;newCompositionHeight' param_types='String;String;flashx.textLayout.container:ContainerController;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ Recalculate actual column settings based on attributes and width

		 from the container. Call this after either the attributes or the

		 width has been changed to get the new values.

		 
		 ]]></description>
<param><![CDATA[newBlockProgression block progression for the textflow

		 ]]></param>
<param><![CDATA[newColumnDirection column layout direction for the textflow

		 ]]></param>
<param><![CDATA[containerAttr		Formatting attributes from the container

		 ]]></param>
<param><![CDATA[containerWidth		Width of the container

		 ]]></param>
<return><![CDATA[Boolean			true if the actual column settings have changed

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='columnCount' fullname='flashx.textLayout.container:ColumnState/columnCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The number of columns in the container. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='columnGap' fullname='flashx.textLayout.container:ColumnState/columnGap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 The amount of space, in pixels, left between columns in the container.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='columnWidth' fullname='flashx.textLayout.container:ColumnState/columnWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 The width of columns, in pixels, in the container. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<field name='_blockProgression' fullname='flashx.textLayout.container:ColumnState/private:_blockProgression' type='String' isStatic='false' isConst='false' >
</field>
<field name='_columnArray' fullname='flashx.textLayout.container:ColumnState/private:_columnArray' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_columnCount' fullname='flashx.textLayout.container:ColumnState/private:_columnCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_columnDirection' fullname='flashx.textLayout.container:ColumnState/private:_columnDirection' type='String' isStatic='false' isConst='false' >
</field>
<field name='_columnGap' fullname='flashx.textLayout.container:ColumnState/private:_columnGap' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_columnWidth' fullname='flashx.textLayout.container:ColumnState/private:_columnWidth' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_compositionHeight' fullname='flashx.textLayout.container:ColumnState/private:_compositionHeight' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_compositionWidth' fullname='flashx.textLayout.container:ColumnState/private:_compositionWidth' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_forceSingleColumn' fullname='flashx.textLayout.container:ColumnState/private:_forceSingleColumn' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_inputColumnCount' fullname='flashx.textLayout.container:ColumnState/private:_inputColumnCount' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_inputColumnGap' fullname='flashx.textLayout.container:ColumnState/private:_inputColumnGap' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_inputColumnWidth' fullname='flashx.textLayout.container:ColumnState/private:_inputColumnWidth' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_inputsChanged' fullname='flashx.textLayout.container:ColumnState/private:_inputsChanged' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_inset' fullname='flashx.textLayout.container:ColumnState/private:_inset' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_paddingBottom' fullname='flashx.textLayout.container:ColumnState/private:_paddingBottom' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_paddingLeft' fullname='flashx.textLayout.container:ColumnState/private:_paddingLeft' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_paddingRight' fullname='flashx.textLayout.container:ColumnState/private:_paddingRight' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_paddingTop' fullname='flashx.textLayout.container:ColumnState/private:_paddingTop' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_singleColumn' fullname='flashx.textLayout.container:ColumnState/private:_singleColumn' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
</field>
<classRec name='ScrollPolicy' fullname='flashx.textLayout.container:ScrollPolicy' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\container\ScrollPolicy.as' namespace='flashx.textLayout.container' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	  The ScrollPolicy class is an enumeration class that defines values for setting the <code>horizontalScrollPolicy</code> and 

	  <code>verticalScrollPolicy</code> properties of the ContainerController class, which defines a text flow 

	  container. 

	 
	  ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[ContainerController#horizontalScrollPolicy

	  ]]></see>
<see><![CDATA[ContainerController#verticalScrollPolicy

	 ]]></see>
</classRec>
<field name='AUTO' fullname='flashx.textLayout.container:ScrollPolicy/AUTO' type='String' isStatic='true' isConst='true' defaultValue='auto' >
<description><![CDATA[ 

		 Specifies that scrolling is to occur if the content exceeds the container's dimension. The runtime calculates 

		 the number of lines that overflow the container and the user can navigate to them with cursor keys, by drag selecting,

		 or by rotating the mouse wheel. You can also cause scrolling to occur by setting the corresponding position value, 

		 either <code>ContainerController.horizontalScrollPosition</code> or <code>ContainerController.verticalScrollPosition</code>. Also, the runtime can automatically 

		 scroll the contents of the container during editing.

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='OFF' fullname='flashx.textLayout.container:ScrollPolicy/OFF' type='String' isStatic='true' isConst='true' defaultValue='off' >
<description><![CDATA[ 

		 Causes the runtime to not display overflow lines, which means that the user cannot navigate to them. 

		 In this case, setting the corresponding <code>ContainerController.horizontalScrollPosition</code> and 

		 <code>ContainerController.verticalScrollPosition</code> properties have no effect. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='ON' fullname='flashx.textLayout.container:ScrollPolicy/ON' type='String' isStatic='true' isConst='true' defaultValue='on' >
<description><![CDATA[ 

		 Specifies that scrolling is available to access content that exceeds the container's dimension. The runtime calculates the 

		 number of lines that overflow the container and allows the user to scroll them into view with the cursor keys, by drag selecting, 

		 or by rotating the mouse wheel. You can also scroll by setting the corresponding position value, either 

		 <code>ContainerController.horizontalScrollPosition</code> or <code>ContainerController.verticalScrollPosition</code>. Also, the runtime can automatically scroll the contents 

		 of the container during editing.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='scrollPolicyPropertyDefinition' fullname='flashx.textLayout.container:ScrollPolicy/tlf_internal:scrollPolicyPropertyDefinition' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ Shared definition of the scrollPolicy property. ]]></description>
<private><![CDATA[]]></private>
</field>
<interfaceRec name='ISandboxSupport' fullname='flashx.textLayout.container:ISandboxSupport' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\container\ISandboxSupport.as' namespace='flashx.textLayout.container' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ Interface to support TLF content in a sub-application. When an application is loaded in an untrusted context,

	 mouse events that occur outside of the untrusted application's bounds are not delivered. Clients can handle this

	 by implementing ISandboxSupport. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.container.ContainerController

	 ]]></see>
<see><![CDATA[flashx.textLayout.container.TextContainerManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.SelectionManager

	 ]]></see>
<see><![CDATA[flash.system.SecurityDomain

	 ]]></see>
</interfaceRec>
<method name='beginMouseCapture' fullname='flashx.textLayout.container:ISandboxSupport/flashx.textLayout.container:ISandboxSupport:beginMouseCapture' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Called to request clients to begin the forwarding of mouseup and mousemove events from outside a security sandbox.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='endMouseCapture' fullname='flashx.textLayout.container:ISandboxSupport/flashx.textLayout.container:ISandboxSupport:endMouseCapture' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Called to inform clients that the the forwarding of mouseup and mousemove events from outside a security sandbox is no longer needed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='mouseMoveSomewhere' fullname='flashx.textLayout.container:ISandboxSupport/flashx.textLayout.container:ISandboxSupport:mouseMoveSomewhere' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Client call to forward a mouseMove event from outside a security sandbox.  Coordinates of the mouse move are not needed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='mouseUpSomewhere' fullname='flashx.textLayout.container:ISandboxSupport/flashx.textLayout.container:ISandboxSupport:mouseUpSomewhere' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Client call to forward a mouseUp event from outside a security sandbox.  Coordinates of the mouse up are not needed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<classRec name='ContainerController' fullname='flashx.textLayout.container:ContainerController' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\container\ContainerController.as' namespace='flashx.textLayout.container' access='public' baseclass='Object' interfaces='flashx.textLayout.edit:IInteractionEventHandler;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.container:ISandboxSupport' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The ContainerController class defines the relationship between a TextFlow object and a container.

	 A TextFlow may have one or more rectangular areas that can hold text; the text is said to be flowing

	 through the containers. Each container is a Sprite that is the parent DisplayObject for the TextLines.

	 Each container has a ContainerController that manages the container; the controller holds the target 

	 width and height for the text area, populates the container with TextLines, and handles scrolling. A

	 controller also has a format associated with it that allows some formatting attributes to be applied 

	 to the text in the container. This allows, for instance, a TextFlow to have one container where the

	 text appears in a single column, and a second container in the same TextFlow with two column text. Not

	 all formatting attributes that can be applied to the container will affect the text; only the ones that

	 affect container-level layout. The diagram below illustrates the relationship between the TextFlow,

	 its flowComposer, and the display list.

	 
	 <p><img src="../../../images/textLayout_multiController.gif" alt="IContainerController"></img></p>

	 
	 ]]></description>
<includeExample><![CDATA[examples\ContainerControllerExample1.as -noswf

	 ]]></includeExample>
<includeExample><![CDATA[examples\ContainerControllerExample2.as -noswf

	 
	 ]]></includeExample>
<langversion><![CDATA[3.0

	 
	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.IFlowComposer

	 ]]></see>
<see><![CDATA[flashx.textLayout.elements.TextFlow

	 ]]></see>
<see><![CDATA[flash.text.engine.TextLine

	 ]]></see>
</classRec>
<method name='ContainerController' fullname='flashx.textLayout.container:ContainerController/ContainerController' isStatic='false' isFinal='false' isOverride='false'  param_names='container;compositionWidth;compositionHeight' param_types='flash.display:Sprite;Number;Number' param_defaults='undefined;100;100' result_type='*'>
<description><![CDATA[ 

		 Constructor - creates a ContainerController instance. The ContainerController has a default <code>compositionWidth</code>

		 and <code>compositionHeight</code> so that some text appears in the container if you don't specify its width

		 height.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[container The DisplayObjectContainer in which to manage the text lines.

		 ]]></param>
<param><![CDATA[compositionWidth The initial width for composing text in the container.

		 ]]></param>
<param><![CDATA[compositionHeight The initial height for composing text in the container.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='activateHandler' fullname='flashx.textLayout.container:ContainerController/activateHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>Event.ACTIVATE</code> event when the client manages events.

		 
		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_activateHandlerExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The Event object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.Event#ACTIVATE Event.ACTIVATE

		 ]]></see>
</method>
<method name='addBackgroundShape' fullname='flashx.textLayout.container:ContainerController/protected:addBackgroundShape' isStatic='false' isFinal='false' isOverride='false'  param_names='shape' param_types='flash.display:Shape' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Adds a <code>flash.display.Shape</code> object on which background shapes (such as background color) are drawn.

		 The default implementation of this method, which may be overriden, adds the object to <code>container</code>

		 just before the first <code>flash.text.engine.TextLine</code> child, if one exists, and after the last exisiting

		 child otherwise. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[shape <code>flash.display.Shape</code> object to add

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.display.Shape

		 ]]></see>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
</method>
<method name='addComposedLine' fullname='flashx.textLayout.container:ContainerController/tlf_internal:addComposedLine' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='addFloatAt' fullname='flashx.textLayout.container:ContainerController/tlf_internal:addFloatAt' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition;float;floatType;x;y;alpha;matrix;depth;knockOutWidth;columnIndex;parent' param_types='int;flash.display:DisplayObject;String;Number;Number;Number;flash.geom:Matrix;Number;Number;int;flash.display:DisplayObjectContainer' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ Add new float info (called by composition when a float is composed into the container

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='addInlineGraphicElement' fullname='flashx.textLayout.container:ContainerController/protected:addInlineGraphicElement' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;inlineGraphicElement;index' param_types='flash.display:DisplayObjectContainer;flash.display:DisplayObject;int' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Adds a <code>flash.display.DisplayObject</code> object as a descendant of <code>parent</code>.

		 The default implementation of this method, which may be overriden, adds the object

		 as a direct child of <code>parent</code> at the specified index. This is called to add 

		 InlineGraphicElements to the TextLine or container.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[parent the <code>flash.display.DisplayObjectContainer</code> object to add the inlineGraphicElement to

		 ]]></param>
<param><![CDATA[inlineGraphicElement the <code>flash.display.DisplayObject</code> object to add

		 ]]></param>
<param><![CDATA[index insertion index of the float in its parent 

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
<see><![CDATA[flash.display.DisplayObjectContainer

		 ]]></see>
<see><![CDATA[flash.display.DisplayObject

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
</method>
<method name='addMouseWheelListener' fullname='flashx.textLayout.container:ContainerController/tlf_internal:addMouseWheelListener' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='addSelectionChild' fullname='flashx.textLayout.container:ContainerController/tlf_internal:addSelectionChild' isStatic='false' isFinal='false' isOverride='false'  param_names='child' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Add a selection child. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='addSelectionContainer' fullname='flashx.textLayout.container:ContainerController/protected:addSelectionContainer' isStatic='false' isFinal='false' isOverride='false'  param_names='selectionContainer' param_types='flash.display:DisplayObjectContainer' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Adds a <code>flash.display.DisplayObjectContainer</code> object to which selection shapes (such as block selection highlight, cursor etc.) are added.

		 The default implementation of this method, which may be overriden, has the following behavior:

		 The object is added just before first <code>flash.text.engine.TextLine</code> child of <code>container</code> if one exists 

		 and the object is opaque and has normal blend mode. 

		 In all other cases, it is added as the last child of <code>container</code>.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[selectionContainer <code>flash.display.DisplayObjectContainer</code> object to add

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.display.DisplayObjectContainer

		 ]]></see>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 ]]></see>
</method>
<method name='addSelectionShapes' fullname='flashx.textLayout.container:ContainerController/tlf_internal:addSelectionShapes' isStatic='false' isFinal='false' isOverride='false'  param_names='selFormat;selectionAbsoluteStart;selectionAbsoluteEnd' param_types='flashx.textLayout.edit:SelectionFormat;int;int' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ Add selection shapes to the displaylist. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='addTextLine' fullname='flashx.textLayout.container:ContainerController/protected:addTextLine' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine;index' param_types='flash.text.engine:TextLine;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Adds a <code>flash.text.engine.TextLine</code> object as a descendant of <code>container</code>.

		 The default implementation of this method, which may be overriden, adds the object

		 as a direct child of <code>container</code> at the specified index.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[textLine the <code>flash.text.engine.TextLine</code> object to add

		 ]]></param>
<param><![CDATA[index insertion index of the text line in its parent 

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
</method>
<method name='atomToRectangle' fullname='flashx.textLayout.container:ContainerController/private:atomToRectangle' isStatic='false' isFinal='false' isOverride='false'  param_names='atomIdx;line;textLine;blockProgression;isTCY' param_types='int;flashx.textLayout.compose:TextFlowLine;flash.text.engine:TextLine;String;Boolean' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='flash.geom:Rectangle'>
</method>
<method name='attachAllListeners' fullname='flashx.textLayout.container:ContainerController/private:attachAllListeners' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='attachContainer' fullname='flashx.textLayout.container:ContainerController/tlf_internal:attachContainer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='attachContextMenu' fullname='flashx.textLayout.container:ContainerController/tlf_internal:attachContextMenu' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='attachInteractionHandlers' fullname='flashx.textLayout.container:ContainerController/tlf_internal:attachInteractionHandlers' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='attachTransparentBackgroundForHit' fullname='flashx.textLayout.container:ContainerController/tlf_internal:attachTransparentBackgroundForHit' isStatic='false' isFinal='false' isOverride='false'  param_names='justClear' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ No mouse clicks or moves will be generated for the container unless it has a background covering its area.  Text Layout Framework

		 wants those events so that clicking on a container will select the text in it.  This code

		 adds or updates (on size change) that background for Sprite containers only. This may cause clients problems 

		 - definitely no hits is a problem - add this code to explore the issues - expect feedback.  

		 We may have to make this configurable. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='autoScrollIfNecessaryInternal' fullname='flashx.textLayout.container:ContainerController/private:autoScrollIfNecessaryInternal' isStatic='false' isFinal='false' isOverride='false'  param_names='extreme' param_types='flash.geom:Point' param_defaults='undefined' result_type='int'>
<description><![CDATA[ 

		 Handle a scroll event during a "drag" selection. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[mouseX	The horizontal position of the mouse cursor on the stage.

		 ]]></param>
<param><![CDATA[mouseY	The vertical position of the mouse cursor  on the stage.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<returns><![CDATA[positive number if scroll went forward in reading order, negative number if it went backwards, and 0 if no scroll

		 
		 ]]></returns>
</method>
<method name='autoScrollIfNecessary' fullname='flashx.textLayout.container:ContainerController/autoScrollIfNecessary' isStatic='false' isFinal='false' isOverride='false'  param_names='mouseX;mouseY' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 Handle a scroll event during a "drag" selection. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[mouseX	The horizontal position of the mouse cursor on the stage.

		 ]]></param>
<param><![CDATA[mouseY	The vertical position of the mouse cursor  on the stage.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='beginMouseCapture' fullname='flashx.textLayout.container:ContainerController/beginMouseCapture' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Called to request clients to begin the forwarding of mouseup and mousemove events from outside a security sandbox.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='blinkTimerHandler' fullname='flashx.textLayout.container:ContainerController/private:blinkTimerHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TimerEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='checkScrollBounds' fullname='flashx.textLayout.container:ContainerController/tlf_internal:checkScrollBounds' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearComposedLines' fullname='flashx.textLayout.container:ContainerController/tlf_internal:clearComposedLines' isStatic='false' isFinal='false' isOverride='false'  param_names='pos' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearCompositionResults' fullname='flashx.textLayout.container:ContainerController/tlf_internal:clearCompositionResults' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearFloatsAt' fullname='flashx.textLayout.container:ContainerController/tlf_internal:clearFloatsAt' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Remove float info for all floats after the given text position

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearSelectHandlers' fullname='flashx.textLayout.container:ContainerController/private:clearSelectHandlers' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='clearSelectionShapes' fullname='flashx.textLayout.container:ContainerController/tlf_internal:clearSelectionShapes' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Remove all selection shapes. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearStyle' fullname='flashx.textLayout.container:ContainerController/clearStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Clears the style specified by <code>styleProp</code> from this FlowElement. Sets the value to

		 <code>undefined</code>.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='computeHorizontalScrollPosition' fullname='flashx.textLayout.container:ContainerController/private:computeHorizontalScrollPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='x;okToCompose' param_types='Number;Boolean' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='computeLineBoundsWithGraphics' fullname='flashx.textLayout.container:ContainerController/private:computeLineBoundsWithGraphics' isStatic='false' isFinal='false' isOverride='false'  param_names='line;textLine;boundsRect' param_types='flashx.textLayout.compose:TextFlowLine;flash.text.engine:TextLine;flash.geom:Rectangle' param_defaults='undefined;undefined;undefined' result_type='flash.geom:Rectangle'>
</method>
<method name='computeScaledContentMeasure' fullname='flashx.textLayout.container:ContainerController/tlf_internal:computeScaledContentMeasure' isStatic='false' isFinal='false' isOverride='false'  param_names='measure' param_types='Number' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='computeVerticalScrollPosition' fullname='flashx.textLayout.container:ContainerController/private:computeVerticalScrollPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='y;okToCompose' param_types='Number;Boolean' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='containsSelectionChild' fullname='flashx.textLayout.container:ContainerController/tlf_internal:containsSelectionChild' isStatic='false' isFinal='false' isOverride='false'  param_names='child' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ Test for a selection child. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createContainerControllerInitialFormat' fullname='flashx.textLayout.container:ContainerController/private:createContainerControllerInitialFormat' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
</method>
<method name='createContextMenu' fullname='flashx.textLayout.container:ContainerController/protected:createContextMenu' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.ui:ContextMenu'>
<description><![CDATA[ 

		 Creates a context menu for the ContainerController. Use the methods of the ContextMenu class to 

		 add items to the menu.

		 <p>You can override this method to define a custom context menu.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.ui.ContextMenu ContextMenu

		 ]]></see>
</method>
<method name='createDefaultContextMenu' fullname='flashx.textLayout.container:ContainerController/tlf_internal:createDefaultContextMenu' isStatic='true' isFinal='false' isOverride='false'  result_type='flash.ui:ContextMenu'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='deactivateHandler' fullname='flashx.textLayout.container:ContainerController/deactivateHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>Event.DEACTIVATE</code> event when the client manages events. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[event The Event object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.Event#DEACTIVATE Event.DEACTIVATE

		 ]]></see>
</method>
<method name='detachContainer' fullname='flashx.textLayout.container:ContainerController/private:detachContainer' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='drawPointSelection' fullname='flashx.textLayout.container:ContainerController/tlf_internal:drawPointSelection' isStatic='false' isFinal='false' isOverride='false'  param_names='selFormat;x;y;w;h' param_types='flashx.textLayout.edit:SelectionFormat;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ Draw the caret for a selection 

		 ]]></description>
<param><![CDATA[x	x-location where caret is drawn

		 ]]></param>
<param><![CDATA[y y-location where caret is drawn

		 ]]></param>
<param><![CDATA[w	width of caret

		 ]]></param>
<param><![CDATA[h	height of caret

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='editHandler' fullname='flashx.textLayout.container:ContainerController/editHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Processes an edit event (CUT, COPY, PASTE, SELECT_ALL) when the client manages events.

		 

		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_editHandlerExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[The Event object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.Event Event

		 ]]></see>
</method>
<method name='endMouseCapture' fullname='flashx.textLayout.container:ContainerController/endMouseCapture' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Called to inform clients that the the forwarding of mouseup and mousemove events from outside a security sandbox is no longer needed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='fillShapeChildren' fullname='flashx.textLayout.container:ContainerController/tlf_internal:fillShapeChildren' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ determines the shapechildren in the container and applies VJ. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='findFloatIndexAfter' fullname='flashx.textLayout.container:ContainerController/tlf_internal:findFloatIndexAfter' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='findFloatIndexAtOrAfter' fullname='flashx.textLayout.container:ContainerController/tlf_internal:findFloatIndexAtOrAfter' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[ 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='floatIsVisible' fullname='flashx.textLayout.container:ContainerController/private:floatIsVisible' isStatic='false' isFinal='false' isOverride='false'  param_names='wmode;scrollX;scrollY;scrollWidth;scrollHeight;floatInfo' param_types='String;Number;Number;Number;Number;flashx.textLayout.compose:FloatCompositionData' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='Boolean'>
</method>
<method name='focusChangeHandler' fullname='flashx.textLayout.container:ContainerController/focusChangeHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes the <code>FocusEvent.KEY_FOCUS_CHANGE</code> and <code>FocusEvent.MOUSE_FOCUS_CHANGE</code> events

		 when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The FocusEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.FocusEvent#KEY_FOCUS_CHANGE FocusEvent.KEY_FOCUS_CHANGE

		 ]]></see>
<see><![CDATA[flash.events.FocusEvent#MOUSE_FOCUS_CHANGE FocusEvent.MOUSE_FOCUS_CHANGE

		 ]]></see>
</method>
<method name='focusInHandler' fullname='flashx.textLayout.container:ContainerController/focusInHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>FocusEvent.FOCUS_IN</code> event when the client manages events.

		 
		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_focusInHandlerExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The FocusEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.FocusEvent#FOCUS_IN FocusEvent.FOCUS_IN

		 ]]></see>
</method>
<method name='focusOutHandler' fullname='flashx.textLayout.container:ContainerController/focusOutHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>FocusEvent.FOCUS_OUT</code> event when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The FocusEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.FocusEvent#FOCUS_OUT FocusEvent.FOCUS_OUT

		 ]]></see>
</method>
<method name='formatChanged' fullname='flashx.textLayout.container:ContainerController/tlf_internal:formatChanged' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ called whenever the container attributes are changed.  Mark computed attributes and columnstate as out of date. 

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='gatherVisibleLines' fullname='flashx.textLayout.container:ContainerController/tlf_internal:gatherVisibleLines' isStatic='false' isFinal='false' isOverride='false'  param_names='wmode;createShape' param_types='String;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getBackgroundShape' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getBackgroundShape' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:Shape'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getContainerController' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getContainerController' isStatic='false' isFinal='false' isOverride='false'  param_names='container' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='flashx.textLayout.container:ContainerController'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getContainerRoot' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getContainerRoot' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObject'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getContentBounds' fullname='flashx.textLayout.container:ContainerController/getContentBounds' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Rectangle'>
<description><![CDATA[ 

		 Returns the area that the text occupies, as reflected by the last compose or update operation. 

		 The width and the height might be estimated, if the container is scrollable and the text exceeds the 

		 visible area.

		 

		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_getContentBoundsExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[describes the area that the text occupies.

		 
		 ]]></return>
<see><![CDATA[flash.geom.Rectangle Rectangle

		 ]]></see>
</method>
<method name='getEffectivePaddingBottom' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getEffectivePaddingBottom' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingLeft' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getEffectivePaddingLeft' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingRight' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getEffectivePaddingRight' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getEffectivePaddingTop' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getEffectivePaddingTop' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getFirstTextLineChildIndex' fullname='flashx.textLayout.container:ContainerController/protected:getFirstTextLineChildIndex' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[

		 Gets the index at which the first text line must appear in its parent.

		 The default implementation of this method, which may be overriden, returns the child index 

		 of the first <code>flash.text.engine.TextLine</code> child of <code>container</code>

		 if one exists, and that of the last child of <code>container</code> otherwise. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[the index at which the first text line must appear in its parent.

		 

		 ]]></return>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 ]]></see>
</method>
<method name='getFirstVisibleLine' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getFirstVisibleLine' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:TextFlowLine'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getFloatAtPosition' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getFloatAtPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='absolutePosition' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.compose:FloatCompositionData'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getFloatAt' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getFloatAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.compose:FloatCompositionData'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getInteractionHandler' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getInteractionHandler' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:IInteractionEventHandler'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getLastVisibleLine' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getLastVisibleLine' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:TextFlowLine'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getPlacedTextLineBounds' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getPlacedTextLineBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='flash.geom:Rectangle'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getScrollDelta' fullname='flashx.textLayout.container:ContainerController/getScrollDelta' isStatic='false' isFinal='false' isOverride='false'  param_names='numLines' param_types='int' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ 

		 Figure out the scroll distance required to scroll up or down by the specified number of lines.

		 Negative numbers scroll upward, bringing more of the top of the TextFlow into view. Positive numbers 

		 scroll downward, bringing the next line from the bottom into full view.

		 

		 <p>When scrolling up, for example, the method makes the next line fully visible. If the next line is partially

		 obscured and the number of lines specified is 1, the partially obscured line becomes fully visible.</p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[nLines	The number of lines to scroll.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[the delta amount of space to scroll

		 
		 ]]></return>
</method>
<method name='getSelectionSprite' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getSelectionSprite' isStatic='false' isFinal='false' isOverride='false'  param_names='createForDrawing' param_types='Boolean' param_defaults='undefined' result_type='flash.display:DisplayObjectContainer'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getStyle' fullname='flashx.textLayout.container:ContainerController/getStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp' param_types='String' param_defaults='undefined' result_type='*'>
<description><![CDATA[ Returns the value of the style specified by the <code>styleProp</code> parameter.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[styleProp The name of the style property whose value you want.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[The current value for the specified style.

		 
		 ]]></return>
</method>
<method name='getTotalPaddingBottom' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getTotalPaddingBottom' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getTotalPaddingLeft' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getTotalPaddingLeft' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getTotalPaddingRight' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getTotalPaddingRight' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getTotalPaddingTop' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getTotalPaddingTop' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getUserStyleWorker' fullname='flashx.textLayout.container:ContainerController/tlf_internal:getUserStyleWorker' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp' param_types='String' param_defaults='undefined' result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hitOnMyFlowExceptLastContainer' fullname='flashx.textLayout.container:ContainerController/private:hitOnMyFlowExceptLastContainer' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='imeStartCompositionHandler' fullname='flashx.textLayout.container:ContainerController/imeStartCompositionHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:IMEEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>IMEEvent.IME_START_COMPOSITION</code> event when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[event  The IMEEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.IMEEvent.IME_START_COMPOSITION

		 ]]></see>
</method>
<method name='initialize' fullname='flashx.textLayout.container:ContainerController/private:initialize' isStatic='false' isFinal='false' isOverride='false'  param_names='container;compositionWidth;compositionHeight' param_types='flash.display:Sprite;Number;Number' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='interactionManagerChanged' fullname='flashx.textLayout.container:ContainerController/tlf_internal:interactionManagerChanged' isStatic='false' isFinal='false' isOverride='false'  param_names='newInteractionManager' param_types='flashx.textLayout.edit:ISelectionManager' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='invalidateContents' fullname='flashx.textLayout.container:ContainerController/invalidateContents' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Marks all the text in this container as needing composing. 

		 
		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_invalidateContentsExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='isDamaged' fullname='flashx.textLayout.container:ContainerController/isDamaged' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Determines whether the container has text that requires composing. 

		 
		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_isDamagedExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true if the container requires composing.

		 
		 ]]></return>
</method>
<method name='keyDownHandler' fullname='flashx.textLayout.container:ContainerController/keyDownHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>KeyboardEvent.KEY_DOWN</code> event when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[The KeyboardEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.KeyboardEvent#KEY_DOWN KeyboardEvent.KEY_DOWN

		 ]]></see>
</method>
<method name='keyFocusChangeHandler' fullname='flashx.textLayout.container:ContainerController/keyFocusChangeHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>FocusEvent.KEY_FOCUS_CHANGE</code> event when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The FocusEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.FocusEvent#KEY_FOCUS_CHANGE FocusEvent.KEY_FOCUS_CHANGE

		 ]]></see>
</method>
<method name='keyUpHandler' fullname='flashx.textLayout.container:ContainerController/keyUpHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>Keyboard.KEY_UP</code> event when the client manages events.

		 
		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_keyUpHandlerExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The KeyboardEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.KeyboardEvent#KEY_UP KeyboardEvent.KEY_UP

		 ]]></see>
</method>
<method name='menuSelectHandler' fullname='flashx.textLayout.container:ContainerController/menuSelectHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:ContextMenuEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes the <code>ContextMenuEvent.MENU_SELECT</code> event when the client manages events.

		 

		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_menuSelectHandlerExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[The ContextMenuEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.ContextMenuEvent#MENU_SELECT ContextMenuEvent.MENU_SELECT

		 ]]></see>
</method>
<method name='modelChanged' fullname='flashx.textLayout.container:ContainerController/tlf_internal:modelChanged' isStatic='false' isFinal='false' isOverride='false'  param_names='changeType;element;changeStart;changeLen;needNormalize;bumpGeneration' param_types='String;flashx.textLayout.container:ContainerController;int;int;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined;true;true' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='mouseDoubleClickHandler' fullname='flashx.textLayout.container:ContainerController/mouseDoubleClickHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>MouseEvent.DOUBLE_CLICK</code> event when the client manages events.

		 
		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_mouseDoubleClickHandlerExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The MouseEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#DOUBLE_CLICK MouseEvent.DOUBLE_CLICK

		 ]]></see>
</method>
<method name='mouseDownHandler' fullname='flashx.textLayout.container:ContainerController/mouseDownHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>MouseEvent.MOUSE_DOWN</code> event when the client manages events. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The MouseEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_DOWN MouseEvent.MOUSE_DOWN

		 ]]></see>
</method>
<method name='mouseMoveHandler' fullname='flashx.textLayout.container:ContainerController/mouseMoveHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes the <code>MouseEvent.MOUSE_MOVE</code> event when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The MouseEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_MOVE MouseEvent.MOUSE_MOVE

		 ]]></see>
</method>
<method name='mouseMoveSomewhere' fullname='flashx.textLayout.container:ContainerController/mouseMoveSomewhere' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Client call to forward a mouseMove event from outside a security sandbox.  Coordinates of the mouse move are not needed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='mouseOutHandler' fullname='flashx.textLayout.container:ContainerController/mouseOutHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>MouseEvent.MOUSE_OUT</code> event when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The MouseEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_OUT MouseEvent.MOUSE_OUT

		 ]]></see>
</method>
<method name='mouseOverHandler' fullname='flashx.textLayout.container:ContainerController/mouseOverHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes the <code>MouseEvent.MOUSE_OVER</code> event when the client manages events. 

		 
		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_mouseOverHandlerExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The MouseEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_OVER MouseEvent.MOUSE_OVER

		 ]]></see>
</method>
<method name='mouseUpHandler' fullname='flashx.textLayout.container:ContainerController/mouseUpHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Processes the <code>MouseEvent.MOUSE_UP</code> event when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The MouseEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_UP MouseEvent.MOUSE_UP

		 
		 ]]></see>
</method>
<method name='mouseUpSomewhere' fullname='flashx.textLayout.container:ContainerController/mouseUpSomewhere' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Client call to forward a mouseUp event from outside a security sandbox.  Coordinates of the mouse up are not needed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='mouseWheelHandler' fullname='flashx.textLayout.container:ContainerController/mouseWheelHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>MouseEvent.MOUSE_WHEEL</code> event when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[event The MouseEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_WHEEL MouseEvent.MOUSE_WHEEL

		 ]]></see>
</method>
<method name='oldTestLineVisible' fullname='flashx.textLayout.container:ContainerController/tlf_internal:oldTestLineVisible' isStatic='false' isFinal='false' isOverride='false'  param_names='wmode;scrollXTW;scrollYTW;scrollWidthTW;scrollHeightTW;textFlowLine;textLine' param_types='String;int;int;int;int;flashx.textLayout.compose:TextFlowLine;flash.text.engine:TextLine' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='flash.text.engine:TextLine'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='pinValue' fullname='flashx.textLayout.container:ContainerController/private:pinValue' isStatic='true' isFinal='false' isOverride='false'  param_names='value;minimum;maximum' param_types='Number;Number;Number' param_defaults='undefined;undefined;undefined' result_type='Number'>
</method>
<method name='rangeToRectangle' fullname='flashx.textLayout.container:ContainerController/private:rangeToRectangle' isStatic='false' isFinal='false' isOverride='false'  param_names='start;end;startLineIndex;endLineIndex' param_types='int;int;int;int' param_defaults='undefined;undefined;undefined;undefined' result_type='flash.geom:Rectangle'>
</method>
<method name='releaseLinesInBlock' fullname='flashx.textLayout.container:ContainerController/private:releaseLinesInBlock' isStatic='false' isFinal='false' isOverride='false'  param_names='textBlock' param_types='flash.text.engine:TextBlock' param_defaults='undefined' result_type='void'>
</method>
<method name='removeAndRecycleTextLines' fullname='flashx.textLayout.container:ContainerController/private:removeAndRecycleTextLines' isStatic='false' isFinal='false' isOverride='false'  param_names='beginIndex;endIndex' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='removeBackgroundShape' fullname='flashx.textLayout.container:ContainerController/protected:removeBackgroundShape' isStatic='false' isFinal='false' isOverride='false'  param_names='shape' param_types='flash.display:Shape' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Removes a <code>flash.display.Shape</code> object on which background shapes (such as background color) are drawn.

		 The default implementation of this method, which may be overriden, removes the object from its <code>parent</code>.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[shape <code>flash.display.Shape</code> object to remove

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.display.Shape

		 ]]></see>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
</method>
<method name='removeContextMenu' fullname='flashx.textLayout.container:ContainerController/tlf_internal:removeContextMenu' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeInlineGraphicElement' fullname='flashx.textLayout.container:ContainerController/protected:removeInlineGraphicElement' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;inlineGraphicElement' param_types='flash.display:DisplayObjectContainer;flash.display:DisplayObject' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Removes a <code>flash.display.DisplayObject</code> object from its parent. 

		 The default implementation of this method, which may be overriden, removes the object

		 from <code>container</code> if it is a direct child of the latter.

		 

		 This method may be called even if the object is not a descendant of <code>parent</code>.

		 Any implementation of this method must ensure that no action is taken in this case.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[float the <code>flash.display.DisplayObject</code> object to remove 

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
<see><![CDATA[flash.display.DisplayObjectContainer

		 ]]></see>
<see><![CDATA[flash.display.DisplayObject

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
</method>
<method name='removeInteractionHandlers' fullname='flashx.textLayout.container:ContainerController/tlf_internal:removeInteractionHandlers' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeMouseWheelListener' fullname='flashx.textLayout.container:ContainerController/tlf_internal:removeMouseWheelListener' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeSelectionContainer' fullname='flashx.textLayout.container:ContainerController/protected:removeSelectionContainer' isStatic='false' isFinal='false' isOverride='false'  param_names='selectionContainer' param_types='flash.display:DisplayObjectContainer' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Removes the <code>flash.display.DisplayObjectContainer</code> object which contains selection shapes (such as block selection highlight, cursor etc.).

		 The default implementation of this method, which may be overriden, removes the object from its parent if one exists.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[selectionContainer <code>flash.display.DisplayObjectContainer</code> object to remove

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.display.DisplayObjectContainer

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
</method>
<method name='removeTextLine' fullname='flashx.textLayout.container:ContainerController/protected:removeTextLine' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Removes a <code>flash.text.engine.TextLine</code> object from its parent. 

		 The default implementation of this method, which may be overriden, removes the object

		 from <code>container</code> if it is a direct child of the latter.

		 

		 This method may be called even if the object is not a descendant of <code>container</code>.

		 Any implementation of this method must ensure that no action is taken in this case.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[textLine the <code>flash.text.engine.TextLine</code> object to remove 

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
</method>
<method name='requiredFocusInHandler' fullname='flashx.textLayout.container:ContainerController/tlf_internal:requiredFocusInHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='requiredFocusOutHandler' fullname='flashx.textLayout.container:ContainerController/tlf_internal:requiredFocusOutHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<see><![CDATA[#focusOutHandler ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='requiredMouseDownHandler' fullname='flashx.textLayout.container:ContainerController/tlf_internal:requiredMouseDownHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<see><![CDATA[#mouseDownHandler ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='requiredMouseOverHandler' fullname='flashx.textLayout.container:ContainerController/tlf_internal:requiredMouseOverHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<see><![CDATA[#mouseOverHandler ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='resetColumnState' fullname='flashx.textLayout.container:ContainerController/tlf_internal:resetColumnState' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='rootMouseMoveHandler' fullname='flashx.textLayout.container:ContainerController/tlf_internal:rootMouseMoveHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='rootMouseUpHandler' fullname='flashx.textLayout.container:ContainerController/tlf_internal:rootMouseUpHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='scrollTimerHandler' fullname='flashx.textLayout.container:ContainerController/tlf_internal:scrollTimerHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='scrollToRange' fullname='flashx.textLayout.container:ContainerController/scrollToRange' isStatic='false' isFinal='false' isOverride='false'  param_names='activePosition;anchorPosition' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 Scrolls so that the text range is visible in the container.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[activePosition	The end of the selection that is changed when you extend the selection. It can be

		 	either the start or the end of the selection, expressed as an offset from the start of the text flow.

		 ]]></param>
<param><![CDATA[anchorPosition   	The stable end of the selection when you extend the selection. It can be either 

		 	the start or the end of the selection.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='selectRange' fullname='flashx.textLayout.container:ContainerController/selectRange' isStatic='false' isFinal='false' isOverride='false'  param_names='anchorIndex;activeIndex' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 Sets the range of selected text in a component implementing ITextSupport.

		 If either of the arguments is out of bounds the selection should not be changed.

		 Components which wish to support inline IME should call into this method.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[anchorIndex The zero-based index value of the character at the anchor end of the selection

		 
		 ]]></param>
<param><![CDATA[activeIndex The zero-based index value of the character at the active end of the selection.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10.0

		 ]]></playerversion>
</method>
<method name='setBlinkInterval' fullname='flashx.textLayout.container:ContainerController/protected:setBlinkInterval' isStatic='false' isFinal='false' isOverride='false'  param_names='intervalMS' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Set the blink interval.

		 

		 ]]></description>
<param><![CDATA[intervalMS - number of microseconds between blinks

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='setCompositionSize' fullname='flashx.textLayout.container:ContainerController/setCompositionSize' isStatic='false' isFinal='false' isOverride='false'  param_names='w;h' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 Sets the width and height allowed for text in the container. Width and height can be specified in pixels or <code>NaN</code> can be used for either value.  <code>NaN</code> indicates measure that value. 

		 This can be used to find the widest line and/or the total height of all the content.  When NaN is specified as the width lines are broken with a maximum width of <code>TextLine.MAX_LINE_WIDTH</code>. 

		 When <code>NaN</code> is specified as the height the container is assumed to have unlimited height.  The actual measured values can be ready back in <code>getContentBounds</code>.  

		 When the computed <code>blockProgression</code> property of <code>TextFlow</code>

		 is <code>BlockProgression.RL</code> the meanings of width and height are exchanged.

		 
		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_setCompositionSizeExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[w The width in pixels that's available for text in the container.  <code>NaN</code> indicates no specified width.  

		 ]]></param>
<param><![CDATA[h The height in pixels that's available for text in the container.   <code>NaN</code> indicates no specified height.  

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextLine#MAX_LINE_WIDTH

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.BlockProgression

		 ]]></see>
<see><![CDATA[#getContentBounds()

		 
		 ]]></see>
</method>
<method name='setContentBounds' fullname='flashx.textLayout.container:ContainerController/tlf_internal:setContentBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='contentLeft;contentTop;contentWidth;contentHeight' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setFocus' fullname='flashx.textLayout.container:ContainerController/tlf_internal:setFocus' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Give focus to the text container. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setRootElement' fullname='flashx.textLayout.container:ContainerController/tlf_internal:setRootElement' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:ContainerFormattedElement' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Protected method used when updating the rootElement. 

		 ]]></description>
<param><![CDATA[value new container to be controlled

		 

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='setStyle' fullname='flashx.textLayout.container:ContainerController/setStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='styleProp;newValue' param_types='String;*' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 Sets the value of the style specified by the <code>styleProp</code> parameter to the value

		 specified by the <code>newValue</code> parameter.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[styleProp The name of the style property whose value you want to set.

		 ]]></param>
<param><![CDATA[newValue The value that you want to assign to the style.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='setTextLengthOnly' fullname='flashx.textLayout.container:ContainerController/tlf_internal:setTextLengthOnly' isStatic='false' isFinal='false' isOverride='false'  param_names='numChars' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setTextLength' fullname='flashx.textLayout.container:ContainerController/tlf_internal:setTextLength' isStatic='false' isFinal='false' isOverride='false'  param_names='numChars' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='softKeyboardActivatingHandler' fullname='flashx.textLayout.container:ContainerController/softKeyboardActivatingHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING</code> event when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[event  The SoftKeyboardEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10.2

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.SoftKeyboardEvent#SOFT_KEYBOARD_ACTIVATING SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING

		 ]]></see>
</method>
<method name='startBlinkingCursor' fullname='flashx.textLayout.container:ContainerController/private:startBlinkingCursor' isStatic='false' isFinal='false' isOverride='false'  param_names='obj;blinkInterval' param_types='flash.display:DisplayObject;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Starts a DisplayObject cursor blinking by changing its alpha value

		 over time.

		 

		 ]]></description>
<param><![CDATA[obj The DisplayObject to use as the cursor.

		 

		 ]]></param>
</method>
<method name='stopBlinkingCursor' fullname='flashx.textLayout.container:ContainerController/protected:stopBlinkingCursor' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Stops cursor from blinking

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='styleSelectorChanged' fullname='flashx.textLayout.container:ContainerController/tlf_internal:styleSelectorChanged' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ This gets called when an element has changed its style selection related attributes. This may happen because an

		 ancestor element changed it attributes.

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='testLineVisible' fullname='flashx.textLayout.container:ContainerController/tlf_internal:testLineVisible' isStatic='false' isFinal='false' isOverride='false'  param_names='wmode;scrollXTW;scrollYTW;scrollWidthTW;scrollHeightTW;textFlowLine;textLine' param_types='String;int;int;int;int;flashx.textLayout.compose:TextFlowLine;flash.text.engine:TextLine' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
<returns><![CDATA[-1 BEFORE visible, TextLine visible, 1 AFTER visible, 2 AFTER visible by auto-size image(bug #2988852)

		 ]]></returns>
</method>
<method name='textInputHandler' fullname='flashx.textLayout.container:ContainerController/textInputHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TextEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>TextEvent.TEXT_INPUT</code> event when the client manages events.

		 
		 ]]></description>
<includeExample><![CDATA[examples\ContainerController_textInputHandlerExample.as -noswf

		 
		 ]]></includeExample>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[event  The TextEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.TextEvent#TEXT_INPUT TextEvent.TEXT_INPUT

		 ]]></see>
</method>
<method name='updateCompositionShapes' fullname='flashx.textLayout.container:ContainerController/tlf_internal:updateCompositionShapes' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Add DisplayObjects that were created by composition to the container. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='updateForScroll' fullname='flashx.textLayout.container:ContainerController/private:updateForScroll' isStatic='false' isFinal='false' isOverride='false'  param_names='direction;delta' param_types='String;Number' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='updateGraphics' fullname='flashx.textLayout.container:ContainerController/tlf_internal:updateGraphics' isStatic='false' isFinal='false' isOverride='false'  param_names='updateStart' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='updateVisibleRectangle' fullname='flashx.textLayout.container:ContainerController/protected:updateVisibleRectangle' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 If scrolling, sets the scroll rectangle to the container rectangle so that any lines that are 

		 halfway in view are clipped to the scrollable region. If not scrolling, clear the

		 scroll rectangle so that no clipping occurs.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='writableTextLayoutFormat' fullname='flashx.textLayout.container:ContainerController/private:writableTextLayoutFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowValueHolder'>
</method>
<method name='absoluteStart' fullname='flashx.textLayout.container:ContainerController/absoluteStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 Returns the first character in the container. If this is not the first container in the flow,

		 this value is updated when the text is composed, that is when the IFlowComposer's <code>compose()</code> or 

		 <code>updateAllControllers()</code> methods are called.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.IFlowComposer

		 ]]></see>
</method>
<method name='alignmentBaseline' fullname='flashx.textLayout.container:ContainerController/alignmentBaseline/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the baseline to which the dominant baseline aligns. For example, if you set <code>dominantBaseline</code> to ASCENT, setting <code>alignmentBaseline</code> to DESCENT aligns the top of the text with the DESCENT baseline, or below the line.  The largest element in the line generally determines the baselines.<p><img src='../../../images/textLayout_baselines.jpg' alt='baselines' /></p>

		 <p>Legal values are TextBaseline.ROMAN, TextBaseline.ASCENT, TextBaseline.DESCENT, TextBaseline.IDEOGRAPHIC_TOP, TextBaseline.IDEOGRAPHIC_CENTER, TextBaseline.IDEOGRAPHIC_BOTTOM, TextBaseline.USE_DOMINANT_BASELINE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextBaseline.USE_DOMINANT_BASELINE.</p>

		 ]]></description>
<includeExample><![CDATA[examples\TextLayoutFormat_alignmentBaselineExample.as -noswf

		 

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextBaseline

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='allListenersAttached' fullname='flashx.textLayout.container:ContainerController/tlf_internal:allListenersAttached/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='attachTransparentBackground' fullname='flashx.textLayout.container:ContainerController/protected:attachTransparentBackground/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='backgroundAlpha' fullname='flashx.textLayout.container:ContainerController/backgroundAlpha/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Alpha (transparency) value for the background (adopts default value if undefined during cascade). A value of 0 is fully transparent, and a value of 1 is fully opaque. Display objects with alpha set to 0 are active, even though they are invisible.

		 <p>Legal values are numbers from 0 to 1 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of 1.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='backgroundColor' fullname='flashx.textLayout.container:ContainerController/backgroundColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Background color of the text (adopts default value if undefined during cascade). Can be either the constant value  <code>BackgroundColor.TRANSPARENT</code>, or a hexadecimal value that specifies the three 8-bit RGB (red, green, blue) values; for example, 0xFF0000 is red and 0x00FF00 is green.

		 <p>Legal values as a string are BackgroundColor.TRANSPARENT, FormatValue.INHERIT and uints from 0x0 to 0xffffffff.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BackgroundColor.TRANSPARENT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BackgroundColor

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='baselineShift' fullname='flashx.textLayout.container:ContainerController/baselineShift/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Amount to shift the baseline from the <code>dominantBaseline</code> value. Units are in pixels, or a percentage of <code>fontSize</code> (in which case, enter a string value, like 140%).  Positive values shift the line up for horizontal text (right for vertical) and negative values shift it down for horizontal (left for vertical). 

		 <p>Legal values are BaselineShift.SUPERSCRIPT, BaselineShift.SUBSCRIPT, FormatValue.INHERIT.</p>

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000 to 1000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BaselineShift

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='blockProgression' fullname='flashx.textLayout.container:ContainerController/blockProgression/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies a vertical or horizontal progression of line placement.

		 Lines are either placed top-to-bottom (<code>BlockProgression.TB</code>, used for horizontal text) or right-to-left (<code>BlockProgression.RL</code>, used for vertical text).

		 <p>Legal values are BlockProgression.RL, BlockProgression.TB, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BlockProgression.TB.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BlockProgression

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='breakOpportunity' fullname='flashx.textLayout.container:ContainerController/breakOpportunity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls where lines are allowed to break when breaking wrapping text into multiple lines. Set to <code>BreakOpportunity.AUTO</code> to break text normally. Set to <code>BreakOpportunity.NONE</code> to <em>not</em> break the text unless the text would overrun the measure and there are no other places to break the line. Set to <code>BreakOpportunity.ANY</code> to allow the line to break anywhere, rather than just between words. Set to <code>BreakOpportunity.ALL</code> to have each typographic cluster put on a separate line (useful for text on a path).

		 <p>Legal values are BreakOpportunity.ALL, BreakOpportunity.ANY, BreakOpportunity.AUTO, BreakOpportunity.NONE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BreakOpportunity.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.BreakOpportunity

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='cffHinting' fullname='flashx.textLayout.container:ContainerController/cffHinting/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The type of CFF hinting used for this text. CFF hinting determines whether the Flash runtime forces strong horizontal stems to fit to a sub pixel grid or not. This property applies only if the <code>renderingMode</code> property is set to <code>RenderingMode.CFF</code>, and the font is embedded (<code>fontLookup</code> property is set to <code>FontLookup.EMBEDDED_CFF</code>). At small screen sizes, hinting produces a clear, legible text for human readers.

		 <p>Legal values are CFFHinting.NONE, CFFHinting.HORIZONTAL_STEM, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of CFFHinting.HORIZONTAL_STEM.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.CFFHinting

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='clearFloats' fullname='flashx.textLayout.container:ContainerController/clearFloats/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls how text wraps around a float. A value of none allows the text to wrap most closely around a float. A value of left causes the text to skip over any portion of the container that has a left float, and a value of right causes the text to skip over any portion of the container that has a right float. A value of both causes the text to skip over any floats.

		 <p>Legal values are ClearFloats.START, ClearFloats.END, ClearFloats.LEFT, ClearFloats.RIGHT, ClearFloats.BOTH, ClearFloats.NONE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of ClearFloats.NONE.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ClearFloats

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.ClearFloats

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='color' fullname='flashx.textLayout.container:ContainerController/color/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Color of the text. A hexadecimal number that specifies three 8-bit RGB (red, green, blue) values; for example, 0xFF0000 is red and 0x00FF00 is green. It can also be enum value {BLACK, GREEN, GRAY, BLUE, SILVER, LIME, OLIVE, WHITE, YELLOW, MAROON, NAVY, RED, PURPLE, TEAL, FUCHSIA, AQUA, MAGENTA, CYAN}

		 <p>Legal values as a string are ColorName.BLACK, ColorName.GREEN, ColorName.GRAY, ColorName.BLUE, ColorName.SILVER, ColorName.LIME, ColorName.OLIVE, ColorName.WHITE, ColorName.YELLOW, ColorName.MAROON, ColorName.NAVY, ColorName.RED, ColorName.PURPLE, ColorName.TEAL, ColorName.FUCHSIA, ColorName.AQUA, ColorName.MAGENTA, ColorName.CYAN, FormatValue.INHERIT and uints from 0x0 to 0xffffffff.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ColorName

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnBreakAfter' fullname='flashx.textLayout.container:ContainerController/columnBreakAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls column after before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnBreakBefore' fullname='flashx.textLayout.container:ContainerController/columnBreakBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls column break before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnCount' fullname='flashx.textLayout.container:ContainerController/columnCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Number of text columns (adopts default value if undefined during cascade).

		 The column number overrides the  other column settings. Value is an integer, or <code>FormatValue.AUTO</code> if unspecified. If <code>columnCount</code> is not specified,<code>columnWidth</code> is used to create as many columns as can fit in the container.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and from ints from 1 to 50.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnGap' fullname='flashx.textLayout.container:ContainerController/columnGap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade).

		 Value is a Number

		 <p>Legal values are numbers from 0 to 1000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of 20.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='columnState' fullname='flashx.textLayout.container:ContainerController/columnState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.container:ColumnState'>
<description><![CDATA[ 

		 Returns a ColumnState object, which describes the number and characteristics of columns in

		 the container. These values are updated when the text is recomposed, either as a result

		 of <code>IFlowComposer.compose()</code> or <code>IFlowComposer.updateAllControllers()</code>.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[ColumnState

		 ]]></see>
</method>
<method name='columnWidth' fullname='flashx.textLayout.container:ContainerController/columnWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Column width in pixels (adopts default value if undefined during cascade).

		 If you specify the width of the columns, but not the count, TextLayout will create as many columns of that width as possible, given the  container width and <code>columnGap</code> settings. Any remainder space is left after the last column. Value is a Number.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from 0 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='composedLines' fullname='flashx.textLayout.container:ContainerController/tlf_internal:composedLines/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='compositionHeight' fullname='flashx.textLayout.container:ContainerController/compositionHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 Returns the vertical extent allowed for text inside the container. The value is specified in pixels.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[#setCompositionSize()

		 ]]></see>
</method>
<method name='compositionWidth' fullname='flashx.textLayout.container:ContainerController/compositionWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 Returns the horizontal extent allowed for text inside the container. The value is specified in pixels.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[#setCompositionSize()

		 ]]></see>
</method>
<method name='computedFormat' fullname='flashx.textLayout.container:ContainerController/computedFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 Returns an ITextLayoutFormat instance with the attributes applied to this container, including the attributes inherited from its

		 root element.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[object that describes the container's attributes.

		 
		 ]]></return>
<see><![CDATA[#rootElement

		 ]]></see>
</method>
<method name='containerBreakAfter' fullname='flashx.textLayout.container:ContainerController/containerBreakAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls container after before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='containerBreakBefore' fullname='flashx.textLayout.container:ContainerController/containerBreakBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls container break before the element.

		 <p>Legal values are BreakStyle.AUTO, BreakStyle.ALWAYS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of BreakStyle.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BreakStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='containerControllerInitialFormat' fullname='flashx.textLayout.container:ContainerController/containerControllerInitialFormat/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		]]></description>
<langversion><![CDATA[3.0

		
		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow TextFlow

		]]></see>
<private><![CDATA[]]></private>
</method>
<method name='containerScrollRectBottom' fullname='flashx.textLayout.container:ContainerController/private:containerScrollRectBottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='containerScrollRectLeft' fullname='flashx.textLayout.container:ContainerController/private:containerScrollRectLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='containerScrollRectRight' fullname='flashx.textLayout.container:ContainerController/private:containerScrollRectRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='containerScrollRectTop' fullname='flashx.textLayout.container:ContainerController/private:containerScrollRectTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='container' fullname='flashx.textLayout.container:ContainerController/container/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:Sprite'>
<description><![CDATA[ 

		 Returns the container display object that holds the text lines for this ContainerController instance. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[#ContainerController()

		 ]]></see>
</method>
<method name='contentHeight' fullname='flashx.textLayout.container:ContainerController/tlf_internal:contentHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<private><![CDATA[]]></private>
</method>
<method name='contentLeft' fullname='flashx.textLayout.container:ContainerController/tlf_internal:contentLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='contentTop' fullname='flashx.textLayout.container:ContainerController/tlf_internal:contentTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='contentWidth' fullname='flashx.textLayout.container:ContainerController/tlf_internal:contentWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<private><![CDATA[]]></private>
</method>
<method name='coreStyles' fullname='flashx.textLayout.container:ContainerController/coreStyles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Returns the <code>coreStyles</code> on this ContainerController.  Note that the getter makes a copy of the core 

		 styles dictionary. The returned object includes the formats that are defined by TextLayoutFormat and are in TextLayoutFormat.description. The

		 returned object consists of an array of <em>stylename-value</em> pairs.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat

		 

		 ]]></see>
</method>
<method name='digitCase' fullname='flashx.textLayout.container:ContainerController/digitCase/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The type of digit case used for this text. Setting the value to <code>DigitCase.OLD_STYLE</code> approximates lowercase letterforms with varying ascenders and descenders. The figures are proportionally spaced. This style is only available in selected typefaces, most commonly in a supplemental or expert font. The <code>DigitCase.LINING</code> setting has all-cap height and is typically monospaced to line up in charts.<p><img src='../../../images/textLayout_digitcase.gif' alt='digitCase' /></p>

		 <p>Legal values are DigitCase.DEFAULT, DigitCase.LINING, DigitCase.OLD_STYLE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of DigitCase.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.DigitCase

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='digitWidth' fullname='flashx.textLayout.container:ContainerController/digitWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Type of digit width used for this text. This can be <code>DigitWidth.PROPORTIONAL</code>, which looks best for individual numbers, or <code>DigitWidth.TABULAR</code>, which works best for numbers in tables, charts, and vertical rows.<p><img src='../../../images/textLayout_digitwidth.gif' alt='digitWidth' /></p>

		 <p>Legal values are DigitWidth.DEFAULT, DigitWidth.PROPORTIONAL, DigitWidth.TABULAR, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of DigitWidth.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.DigitWidth

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='direction' fullname='flashx.textLayout.container:ContainerController/direction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the default bidirectional embedding level of the text in the text block. 

		 Left-to-right reading order, as in Latin-style scripts, or right-to-left reading order, as in Arabic or Hebrew. This property also affects column direction when it is applied at the container level. Columns can be either left-to-right or right-to-left, just like text. Below are some examples:<p><img src='../../../images/textLayout_direction.gif' alt='direction' /></p>

		 <p>Legal values are Direction.LTR, Direction.RTL, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Direction.LTR.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.Direction

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='dominantBaseline' fullname='flashx.textLayout.container:ContainerController/dominantBaseline/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies which element baseline snaps to the <code>alignmentBaseline</code> to determine the vertical position of the element on the line. A value of <code>TextBaseline.AUTO</code> selects the dominant baseline based on the <code>locale</code> property of the parent paragraph.  For Japanese and Chinese, the selected baseline value is <code>TextBaseline.IDEOGRAPHIC_CENTER</code>; for all others it is <code>TextBaseline.ROMAN</code>. These baseline choices are determined by the choice of font and the font size.<p><img src='../../../images/textLayout_baselines.jpg' alt='baselines' /></p>

		 <p>Legal values are FormatValue.AUTO, TextBaseline.ROMAN, TextBaseline.ASCENT, TextBaseline.DESCENT, TextBaseline.IDEOGRAPHIC_TOP, TextBaseline.IDEOGRAPHIC_CENTER, TextBaseline.IDEOGRAPHIC_BOTTOM, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextBaseline

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='effectiveBlockProgression' fullname='flashx.textLayout.container:ContainerController/tlf_internal:effectiveBlockProgression/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='finalParcelStart' fullname='flashx.textLayout.container:ContainerController/tlf_internal:finalParcelStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='firstBaselineOffset' fullname='flashx.textLayout.container:ContainerController/firstBaselineOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the baseline position of the first line in the container. Which baseline this property refers to depends on the container-level locale.  For Japanese and Chinese, it is <code>TextBaseline.IDEOGRAPHIC_BOTTOM</code>; for all others it is <code>TextBaseline.ROMAN</code>.

		 The offset from the top inset (or right inset if <code>blockProgression</code> is RL) of the container to the baseline of the first line can be either <code>BaselineOffset.ASCENT</code>, meaning equal to the ascent of the line, <code>BaselineOffset.LINE_HEIGHT</code>, meaning equal to the height of that first line, or any fixed-value number to specify an absolute distance. <code>BaselineOffset.AUTO</code> aligns the ascent of the line with the container top inset.<p><img src='../../../images/textLayout_FBO1.png' alt='firstBaselineOffset1' /><img src='../../../images/textLayout_FBO2.png' alt='firstBaselineOffset2' /><img src='../../../images/textLayout_FBO3.png' alt='firstBaselineOffset3' /><img src='../../../images/textLayout_FBO4.png' alt='firstBaselineOffset4' /></p>

		 <p>Legal values as a string are BaselineOffset.AUTO, BaselineOffset.ASCENT, BaselineOffset.LINE_HEIGHT, FormatValue.INHERIT and numbers from 0 to 1000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of BaselineOffset.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.BaselineOffset

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='flowComposer' fullname='flashx.textLayout.container:ContainerController/flowComposer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:IFlowComposer'>
<description><![CDATA[ 

		 Returns the flow composer object that composes and highlights text into the container that this 

		 controller manages. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.IFlowComposer

		 ]]></see>
</method>
<method name='fontFamily' fullname='flashx.textLayout.container:ContainerController/fontFamily/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		  The name of the font to use, or a comma-separated list of font names. The Flash runtime renders the element with the first available font in the list. For example Arial, Helvetica, _sans causes the player to search for Arial, then Helvetica if Arial is not found, then _sans if neither is found.

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Arial.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontLookup' fullname='flashx.textLayout.container:ContainerController/fontLookup/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Font lookup to use. Specifying <code>FontLookup.DEVICE</code> uses the fonts installed on the system that is running the SWF file. Device fonts result in a smaller movie size, but text is not always rendered the same across different systems and platforms. Specifying <code>FontLookup.EMBEDDED_CFF</code> uses font outlines embedded in the published SWF file. Embedded fonts increase the size of the SWF file (sometimes dramatically), but text is consistently displayed in the chosen font.

		 <p>Legal values are FontLookup.DEVICE, FontLookup.EMBEDDED_CFF, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontLookup.DEVICE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontLookup

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontSize' fullname='flashx.textLayout.container:ContainerController/fontSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The size of the text in pixels.

		 <p>Legal values are numbers from 1 to 720 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 12.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontStyle' fullname='flashx.textLayout.container:ContainerController/fontStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Style of text. May be <code>FontPosture.NORMAL</code>, for use in plain text, or <code>FontPosture.ITALIC</code> for italic. This property applies only to device fonts (<code>fontLookup</code> property is set to flash.text.engine.FontLookup.DEVICE).

		 <p>Legal values are FontPosture.NORMAL, FontPosture.ITALIC, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontPosture.NORMAL.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontPosture

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='fontWeight' fullname='flashx.textLayout.container:ContainerController/fontWeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Weight of text. May be <code>FontWeight.NORMAL</code> for use in plain text, or <code>FontWeight.BOLD</code>. Applies only to device fonts (<code>fontLookup</code> property is set to flash.text.engine.FontLookup.DEVICE).

		 <p>Legal values are FontWeight.NORMAL, FontWeight.BOLD, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FontWeight.NORMAL.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.FontWeight

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='formatForCascade' fullname='flashx.textLayout.container:ContainerController/tlf_internal:formatForCascade/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='format' fullname='flashx.textLayout.container:ContainerController/format/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 Stores the ITextLayoutFormat object that contains the attributes for this container. 

		 The controller inherits the container properties from the TextFlow of which it is part. 

		 This property allows different controllers in the same text flow to have, for example, 

		 different column settings or padding.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ITextLayoutFormat

		 ]]></see>
</method>
<method name='hasScrollRect' fullname='flashx.textLayout.container:ContainerController/tlf_internal:hasScrollRect/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 ]]></description>
<return><![CDATA[true if the controller has attached a ScrollRect instance.

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='horizontalScrollPolicy' fullname='flashx.textLayout.container:ContainerController/horizontalScrollPolicy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 Specifies the horizontal scrolling policy, which you can set by assigning one of the constants of

		 the ScrollPolicy class: ON, OFF, or AUTO.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[ScrollPolicy

		 ]]></see>
</method>
<method name='horizontalScrollPosition' fullname='flashx.textLayout.container:ContainerController/horizontalScrollPosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Specifies the current horizontal scroll location on the stage. The value specifies the number of

		 pixels from the left.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='interactionManager' fullname='flashx.textLayout.container:ContainerController/interactionManager/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:ISelectionManager'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flashx.textLayout.elements.TextFlow#interactionManager

		 
		 ]]></copy>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow#interactionManager

		 ]]></see>
</method>
<method name='interactiveObjects' fullname='flashx.textLayout.container:ContainerController/tlf_internal:interactiveObjects/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:Dictionary'>
</method>
<method name='justificationRule' fullname='flashx.textLayout.container:ContainerController/justificationRule/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Rule used to justify text in a paragraph.

		 Default value is <code>FormatValue.AUTO</code>, which justifies text based on the paragraph's <code>locale</code> property. For all languages except Japanese and Chinese, <code>FormatValue.AUTO</code> becomes <code>JustificationRule.SPACE</code>, which adds extra space to the space characters.  For Japanese and Chinese, <code>FormatValue.AUTO</code> becomes <code>JustficationRule.EAST_ASIAN</code>. In part, justification changes the spacing of punctuation. In Roman text the comma and Japanese periods take a full character's width but in East Asian text only half of a character's width. Also, in the East Asian text the spacing between sequential punctuation marks becomes tighter, obeying traditional East Asian typographic conventions. Note, too, in the example below the leading that is applied to the second line of the paragraphs. In the East Asian version, the last two lines push left. In the Roman version, the second and following lines push left.<p><img src='../../../images/textLayout_justificationrule.png' alt='justificationRule' /></p>

		 <p>Legal values are JustificationRule.EAST_ASIAN, JustificationRule.SPACE, FormatValue.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.JustificationRule

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='justificationStyle' fullname='flashx.textLayout.container:ContainerController/justificationStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The style used for justification of the paragraph. Used only in conjunction with a <code>justificationRule</code> setting of <code>JustificationRule.EAST_ASIAN</code>.

		 Default value of <code>FormatValue.AUTO</code> is resolved to <code>JustificationStyle.PUSH_IN_KINSOKU</code> for all locales.  The constants defined by the JustificationStyle class specify options for handling kinsoku characters, which are Japanese characters that cannot appear at either the beginning or end of a line. If you want looser text, specify <code>JustificationStyle.PUSH-OUT-ONLY</code>. If you want behavior that is like what you get with the  <code>justificationRule</code> of <code>JustificationRule.SPACE</code>, use <code>JustificationStyle.PRIORITIZE-LEAST-ADJUSTMENT</code>.

		 <p>Legal values are JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT, JustificationStyle.PUSH_IN_KINSOKU, JustificationStyle.PUSH_OUT_ONLY, FormatValue.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of FormatValue.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.JustificationStyle

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='kerning' fullname='flashx.textLayout.container:ContainerController/kerning/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Kerning adjusts the pixels between certain character pairs to improve readability. Kerning is supported for all fonts with kerning tables.

		 <p>Legal values are Kerning.ON, Kerning.OFF, Kerning.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of Kerning.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.Kerning

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='leadingModel' fullname='flashx.textLayout.container:ContainerController/leadingModel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the leading model, which is a combination of leading basis and leading direction.

		 Leading basis is the baseline to which the <code>lineHeight</code> property refers. Leading direction determines whether the <code>lineHeight</code> property refers to the distance of a line's baseline from that of the line before it or the line after it. The default value of <code>FormatValue.AUTO</code> is resolved based on the paragraph's <code>locale</code> property.  For Japanese and Chinese, it is <code>LeadingModel.IDEOGRAPHIC_TOP_DOWN</code> and for all others it is <code>LeadingModel.ROMAN_UP</code>.<p><strong>Leading Basis:</strong></p><p><img src='../../../images/textLayout_LB1.png' alt='leadingBasis1' />    <img src='../../../images/textLayout_LB2.png' alt='leadingBasis2' />    <img src='../../../images/textLayout_LB3.png' alt='leadingBasis3' /></p><p><strong>Leading Direction:</strong></p><p><img src='../../../images/textLayout_LD1.png' alt='leadingDirection1' />    <img src='../../../images/textLayout_LD2.png' alt='leadingDirection2' />    <img src='../../../images/textLayout_LD3.png' alt='leadingDirection3' /></p>

		 <p>Legal values are LeadingModel.ROMAN_UP, LeadingModel.IDEOGRAPHIC_TOP_UP, LeadingModel.IDEOGRAPHIC_CENTER_UP, LeadingModel.IDEOGRAPHIC_TOP_DOWN, LeadingModel.IDEOGRAPHIC_CENTER_DOWN, LeadingModel.APPROXIMATE_TEXT_FIELD, LeadingModel.ASCENT_DESCENT_UP, LeadingModel.BOX, LeadingModel.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of LeadingModel.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.LeadingModel

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='ligatureLevel' fullname='flashx.textLayout.container:ContainerController/ligatureLevel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls which of the ligatures that are defined in the font may be used in the text. The ligatures that appear for each of these settings is dependent on the font. A ligature occurs where two or more letter-forms are joined as a single glyph. Ligatures usually replace consecutive characters sharing common components, such as the letter pairs 'fi', 'fl', or 'ae'. They are used with both Latin and Non-Latin character sets. The ligatures enabled by the values of the LigatureLevel class - <code>MINIMUM</code>, <code>COMMON</code>, <code>UNCOMMON</code>, and <code>EXOTIC</code> - are additive. Each value enables a new set of ligatures, but also includes those of the previous types.<p><b>Note: </b>When working with Arabic or Syriac fonts, <code>ligatureLevel</code> must be set to MINIMUM or above.</p><p><img src='../../../images/textLayout_ligatures.png' alt='ligatureLevel' /></p>

		 <p>Legal values are LigatureLevel.MINIMUM, LigatureLevel.COMMON, LigatureLevel.UNCOMMON, LigatureLevel.EXOTIC, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of LigatureLevel.COMMON.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.LigatureLevel

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineBreak' fullname='flashx.textLayout.container:ContainerController/lineBreak/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Controls word wrapping within the container (adopts default value if undefined during cascade).

		 Text in the container may be set to fit the width of the container (<code>LineBreak.TO_FIT</code>), or can be set to break only at explicit return or line feed characters (<code>LineBreak.EXPLICIT</code>).

		 <p>Legal values are LineBreak.EXPLICIT, LineBreak.TO_FIT, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of LineBreak.TO_FIT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.LineBreak

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineHeight' fullname='flashx.textLayout.container:ContainerController/lineHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Leading controls for the text. The distance from the baseline of the previous or the next line (based on <code>LeadingModel</code>) to the baseline of the current line is equal to the maximum amount of the leading applied to any character in the line. This is either a number or a percent.  If specifying a percent, enter a string value, like 140%.<p><img src='../../../images/textLayout_lineHeight1.jpg' alt='lineHeight1' /><img src='../../../images/textLayout_lineHeight2.jpg' alt='lineHeight2' /></p>

		 <p>Legal values as a number are from -720 to 720.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 120%.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='lineThrough' fullname='flashx.textLayout.container:ContainerController/lineThrough/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 If <code>true</code>, applies strikethrough, a line drawn through the middle of the text.

		 <p>Legal values are true, false and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of false.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkActiveFormat' fullname='flashx.textLayout.container:ContainerController/linkActiveFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Defines the formatting attributes used for links in normal state. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkHoverFormat' fullname='flashx.textLayout.container:ContainerController/linkHoverFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Defines the formatting attributes used for links in hover state, when the mouse is within the bounds (rolling over) a link. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='linkNormalFormat' fullname='flashx.textLayout.container:ContainerController/linkNormalFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Defines the formatting attributes used for links in normal state. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>ITextLayoutFormat</code> or converts an array of objects with key and value as members to a TextLayoutFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listAutoPadding' fullname='flashx.textLayout.container:ContainerController/listAutoPadding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 This specifies an auto indent for the start edge of lists when the padding value of the list on that side is <code>auto</code>.

		 <p>Legal values are numbers from -1000 to 1000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 40.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listMarkerFormat' fullname='flashx.textLayout.container:ContainerController/listMarkerFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Defines the formatting attributes list markers. This value will cascade down the hierarchy and apply to any links that are descendants.

		 Accepts <code>inherit</code>, an <code>IListMarkerFormat</code> or converts an array of objects with key and value as members to a ListMarkerFormat.

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listStylePosition' fullname='flashx.textLayout.container:ContainerController/listStylePosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 <p>Legal values are ListStylePosition.INSIDE, ListStylePosition.OUTSIDE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of ListStylePosition.OUTSIDE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ListStylePosition

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='listStyleType' fullname='flashx.textLayout.container:ContainerController/listStyleType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 <p>Legal values are ListStyleType.UPPER_ALPHA, ListStyleType.LOWER_ALPHA, ListStyleType.UPPER_ROMAN, ListStyleType.LOWER_ROMAN, ListStyleType.NONE, ListStyleType.DISC, ListStyleType.CIRCLE, ListStyleType.SQUARE, ListStyleType.BOX, ListStyleType.CHECK, ListStyleType.DIAMOND, ListStyleType.HYPHEN, ListStyleType.ARABIC_INDIC, ListStyleType.BENGALI, ListStyleType.DECIMAL, ListStyleType.DECIMAL_LEADING_ZERO, ListStyleType.DEVANAGARI, ListStyleType.GUJARATI, ListStyleType.GURMUKHI, ListStyleType.KANNADA, ListStyleType.PERSIAN, ListStyleType.THAI, ListStyleType.URDU, ListStyleType.CJK_EARTHLY_BRANCH, ListStyleType.CJK_HEAVENLY_STEM, ListStyleType.HANGUL, ListStyleType.HANGUL_CONSTANT, ListStyleType.HIRAGANA, ListStyleType.HIRAGANA_IROHA, ListStyleType.KATAKANA, ListStyleType.KATAKANA_IROHA, ListStyleType.LOWER_ALPHA, ListStyleType.LOWER_GREEK, ListStyleType.LOWER_LATIN, ListStyleType.UPPER_ALPHA, ListStyleType.UPPER_GREEK, ListStyleType.UPPER_LATIN, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of ListStyleType.DISC.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.ListStyleType

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='locale' fullname='flashx.textLayout.container:ContainerController/locale/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The locale of the text. Controls case transformations and shaping. Standard locale identifiers as described in Unicode Technical Standard #35 are used. For example en, en_US and en-US are all English, ja is Japanese. 

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of en.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='measureHeight' fullname='flashx.textLayout.container:ContainerController/tlf_internal:measureHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='measureWidth' fullname='flashx.textLayout.container:ContainerController/tlf_internal:measureWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='numFloats' fullname='flashx.textLayout.container:ContainerController/tlf_internal:numFloats/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='oldInteractiveObjects' fullname='flashx.textLayout.container:ContainerController/tlf_internal:oldInteractiveObjects/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='paddingBottom' fullname='flashx.textLayout.container:ContainerController/paddingBottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Bottom inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45.  (adopts default value if undefined during cascade).

		 Space between the bottom edge of the container and the text.  Value is a Number  or auto. <p> With horizontal text, in scrollable containers with multiple columns, the first and following columns will show the padding as blank space at the bottom of the container, but for the last column, if the text doesn't all fit, you may have to scroll in order to see the padding.</p>

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingLeft' fullname='flashx.textLayout.container:ContainerController/paddingLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Left inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the left edge of the container and the text.  Value is a Number or auto.<p> With vertical text, in scrollable containers with multiple columns, the first and following columns will show the padding as blank space at the end of the container, but for the last column, if the text doesn't all fit, you may have to scroll in order to see the padding.</p>

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingRight' fullname='flashx.textLayout.container:ContainerController/paddingRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Right inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the right edge of the container and the text.  Value is a Number or auto. 

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paddingTop' fullname='flashx.textLayout.container:ContainerController/paddingTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Top inset in pixels.  Default of auto is zero except in lists which get a start side padding of 45. (adopts default value if undefined during cascade).

		 Space between the top edge of the container and the text.  Value is a Number or auto.

		 <p>Legal values as a string are FormatValue.AUTO, FormatValue.INHERIT and numbers from -8000 to 8000.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of FormatValue.AUTO.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.Configuration#autoListElementStartPadding

		 

		 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphEndIndent' fullname='flashx.textLayout.container:ContainerController/paragraphEndIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 A Number that specifies, in pixels, the amount to indent the paragraph's end edge. Refers to the right edge in left-to-right text and the left edge in right-to-left text. 

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphSpaceAfter' fullname='flashx.textLayout.container:ContainerController/paragraphSpaceAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 A Number that specifies the amount of space, in pixels, to leave after the paragraph.

		 Collapses in tandem with  <code>paragraphSpaceBefore</code>.

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphSpaceBefore' fullname='flashx.textLayout.container:ContainerController/paragraphSpaceBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 A Number that specifies the amount of space, in pixels, to leave before the paragraph. 

		 Collapses in tandem with <code>paragraphSpaceAfter</code>.

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='paragraphStartIndent' fullname='flashx.textLayout.container:ContainerController/paragraphStartIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 A Number that specifies, in pixels, the amount to indent the paragraph's start edge. Refers to the left edge in left-to-right text and the right edge in right-to-left text. 

		 <p>Legal values are numbers from 0 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='renderingMode' fullname='flashx.textLayout.container:ContainerController/renderingMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The rendering mode used for this text.  Applies only to embedded fonts (<code>fontLookup</code> property is set to <code>FontLookup.EMBEDDED_CFF</code>).

		 <p>Legal values are RenderingMode.NORMAL, RenderingMode.CFF, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of RenderingMode.CFF.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.RenderingMode

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='rootElement' fullname='flashx.textLayout.container:ContainerController/rootElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:ContainerFormattedElement'>
<description><![CDATA[ 

		 Returns the root element that appears in the container. The root element could be a DivElement or TextFlow

		 instance, for example.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.ContainerFormattedElement

		 ]]></see>
<see><![CDATA[flashx.textLayout.elements.DivElement

		 ]]></see>
<see><![CDATA[flashx.textLayout.elements.TextFlow

		 ]]></see>
</method>
<method name='shapesInvalid' fullname='flashx.textLayout.container:ContainerController/tlf_internal:shapesInvalid/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='styleName' fullname='flashx.textLayout.container:ContainerController/styleName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Assigns an identifying class to the element, making it possible to set a style for the element by referencing the <code>styleName</code>.

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of null.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='styles' fullname='flashx.textLayout.container:ContainerController/styles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Returns the styles on this ContainerController.  Note that the getter makes a copy of the  

		 styles dictionary. The returned object includes all styles set in the format property including core and user styles. The

		 returned object consists of an array of <em>stylename-value</em> pairs.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat

		 

		 ]]></see>
</method>
<method name='tabStops' fullname='flashx.textLayout.container:ContainerController/tabStops/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the tab stops associated with the paragraph.

		 Setters can take an array of TabStopFormat, a condensed string representation, undefined, or <code>FormatValue.INHERIT</code>. The condensed string representation is always converted into an array of TabStopFormat. <p>The string-based format is a list of tab stops, where each tab stop is delimited by one or more spaces.</p><p>A tab stop takes the following form: &lt;alignment type&gt;&lt;alignment position&gt;|&lt;alignment token&gt;.</p><p>The alignment type is a single character, and can be S, E, C, or D (or lower-case equivalents). S or s for start, E or e for end, C or c for center, D or d for decimal. The alignment type is optional, and if its not specified will default to S.</p><p>The alignment position is a Number, and is specified according to FXG spec for Numbers (decimal or scientific notation). The alignment position is required.</p><p>The vertical bar is used to separate the alignment position from the alignment token, and should only be present if the alignment token is present.</p><p> The alignment token is optional if the alignment type is D, and should not be present if the alignment type is anything other than D. The alignment token may be any sequence of characters terminated by the space that ends the tab stop (for the last tab stop, the terminating space is optional; end of alignment token is implied). A space may be part of the alignment token if it is escaped with a backslash (\ ). A backslash may be part of the alignment token if it is escaped with another backslash (\\). If the alignment type is D, and the alignment token is not specified, it will take on the default value of null.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of null.</p>

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TabStopFormat

		 

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlignLast' fullname='flashx.textLayout.container:ContainerController/textAlignLast/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Alignment of the last (or only) line in the paragraph relative to the container in justified text.

		 If <code>textAlign</code> is set to <code>TextAlign.JUSTIFY</code>, <code>textAlignLast</code> specifies how the last line (or only line, if this is a one line block) is aligned. Values are similar to <code>textAlign</code>.

		 <p>Legal values are TextAlign.LEFT, TextAlign.RIGHT, TextAlign.CENTER, TextAlign.JUSTIFY, TextAlign.START, TextAlign.END, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextAlign.START.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlign' fullname='flashx.textLayout.container:ContainerController/textAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Alignment of lines in the paragraph relative to the container.

		 <code>TextAlign.LEFT</code> aligns lines along the left edge of the container. <code>TextAlign.RIGHT</code> aligns on the right edge. <code>TextAlign.CENTER</code> positions the line equidistant from the left and right edges. <code>TextAlign.JUSTIFY</code> spreads the lines out so they fill the space. <code>TextAlign.START</code> is equivalent to setting left in left-to-right text, or right in right-to-left text. <code>TextAlign.END</code> is equivalent to setting right in left-to-right text, or left in right-to-left text.

		 <p>Legal values are TextAlign.LEFT, TextAlign.RIGHT, TextAlign.CENTER, TextAlign.JUSTIFY, TextAlign.START, TextAlign.END, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextAlign.START.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textAlpha' fullname='flashx.textLayout.container:ContainerController/textAlpha/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Alpha (transparency) value for the text. A value of 0 is fully transparent, and a value of 1 is fully opaque. Display objects with <code>textAlpha</code> set to 0 are active, even though they are invisible.

		 <p>Legal values are numbers from 0 to 1 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 1.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textDecoration' fullname='flashx.textLayout.container:ContainerController/textDecoration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Decoration on text. Use to apply underlining; default is none.

		 <p>Legal values are TextDecoration.NONE, TextDecoration.UNDERLINE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextDecoration.NONE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextDecoration

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textFlow' fullname='flashx.textLayout.container:ContainerController/textFlow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[ 

		 Returns the TextFlow object whose content appears in the container. Either the <code>textFlow</code> and  

		 <code>rootElement</code> values are the same, or this is the root element's TextFlow object. For example,

		 if the container's root element is a DivElement, the value would be the TextFlow object to which the

		 DivElement belongs.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow TextFlow

	 	 ]]></see>
</method>
<method name='textIndent' fullname='flashx.textLayout.container:ContainerController/textIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 A Number that specifies, in pixels, the amount to indent the first line of the paragraph.

		 A negative indent will push the line into the margin, and possibly out of the container.

		 <p>Legal values are numbers from -8000 to 8000 and FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textJustify' fullname='flashx.textLayout.container:ContainerController/textJustify/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies options for justifying text.

		 Default value is <code>TextJustify.INTER_WORD</code>, meaning that extra space is added to the space characters. <code>TextJustify.DISTRIBUTE</code> adds extra space to space characters and between individual letters. Used only in conjunction with a <code>justificationRule</code> value of <code>JustificationRule.SPACE</code>.

		 <p>Legal values are TextJustify.INTER_WORD, TextJustify.DISTRIBUTE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextJustify.INTER_WORD.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextJustify

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='textLength' fullname='flashx.textLayout.container:ContainerController/textLength/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Returns the total number of characters in the container. This can include text that is not currently in view,

		 if the container is scrollable. This value is updated when the text is composed (when the IFlowComposer's <code>compose()</code> 

		 or <code>updateAllControllers()</code> methods are called).

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.IFlowComposer

		 ]]></see>
</method>
<method name='textLines' fullname='flashx.textLayout.container:ContainerController/tlf_internal:textLines/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='textRotation' fullname='flashx.textLayout.container:ContainerController/textRotation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Determines the number of degrees to rotate this text.

		 <p>Legal values are TextRotation.ROTATE_0, TextRotation.ROTATE_180, TextRotation.ROTATE_270, TextRotation.ROTATE_90, TextRotation.AUTO, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TextRotation.AUTO.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextRotation

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='trackingLeft' fullname='flashx.textLayout.container:ContainerController/trackingLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the left of each character. If kerning is enabled, the <code>trackingLeft</code> value is added to the values in the kerning table for the font. If kerning is disabled, the <code>trackingLeft</code> value is used as a manual kerning value. Supports both positive and negative values. 

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='trackingRight' fullname='flashx.textLayout.container:ContainerController/trackingRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the right of each character.  If kerning is enabled, the <code>trackingRight</code> value is added to the values in the kerning table for the font. If kerning is disabled, the <code>trackingRight</code> value is used as a manual kerning value. Supports both positive and negative values. 

		 <p>Legal values as a number are from -1000 to 1000.</p>

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 0.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='typographicCase' fullname='flashx.textLayout.container:ContainerController/typographicCase/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 The type of typographic case used for this text. Here are some examples:<p><img src='../../../images/textLayout_typographiccase.png' alt='typographicCase' /></p>

		 <p>Legal values are TLFTypographicCase.DEFAULT, TLFTypographicCase.CAPS_TO_SMALL_CAPS, TLFTypographicCase.UPPERCASE, TLFTypographicCase.LOWERCASE, TLFTypographicCase.LOWERCASE_TO_SMALL_CAPS, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of TLFTypographicCase.DEFAULT.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TLFTypographicCase

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='uncomposedTextLength' fullname='flashx.textLayout.container:ContainerController/tlf_internal:uncomposedTextLength/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='userStyles' fullname='flashx.textLayout.container:ContainerController/userStyles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ Allows you to read and write user styles on a ContainerController object.  Note that reading this property

		 makes a copy of the userStyles set in the format of this element. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='verticalAlign' fullname='flashx.textLayout.container:ContainerController/verticalAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Vertical alignment or justification (adopts default value if undefined during cascade).

		 Determines how TextFlow elements align within the container.

		 <p>Legal values are VerticalAlign.TOP, VerticalAlign.MIDDLE, VerticalAlign.BOTTOM, VerticalAlign.JUSTIFY, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will have a value of VerticalAlign.TOP.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.VerticalAlign

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='verticalScrollPolicy' fullname='flashx.textLayout.container:ContainerController/verticalScrollPolicy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ Specifies the vertical scrolling policy, which you can set by assigning one of the constants of the ScrollPolicy

		 class: ON, OFF, or, AUTO.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[ScrollPolicy

		 ]]></see>
</method>
<method name='verticalScrollPosition' fullname='flashx.textLayout.container:ContainerController/verticalScrollPosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Specifies the current vertical scroll location on the stage. The value specifies the number of 

		 pixels from the top.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='whiteSpaceCollapse' fullname='flashx.textLayout.container:ContainerController/whiteSpaceCollapse/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Collapses or preserves whitespace when importing text into a TextFlow. <code>WhiteSpaceCollapse.PRESERVE</code> retains all whitespace characters. <code>WhiteSpaceCollapse.COLLAPSE</code> removes newlines, tabs, and leading or trailing spaces within a block of imported text. Line break tags (<br/>) and Unicode line separator characters are retained.

		 <p>Legal values are WhiteSpaceCollapse.PRESERVE, WhiteSpaceCollapse.COLLAPSE, FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of WhiteSpaceCollapse.COLLAPSE.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.WhiteSpaceCollapse

		 ]]></see>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='wordSpacing' fullname='flashx.textLayout.container:ContainerController/wordSpacing/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 TextLayoutFormat:

		 Specifies the optimum, minimum, and maximum spacing (as a multiplier of the width of a normal space) between words to use during justification.

		 The optimum space is used to indicate the desired size of a space, as a fraction of the value defined in the font. The minimum and maximum values are the used when textJustify is distribute to determine how wide or narrow the spaces between the words may grow before letter spacing is used to justify the line.

		 <p>Legal values as a percent are numbers from -1000% to 1000%.</p>

		 <p>Legal values include FormatValue.INHERIT.</p>

		 <p>Default value is undefined indicating not set.</p>

		 <p>If undefined during the cascade this property will inherit its value from an ancestor. If no ancestor has set this property, it will have a value of 100%, 50%, 150%.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<throws><![CDATA[RangeError when set value is not within range for this property

		 

		 ]]></throws>
</method>
<method name='alignmentBaseline' fullname='flashx.textLayout.container:ContainerController/alignmentBaseline/set' isStatic='false' isFinal='false' isOverride='false'  param_names='alignmentBaselineValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='backgroundAlpha' fullname='flashx.textLayout.container:ContainerController/backgroundAlpha/set' isStatic='false' isFinal='false' isOverride='false'  param_names='backgroundAlphaValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='backgroundColor' fullname='flashx.textLayout.container:ContainerController/backgroundColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='backgroundColorValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='baselineShift' fullname='flashx.textLayout.container:ContainerController/baselineShift/set' isStatic='false' isFinal='false' isOverride='false'  param_names='baselineShiftValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='blockProgression' fullname='flashx.textLayout.container:ContainerController/blockProgression/set' isStatic='false' isFinal='false' isOverride='false'  param_names='blockProgressionValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='breakOpportunity' fullname='flashx.textLayout.container:ContainerController/breakOpportunity/set' isStatic='false' isFinal='false' isOverride='false'  param_names='breakOpportunityValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='cffHinting' fullname='flashx.textLayout.container:ContainerController/cffHinting/set' isStatic='false' isFinal='false' isOverride='false'  param_names='cffHintingValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='clearFloats' fullname='flashx.textLayout.container:ContainerController/clearFloats/set' isStatic='false' isFinal='false' isOverride='false'  param_names='clearFloatsValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='color' fullname='flashx.textLayout.container:ContainerController/color/set' isStatic='false' isFinal='false' isOverride='false'  param_names='colorValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnBreakAfter' fullname='flashx.textLayout.container:ContainerController/columnBreakAfter/set' isStatic='false' isFinal='false' isOverride='false'  param_names='columnBreakAfterValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnBreakBefore' fullname='flashx.textLayout.container:ContainerController/columnBreakBefore/set' isStatic='false' isFinal='false' isOverride='false'  param_names='columnBreakBeforeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnCount' fullname='flashx.textLayout.container:ContainerController/columnCount/set' isStatic='false' isFinal='false' isOverride='false'  param_names='columnCountValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnGap' fullname='flashx.textLayout.container:ContainerController/columnGap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='columnGapValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='columnWidth' fullname='flashx.textLayout.container:ContainerController/columnWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='columnWidthValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='containerBreakAfter' fullname='flashx.textLayout.container:ContainerController/containerBreakAfter/set' isStatic='false' isFinal='false' isOverride='false'  param_names='containerBreakAfterValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='containerBreakBefore' fullname='flashx.textLayout.container:ContainerController/containerBreakBefore/set' isStatic='false' isFinal='false' isOverride='false'  param_names='containerBreakBeforeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='containerControllerInitialFormat' fullname='flashx.textLayout.container:ContainerController/containerControllerInitialFormat/set' isStatic='true' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='digitCase' fullname='flashx.textLayout.container:ContainerController/digitCase/set' isStatic='false' isFinal='false' isOverride='false'  param_names='digitCaseValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='digitWidth' fullname='flashx.textLayout.container:ContainerController/digitWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='digitWidthValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='direction' fullname='flashx.textLayout.container:ContainerController/direction/set' isStatic='false' isFinal='false' isOverride='false'  param_names='directionValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='dominantBaseline' fullname='flashx.textLayout.container:ContainerController/dominantBaseline/set' isStatic='false' isFinal='false' isOverride='false'  param_names='dominantBaselineValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='finalParcelStart' fullname='flashx.textLayout.container:ContainerController/tlf_internal:finalParcelStart/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='firstBaselineOffset' fullname='flashx.textLayout.container:ContainerController/firstBaselineOffset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='firstBaselineOffsetValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontFamily' fullname='flashx.textLayout.container:ContainerController/fontFamily/set' isStatic='false' isFinal='false' isOverride='false'  param_names='fontFamilyValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontLookup' fullname='flashx.textLayout.container:ContainerController/fontLookup/set' isStatic='false' isFinal='false' isOverride='false'  param_names='fontLookupValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontSize' fullname='flashx.textLayout.container:ContainerController/fontSize/set' isStatic='false' isFinal='false' isOverride='false'  param_names='fontSizeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontStyle' fullname='flashx.textLayout.container:ContainerController/fontStyle/set' isStatic='false' isFinal='false' isOverride='false'  param_names='fontStyleValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='fontWeight' fullname='flashx.textLayout.container:ContainerController/fontWeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='fontWeightValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='format' fullname='flashx.textLayout.container:ContainerController/format/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='horizontalScrollPolicy' fullname='flashx.textLayout.container:ContainerController/horizontalScrollPolicy/set' isStatic='false' isFinal='false' isOverride='false'  param_names='scrollPolicy' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='horizontalScrollPosition' fullname='flashx.textLayout.container:ContainerController/horizontalScrollPosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='justificationRule' fullname='flashx.textLayout.container:ContainerController/justificationRule/set' isStatic='false' isFinal='false' isOverride='false'  param_names='justificationRuleValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='justificationStyle' fullname='flashx.textLayout.container:ContainerController/justificationStyle/set' isStatic='false' isFinal='false' isOverride='false'  param_names='justificationStyleValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='kerning' fullname='flashx.textLayout.container:ContainerController/kerning/set' isStatic='false' isFinal='false' isOverride='false'  param_names='kerningValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='leadingModel' fullname='flashx.textLayout.container:ContainerController/leadingModel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='leadingModelValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='ligatureLevel' fullname='flashx.textLayout.container:ContainerController/ligatureLevel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='ligatureLevelValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='lineBreak' fullname='flashx.textLayout.container:ContainerController/lineBreak/set' isStatic='false' isFinal='false' isOverride='false'  param_names='lineBreakValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='lineHeight' fullname='flashx.textLayout.container:ContainerController/lineHeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='lineHeightValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='lineThrough' fullname='flashx.textLayout.container:ContainerController/lineThrough/set' isStatic='false' isFinal='false' isOverride='false'  param_names='lineThroughValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='linkActiveFormat' fullname='flashx.textLayout.container:ContainerController/linkActiveFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='linkActiveFormatValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='linkHoverFormat' fullname='flashx.textLayout.container:ContainerController/linkHoverFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='linkHoverFormatValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='linkNormalFormat' fullname='flashx.textLayout.container:ContainerController/linkNormalFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='linkNormalFormatValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listAutoPadding' fullname='flashx.textLayout.container:ContainerController/listAutoPadding/set' isStatic='false' isFinal='false' isOverride='false'  param_names='listAutoPaddingValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listMarkerFormat' fullname='flashx.textLayout.container:ContainerController/listMarkerFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='listMarkerFormatValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listStylePosition' fullname='flashx.textLayout.container:ContainerController/listStylePosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='listStylePositionValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='listStyleType' fullname='flashx.textLayout.container:ContainerController/listStyleType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='listStyleTypeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='locale' fullname='flashx.textLayout.container:ContainerController/locale/set' isStatic='false' isFinal='false' isOverride='false'  param_names='localeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingBottom' fullname='flashx.textLayout.container:ContainerController/paddingBottom/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paddingBottomValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingLeft' fullname='flashx.textLayout.container:ContainerController/paddingLeft/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paddingLeftValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingRight' fullname='flashx.textLayout.container:ContainerController/paddingRight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paddingRightValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paddingTop' fullname='flashx.textLayout.container:ContainerController/paddingTop/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paddingTopValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphEndIndent' fullname='flashx.textLayout.container:ContainerController/paragraphEndIndent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paragraphEndIndentValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphSpaceAfter' fullname='flashx.textLayout.container:ContainerController/paragraphSpaceAfter/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paragraphSpaceAfterValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphSpaceBefore' fullname='flashx.textLayout.container:ContainerController/paragraphSpaceBefore/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paragraphSpaceBeforeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphStartIndent' fullname='flashx.textLayout.container:ContainerController/paragraphStartIndent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='paragraphStartIndentValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='renderingMode' fullname='flashx.textLayout.container:ContainerController/renderingMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='renderingModeValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='shapesInvalid' fullname='flashx.textLayout.container:ContainerController/tlf_internal:shapesInvalid/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='styleName' fullname='flashx.textLayout.container:ContainerController/styleName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='styleNameValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='tabStops' fullname='flashx.textLayout.container:ContainerController/tabStops/set' isStatic='false' isFinal='false' isOverride='false'  param_names='tabStopsValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textAlignLast' fullname='flashx.textLayout.container:ContainerController/textAlignLast/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textAlignLastValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textAlign' fullname='flashx.textLayout.container:ContainerController/textAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textAlignValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textAlpha' fullname='flashx.textLayout.container:ContainerController/textAlpha/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textAlphaValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textDecoration' fullname='flashx.textLayout.container:ContainerController/textDecoration/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textDecorationValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textIndent' fullname='flashx.textLayout.container:ContainerController/textIndent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textIndentValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textJustify' fullname='flashx.textLayout.container:ContainerController/textJustify/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textJustifyValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='textRotation' fullname='flashx.textLayout.container:ContainerController/textRotation/set' isStatic='false' isFinal='false' isOverride='false'  param_names='textRotationValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='trackingLeft' fullname='flashx.textLayout.container:ContainerController/trackingLeft/set' isStatic='false' isFinal='false' isOverride='false'  param_names='trackingLeftValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='trackingRight' fullname='flashx.textLayout.container:ContainerController/trackingRight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='trackingRightValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='typographicCase' fullname='flashx.textLayout.container:ContainerController/typographicCase/set' isStatic='false' isFinal='false' isOverride='false'  param_names='typographicCaseValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='userStyles' fullname='flashx.textLayout.container:ContainerController/userStyles/set' isStatic='false' isFinal='false' isOverride='false'  param_names='styles' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='verticalAlign' fullname='flashx.textLayout.container:ContainerController/verticalAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='verticalAlignValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='verticalScrollPolicy' fullname='flashx.textLayout.container:ContainerController/verticalScrollPolicy/set' isStatic='false' isFinal='false' isOverride='false'  param_names='scrollPolicy' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='verticalScrollPosition' fullname='flashx.textLayout.container:ContainerController/verticalScrollPosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='y' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='whiteSpaceCollapse' fullname='flashx.textLayout.container:ContainerController/whiteSpaceCollapse/set' isStatic='false' isFinal='false' isOverride='false'  param_names='whiteSpaceCollapseValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='wordSpacing' fullname='flashx.textLayout.container:ContainerController/wordSpacing/set' isStatic='false' isFinal='false' isOverride='false'  param_names='wordSpacingValue' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<field name='_absoluteStart' fullname='flashx.textLayout.container:ContainerController/private:_absoluteStart' type='int' isStatic='false' isConst='false' >
</field>
<field name='_allListenersAttached' fullname='flashx.textLayout.container:ContainerController/private:_allListenersAttached' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_backgroundShape' fullname='flashx.textLayout.container:ContainerController/private:_backgroundShape' type='flash.display:Shape' isStatic='false' isConst='false' >
</field>
<field name='_columnState' fullname='flashx.textLayout.container:ContainerController/private:_columnState' type='flashx.textLayout.container:ColumnState' isStatic='false' isConst='false' >
</field>
<field name='_composedFloats' fullname='flashx.textLayout.container:ContainerController/private:_composedFloats' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_compositionHeight' fullname='flashx.textLayout.container:ContainerController/private:_compositionHeight' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_compositionWidth' fullname='flashx.textLayout.container:ContainerController/private:_compositionWidth' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ Container size to be composed ]]></description>
</field>
<field name='_computedFormat' fullname='flashx.textLayout.container:ContainerController/protected:_computedFormat' type='flashx.textLayout.formats:TextLayoutFormat' isStatic='false' isConst='false' >
<description><![CDATA[ computed container attributes.  ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_containerControllerInitialFormat' fullname='flashx.textLayout.container:ContainerController/private:_containerControllerInitialFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_containerRoot' fullname='flashx.textLayout.container:ContainerController/private:_containerRoot' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
</field>
<field name='_container' fullname='flashx.textLayout.container:ContainerController/private:_container' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='_contentHeight' fullname='flashx.textLayout.container:ContainerController/private:_contentHeight' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_contentLeft' fullname='flashx.textLayout.container:ContainerController/private:_contentLeft' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_contentTop' fullname='flashx.textLayout.container:ContainerController/private:_contentTop' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_contentWidth' fullname='flashx.textLayout.container:ContainerController/private:_contentWidth' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_finalParcelStart' fullname='flashx.textLayout.container:ContainerController/private:_finalParcelStart' type='int' isStatic='false' isConst='false' >
</field>
<field name='_floatsInContainer' fullname='flashx.textLayout.container:ContainerController/private:_floatsInContainer' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_format' fullname='flashx.textLayout.container:ContainerController/private:_format' type='flashx.textLayout.elements:FlowValueHolder' isStatic='false' isConst='false' >
</field>
<field name='_hasScrollRect' fullname='flashx.textLayout.container:ContainerController/protected:_hasScrollRect' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[

		 ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_horizontalScrollPolicy' fullname='flashx.textLayout.container:ContainerController/private:_horizontalScrollPolicy' type='String' isStatic='false' isConst='false' >
</field>
<field name='_interactiveObjects' fullname='flashx.textLayout.container:ContainerController/private:_interactiveObjects' type='flash.utils:Dictionary' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ Interactive Objects ]]></description>
</field>
<field name='_linesInView' fullname='flashx.textLayout.container:ContainerController/private:_linesInView' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_measureHeight' fullname='flashx.textLayout.container:ContainerController/private:_measureHeight' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_measureWidth' fullname='flashx.textLayout.container:ContainerController/private:_measureWidth' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_minListenersAttached' fullname='flashx.textLayout.container:ContainerController/private:_minListenersAttached' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ Are event listeners attached to the container ]]></description>
</field>
<field name='_mouseEventManager' fullname='flashx.textLayout.container:ContainerController/private:_mouseEventManager' type='flashx.textLayout.events:FlowElementMouseEventManager' isStatic='false' isConst='false' >
</field>
<field name='_mouseWheelListenerAttached' fullname='flashx.textLayout.container:ContainerController/tlf_internal:_mouseWheelListenerAttached' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_oldInteractiveObjects' fullname='flashx.textLayout.container:ContainerController/private:_oldInteractiveObjects' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_rootElement' fullname='flashx.textLayout.container:ContainerController/private:_rootElement' type='flashx.textLayout.elements:ContainerFormattedElement' isStatic='false' isConst='false' >
</field>
<field name='_scrollTimer' fullname='flashx.textLayout.container:ContainerController/private:_scrollTimer' type='flash.utils:Timer' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_selectListenersAttached' fullname='flashx.textLayout.container:ContainerController/private:_selectListenersAttached' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_selectionSprite' fullname='flashx.textLayout.container:ContainerController/private:_selectionSprite' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='_shapeChildren' fullname='flashx.textLayout.container:ContainerController/private:_shapeChildren' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_shapesInvalid' fullname='flashx.textLayout.container:ContainerController/private:_shapesInvalid' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ Are the displayed shapes out of date? ]]></description>
</field>
<field name='_textFlowCache' fullname='flashx.textLayout.container:ContainerController/private:_textFlowCache' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
</field>
<field name='_textLength' fullname='flashx.textLayout.container:ContainerController/private:_textLength' type='int' isStatic='false' isConst='false' >
</field>
<field name='_transparentBGHeight' fullname='flashx.textLayout.container:ContainerController/private:_transparentBGHeight' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_transparentBGWidth' fullname='flashx.textLayout.container:ContainerController/private:_transparentBGWidth' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_transparentBGX' fullname='flashx.textLayout.container:ContainerController/private:_transparentBGX' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_transparentBGY' fullname='flashx.textLayout.container:ContainerController/private:_transparentBGY' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_uncomposedTextLength' fullname='flashx.textLayout.container:ContainerController/private:_uncomposedTextLength' type='int' isStatic='false' isConst='false' >
</field>
<field name='_updateStart' fullname='flashx.textLayout.container:ContainerController/private:_updateStart' type='int' isStatic='false' isConst='false' >
</field>
<field name='_verticalScrollPolicy' fullname='flashx.textLayout.container:ContainerController/private:_verticalScrollPolicy' type='String' isStatic='false' isConst='false' >
</field>
<field name='_xScroll' fullname='flashx.textLayout.container:ContainerController/private:_xScroll' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_yScroll' fullname='flashx.textLayout.container:ContainerController/private:_yScroll' type='Number' isStatic='false' isConst='false' >
</field>
<field name='blinkObject' fullname='flashx.textLayout.container:ContainerController/private:blinkObject' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
</field>
<field name='blinkTimer' fullname='flashx.textLayout.container:ContainerController/private:blinkTimer' type='flash.utils:Timer' isStatic='false' isConst='false' >
</field>
<field name='scratchRectangle' fullname='flashx.textLayout.container:ContainerController/private:scratchRectangle' type='flash.geom:Rectangle' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='TextContainerManager' fullname='flashx.textLayout.container:TextContainerManager' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\container\TextContainerManager.as' namespace='flashx.textLayout.container' access='public' baseclass='flash.events:EventDispatcher' interfaces='flashx.textLayout.compose:ISWFContext;flashx.textLayout.edit:IInteractionEventHandler;flashx.textLayout.container:ISandboxSupport' isFinal='false' isDynamic='false' >
<description><![CDATA[ Manages text in a container. Assumes that it manages all children of the container. 

	 Consider using TextContainerManager for better performance in cases where there is a 

	 one container per TextFlow, and the TextFlow is not the main focus, is static text, or

	 is infrequently selected. Good for text in form fields, for example.

	 

	 ]]></description>
<includeExample><![CDATA[examples\TextContainerManager.as -noswf

	 
 	 ]]></includeExample>
<langversion><![CDATA[3.0

	 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[ContainerController

	 ]]></see>
<metadata>
	<Exclude owner='flashx.textLayout.container:TextContainerManager' name='callInContext' kind='method' >
	</Exclude>
</metadata>
<metadata>
	<Exclude owner='flashx.textLayout.container:TextContainerManager' name='getBaseSWFContext' kind='method' >
	</Exclude>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='updateComplete' type='flashx.textLayout.events.UpdateCompleteEvent' >
<description><![CDATA[ Dispatched by a TextFlow object each time a container has had new DisplayObjects added or updated as a result of composition.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='damage' type='flashx.textLayout.events.DamageEvent' >
<description><![CDATA[ Dispatched by a TextFlow object each time it is damaged 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='scroll' type='flashx.textLayout.events.TextLayoutEvent' >
<description><![CDATA[ Dispatched by a TextFlow object after text is scrolled within a controller container.  

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='inlineGraphicStatusChanged' type='flashx.textLayout.events.StatusChangeEvent' >
<description><![CDATA[ Dispatched when a InlineGraphicElement is resized due to having width or height as auto or percent 

	 and the graphic has finished loading. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='click' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when any link is clicked. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='rollOut' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when the mouse goes out of any link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='rollOver' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when the mouse first enters any link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='mouseMove' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when the mouse passes over any link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='mouseUp' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when the mouse is released over any link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='mouseDown' type='flashx.textLayout.events.FlowElementMouseEvent' >
<description><![CDATA[ Dispatched when the mouse is pressed down over any link. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='compositionComplete' type='flashx.textLayout.events.CompositionCompleteEvent' >
<description><![CDATA[ Dispatched after every recompose. 

	
	]]></description>
<langversion><![CDATA[3.0

	]]></langversion>
<playerversion><![CDATA[Flash 10

	]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='selectionChange' type='flashx.textLayout.events.SelectionEvent' >
<description><![CDATA[ Dispatched whenever the selection is changed.  Primarily used to update selection-dependent user interface. 

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='flowOperationComplete' type='flashx.textLayout.events.FlowOperationEvent' >
<description><![CDATA[

	 

	 ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_COMPLETE

	 
	 ]]></eventType>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='flowOperationEnd' type='flashx.textLayout.events.FlowOperationEvent' >
<description><![CDATA[

	 

	 ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_END

	 
	 ]]></eventType>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
<metadata>
	<Event owner='flashx.textLayout.container:TextContainerManager' name='flowOperationBegin' type='flashx.textLayout.events.FlowOperationEvent' >
<description><![CDATA[

	 
	  ]]></description>
<eventType><![CDATA[flashx.textLayout.events.FlowOperationEvent.FLOW_OPERATION_BEGIN

	 
	 ]]></eventType>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
	</Event>
</metadata>
</classRec>
<method name='TextContainerManager' fullname='flashx.textLayout.container:TextContainerManager/TextContainerManager' isStatic='false' isFinal='false' isOverride='false'  param_names='container;configuration' param_types='flash.display:Sprite;flashx.textLayout.elements:IConfiguration' param_defaults='undefined;null' result_type='*'>
<description><![CDATA[ Constructor function - creates a TextContainerManager instance.

		 
		 For best results:

		 <ol>

		 <li>Start with TextContainerManager.defaultConfiguration and modify it</li>   

		 <li>Share the same Configuration among many InputManagers</li>

		 </ol>

		 
		 ]]></description>
<langversion><![CDATA[3.0	 	

		 ]]></langversion>
<param><![CDATA[container The DisplayObjectContainer in which to manage the text lines.

		 ]]></param>
<param><![CDATA[config - The IConfiguration instance to use with this TextContainerManager instance. 

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='activateHandler' fullname='flashx.textLayout.container:TextContainerManager/activateHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#activateHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.Event#ACTIVATE Event.ACTIVATE

		]]></see>
</method>
<method name='addActivationEventListeners' fullname='flashx.textLayout.container:TextContainerManager/private:addActivationEventListeners' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='addBackgroundShape' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:addBackgroundShape' isStatic='false' isFinal='false' isOverride='false'  param_names='shape' param_types='flash.display:Shape' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[shape <code>flash.display.Shape</code> object to add

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.display.Shape

		 ]]></see>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='addInlineGraphicElement' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:addInlineGraphicElement' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;inlineGraphicElement;index' param_types='flash.display:DisplayObjectContainer;flash.display:DisplayObject;int' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[parent the <code>flash.display.DisplayObjectContainer</code> object to add the inlineGraphicElement to

		 ]]></param>
<param><![CDATA[inlineGraphicElement the <code>flash.display.DisplayObject</code> object to add

		 ]]></param>
<param><![CDATA[index insertion index of the float in its parent 

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
<see><![CDATA[flash.display.DisplayObjectContainer

		 ]]></see>
<see><![CDATA[flash.display.DisplayObject

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='addSelectionContainer' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:addSelectionContainer' isStatic='false' isFinal='false' isOverride='false'  param_names='selectionContainer' param_types='flash.display:DisplayObjectContainer' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[selectionContainer <code>flash.display.DisplayObjectContainer</code> object to add

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.display.DisplayObjectContainer

		 ]]></see>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='addTextFlowListeners' fullname='flashx.textLayout.container:TextContainerManager/private:addTextFlowListeners' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='addTextLine' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:addTextLine' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine;index' param_types='flash.text.engine:TextLine;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[textLine the <code>flash.text.engine.TextLine</code> object to add

		 ]]></param>
<param><![CDATA[index insertion index of the text line in its parent 

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='beginInteraction' fullname='flashx.textLayout.container:TextContainerManager/beginInteraction' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:ISelectionManager'>
<description><![CDATA[ Returns the current ISelectionManager instance. Converts to TextFlow instance and creates one if necessary. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the interaction manager for this TextContainerManager instance.

		 ]]></return>
<see><![CDATA[flashx.textLayout.edit.ISelectionManager ISelectionManager

	 	 ]]></see>
</method>
<method name='beginMouseCapture' fullname='flashx.textLayout.container:TextContainerManager/beginMouseCapture' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Called to request clients to begin the forwarding of mouseup and mousemove events from outside a security sandbox.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='callInContext' fullname='flashx.textLayout.container:TextContainerManager/callInContext' isStatic='false' isFinal='false' isOverride='false'  param_names='fn;thisArg;argsArray;returns' param_types='Function;Object;Array;Boolean' param_defaults='undefined;undefined;undefined;true' result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearComposedLines' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:clearComposedLines' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearContainerChildren' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:clearContainerChildren' isStatic='false' isFinal='false' isOverride='false'  param_names='recycle' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='compose' fullname='flashx.textLayout.container:TextContainerManager/compose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Composes the container text; calls either the factory or <code>updateAllControllers()</code>.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='convertToTextFlowWithComposer' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:convertToTextFlowWithComposer' isStatic='false' isFinal='false' isOverride='false'  param_names='callUpdateContainer' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='convertToTextFlow' fullname='flashx.textLayout.container:TextContainerManager/private:convertToTextFlow' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='createContextMenu' fullname='flashx.textLayout.container:TextContainerManager/protected:createContextMenu' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.ui:ContextMenu'>
<description><![CDATA[ Creates a ContextMenu for the TextContainerManager. Use the methods of the ContextMenu 

		  class to add items to the menu. 

		 <p>You can override this method to define a custom context menu.</p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[the created context menu.

		 
		 ]]></return>
<see><![CDATA[flash.ui.ContextMenu ContextMenu

		 ]]></see>
</method>
<method name='createEditManager' fullname='flashx.textLayout.container:TextContainerManager/protected:createEditManager' isStatic='false' isFinal='false' isOverride='false'  param_names='undoManager' param_types='flashx.undo:IUndoManager' param_defaults='undefined' result_type='flashx.textLayout.edit:IEditManager'>
<description><![CDATA[Create an edit manager to use for editing. Override this method if you have a custom EditManager that you

		 want to use in place of the default.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[an IUndoManager instance for the EditManager being created.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the editing manager for this TextContainerManager instance.

		 
		 ]]></return>
</method>
<method name='createSelectionManager' fullname='flashx.textLayout.container:TextContainerManager/protected:createSelectionManager' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:ISelectionManager'>
<description><![CDATA[Create a selection manager to use for selection. Override this method if you have a custom SelectionManager that you

		 want to use in place of the default.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[a new SelectionManager instance.

		 
		 ]]></return>
</method>
<method name='createTextLine' fullname='flashx.textLayout.container:TextContainerManager/private:createTextLine' isStatic='false' isFinal='false' isOverride='false'  param_names='textBlock;argsArray' param_types='flash.text.engine:TextBlock;Array' param_defaults='undefined;undefined' result_type='flash.text.engine:TextLine'>
<description><![CDATA[ 

		 Uses the <code>textBlock</code> parameter, and calls the <code>TextBlock.createTextLine()</code> method on it 

		 using the remaining parameters.

		 WARNING: modifies argsArray

		  

		 ]]></description>
<copy><![CDATA[flash.text.engine.TextBlock

		 
		 ]]></copy>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='customizeConfiguration' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:customizeConfiguration' isStatic='true' isFinal='false' isOverride='false'  param_names='config' param_types='flashx.textLayout.elements:IConfiguration' param_defaults='undefined' result_type='flashx.textLayout.elements:IConfiguration'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='deactivateHandler' fullname='flashx.textLayout.container:TextContainerManager/deactivateHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#deactivateHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.Event#DEACTIVATE Event.DEACTIVATE

		]]></see>
</method>
<method name='dispatchEvent' fullname='flashx.textLayout.container:TextContainerManager/dispatchEvent' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[flash.events.IEventDispatcher#dispatchEvent()

		 ]]></copy>
<langversion><![CDATA[3.0

 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<private><![CDATA[]]></private>
</method>
<method name='drawBackgroundAndSetScrollRect' fullname='flashx.textLayout.container:TextContainerManager/drawBackgroundAndSetScrollRect' isStatic='false' isFinal='false' isOverride='false'  param_names='scrollX;scrollY' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[   

		 Returns <code>true</code> if it has filled in the container's scrollRect property.  

		 This method enables you to test whether <code>scrollRect</code> is set without actually accessing the <code>scrollRect</code> property 

		 which can possibly create a  performance issue. 

		 <p>Override this method to draw a background or a border.  Overriding this method can be tricky as the scrollRect <bold>must</bold> 

		 be set as specified.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[scrollX The starting horizontal position of the scroll rectangle.

		 ]]></param>
<param><![CDATA[scrollY The starting vertical position of the scroll rectangle.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[<code>true</code> if it has created the <code>scrollRect</code> object.

		 
		 ]]></return>
</method>
<method name='editHandler' fullname='flashx.textLayout.container:TextContainerManager/editHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#editHandler()

		 ]]></copy>
<langversion><![CDATA[3.0

 		 
 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
<see><![CDATA[flash.events.Event Event

		 ]]></see>
</method>
<method name='endInteraction' fullname='flashx.textLayout.container:TextContainerManager/endInteraction' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Terminates interaction. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.ISelectionManager ISelectionManager

	 	 ]]></see>
</method>
<method name='endMouseCapture' fullname='flashx.textLayout.container:TextContainerManager/endMouseCapture' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Called to inform clients that the the forwarding of mouseup and mousemove events from outside a security sandbox is no longer needed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='factoryUpdateContainerChildren' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:factoryUpdateContainerChildren' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='focusChangeHandler' fullname='flashx.textLayout.container:TextContainerManager/focusChangeHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#focusChangeHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		
 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.FocusEvent#KEY_FOCUS_CHANGE FocusEvent.KEY_FOCUS_CHANGE

		]]></see>
<see><![CDATA[flash.events.FocusEvent#MOUSE_FOCUS_CHANGE FocusEvent.MOUSE_FOCUS_CHANGE

		]]></see>
</method>
<method name='focusInHandler' fullname='flashx.textLayout.container:TextContainerManager/focusInHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Process a focusIn event.

		]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
</method>
<method name='focusOutHandler' fullname='flashx.textLayout.container:TextContainerManager/focusOutHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#focusOutHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.FocusEvent#FOCUS_OUT FocusEvent.FOCUS_OUT

		]]></see>
</method>
<method name='getActualNumLines' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:getActualNumLines' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<private><![CDATA[]]></private>
</method>
<method name='getBaseSWFContext' fullname='flashx.textLayout.container:TextContainerManager/getBaseSWFContext' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:ISWFContext'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getContentBounds' fullname='flashx.textLayout.container:TextContainerManager/getContentBounds' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Rectangle'>
<description><![CDATA[ Creates a rectangle that shows where the last call to either the <code>compose()</code> 

		 method or the <code>updateContainer()</code> method placed the text.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the bounds of the content

		 ]]></return>
<see><![CDATA[#compose()

	 	 ]]></see>
<see><![CDATA[#updateContainer()

		 ]]></see>
</method>
<method name='getContextMenu' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:getContextMenu' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.ui:ContextMenu'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getController' fullname='flashx.textLayout.container:TextContainerManager/private:getController' isStatic='false' isFinal='false' isOverride='false'  result_type='TextContainerManager.as$229:TMContainerController'>
</method>
<method name='getFirstTextLineChildIndex' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:getFirstTextLineChildIndex' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[the index at which the first text line must appear in its parent.

		 

		 ]]></return>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='getFocusedSelectionFormat' fullname='flashx.textLayout.container:TextContainerManager/protected:getFocusedSelectionFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[ Returns the focusedSelectionFormat - by default get it from the configuration.

		 This can be overridden in the subclass to supply a different SelectionFormat

		 ]]></description>
</method>
<method name='getInactiveSelectionFormat' fullname='flashx.textLayout.container:TextContainerManager/protected:getInactiveSelectionFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[ Returns the inactiveSelectionFormat - by default get it from the configuration 

		 This can be overridden in the subclass to supply a different SelectionFormat

		 ]]></description>
</method>
<method name='getLineAt' fullname='flashx.textLayout.container:TextContainerManager/getLineAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='flash.text.engine:TextLine'>
<description><![CDATA[ Return the TextLine at the index from array of composed lines.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[index	Finds the line at this index position in the text.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the TextLine that occurs at the specified index.

		 
		 ]]></return>
</method>
<method name='getScrollDelta' fullname='flashx.textLayout.container:TextContainerManager/getScrollDelta' isStatic='false' isFinal='false' isOverride='false'  param_names='numLines' param_types='int' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#getScrollDelta() 

		
		]]></copy>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</method>
<method name='getTextFlow' fullname='flashx.textLayout.container:TextContainerManager/getTextFlow' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[ The current TextFlow. Converts this to a full TextFlow representation if it 

		 isn't already one. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[the current TextFlow object

		 
		 ]]></return>
</method>
<method name='getText' fullname='flashx.textLayout.container:TextContainerManager/getText' isStatic='false' isFinal='false' isOverride='false'  param_names='separator' param_types='String' param_defaults=' ' result_type='String'>
<description><![CDATA[

		 Returns the current text using a separator between paragraphs.

		 The separator can be specified with the <code>separator</code>

		 argument. The default value of the <code>separator</code> argument

		 is the Unicode character <code>'PARAGRAPH SEPARATOR' (U+2029)</code>.

		 
		 <p>Calling the setter discards any attached TextFlow. Any selection is lost.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[separator String to set between paragraphs.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='getUndoManager' fullname='flashx.textLayout.container:TextContainerManager/protected:getUndoManager' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.undo:IUndoManager'>
<description><![CDATA[ 

		 Returns the undo manager to use. By default, creates a unique undo manager. 

		 You can override this method in the subclass if you want to customize the undo manager

		 (for example, to use a shared undo manager for multiple TextContainerManager instances).

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[new IUndoManager instance.

		 
		 ]]></return>
</method>
<method name='getUnfocusedSelectionFormat' fullname='flashx.textLayout.container:TextContainerManager/protected:getUnfocusedSelectionFormat' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionFormat'>
<description><![CDATA[ Returns the unfocusedSelectionFormat - by default get it from the configuration 

		 You can override this method in the subclass to supply a different SelectionFormat.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='imeStartCompositionHandler' fullname='flashx.textLayout.container:TextContainerManager/imeStartCompositionHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:IMEEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>IME_START_COMPOSITION</code> event when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 

		 
		 ]]></langversion>
<param><![CDATA[event  The IMEEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10.1

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.IMEEvent#IME_START_COMPOSITION IMEEvent.IME_START_COMPOSITION

		 ]]></see>
</method>
<method name='inputManagerStringFactory' fullname='flashx.textLayout.container:TextContainerManager/private:inputManagerStringFactory' isStatic='true' isFinal='false' isOverride='false'  param_names='config' param_types='flashx.textLayout.elements:IConfiguration' param_defaults='undefined' result_type='flashx.textLayout.factory:StringTextLineFactory'>
</method>
<method name='inputManagerTextFlowFactory' fullname='flashx.textLayout.container:TextContainerManager/private:inputManagerTextFlowFactory' isStatic='true' isFinal='false' isOverride='false'  result_type='TextContainerManager.as$229:TCMTextFlowTextLineFactory'>
</method>
<method name='invalidateInteractionManager' fullname='flashx.textLayout.container:TextContainerManager/private:invalidateInteractionManager' isStatic='false' isFinal='false' isOverride='false'  param_names='alwaysRecreateManager' param_types='Boolean' param_defaults='false' result_type='void'>
<description><![CDATA[ The interactionManager is invalid - update it. Clients should call this if they change the 

		 selectionFormats.  Its called automatically if editingMode is changed. ]]></description>
</method>
<method name='invalidateSelectionFormats' fullname='flashx.textLayout.container:TextContainerManager/invalidateSelectionFormats' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Call this if you change the selection formats (SelectionFormat) and want the interactionManager 

		 to update. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='invalidateUndoManager' fullname='flashx.textLayout.container:TextContainerManager/invalidateUndoManager' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Call this if you are editing, and want to reset the undo manager used for editing.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='isDamaged' fullname='flashx.textLayout.container:TextContainerManager/isDamaged' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Returns <code>true</code> if the content needs composing. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[<code>true</code> if the content needs composing; <code>false</code> otherwise.

		 ]]></return>
</method>
<method name='keyDownHandler' fullname='flashx.textLayout.container:TextContainerManager/keyDownHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#keyDownHandler() 

		
		]]></copy>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.KeyboardEvent#KEY_DOWN KeyboardEvent.KEY_DOWN

		]]></see>
</method>
<method name='keyFocusChangeHandler' fullname='flashx.textLayout.container:TextContainerManager/keyFocusChangeHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#keyFocusChangeHandler().

		 

		 ]]></copy>
<langversion><![CDATA[3.0

		 	]]></langversion>
<param><![CDATA[event	the FocusChange event

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</method>
<method name='keyUpHandler' fullname='flashx.textLayout.container:TextContainerManager/keyUpHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#keyUpHandler().

		]]></copy>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.KeyboardEvent#KEY_UP KeyboardEvent.KEY_UP

		]]></see>
</method>
<method name='menuSelectHandler' fullname='flashx.textLayout.container:TextContainerManager/menuSelectHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:ContextMenuEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#menuSelectHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		
 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.ContextMenuEvent#MENU_SELECT ContextMenuEvent.MENU_SELECT

		]]></see>
</method>
<method name='mouseDoubleClickHandler' fullname='flashx.textLayout.container:TextContainerManager/mouseDoubleClickHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#mouseDoubleClickHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#DOUBLE_CLICK MouseEvent.DOUBLE_CLICK

		]]></see>
</method>
<method name='mouseDownHandler' fullname='flashx.textLayout.container:TextContainerManager/mouseDownHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#mouseDownHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_DOWN MouseEvent.MOUSE_DOWN

		]]></see>
</method>
<method name='mouseMoveHandler' fullname='flashx.textLayout.container:TextContainerManager/mouseMoveHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#mouseMoveHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_MOVE MouseEvent.MOUSE_MOVE

		]]></see>
</method>
<method name='mouseMoveSomewhere' fullname='flashx.textLayout.container:TextContainerManager/mouseMoveSomewhere' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Client call to forward a mouseMove event from outside a security sandbox.  Coordinates of the mouse move are not needed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='mouseOutHandler' fullname='flashx.textLayout.container:TextContainerManager/mouseOutHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#mouseOutHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_OUT MouseEvent.MOUSE_OUT

		]]></see>
</method>
<method name='mouseOverHandler' fullname='flashx.textLayout.container:TextContainerManager/mouseOverHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Process a mouseOver event.

		]]></description>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_OVER MouseEvent.MOUSE_OVER

		]]></see>
</method>
<method name='mouseUpHandler' fullname='flashx.textLayout.container:TextContainerManager/mouseUpHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#mouseUpHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_UP MouseEvent.MOUSE_UP

		]]></see>
</method>
<method name='mouseUpSomewhere' fullname='flashx.textLayout.container:TextContainerManager/mouseUpSomewhere' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Client call to forward a mouseUp event from outside a security sandbox.  Coordinates of the mouse up are not needed.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='mouseWheelHandler' fullname='flashx.textLayout.container:TextContainerManager/mouseWheelHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#mouseWheelHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		
 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.MouseEvent#MOUSE_WHEEL MouseEvent.MOUSE_WHEEL

		]]></see>
</method>
<method name='populateAndRecycleComposedLines' fullname='flashx.textLayout.container:TextContainerManager/private:populateAndRecycleComposedLines' isStatic='false' isFinal='false' isOverride='false'  param_names='object' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
</method>
<method name='populateComposedLines' fullname='flashx.textLayout.container:TextContainerManager/private:populateComposedLines' isStatic='false' isFinal='false' isOverride='false'  param_names='displayObject' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
</method>
<method name='recreateTextLine' fullname='flashx.textLayout.container:TextContainerManager/private:recreateTextLine' isStatic='false' isFinal='false' isOverride='false'  param_names='textBlock;argsArray' param_types='flash.text.engine:TextBlock;Array' param_defaults='undefined;undefined' result_type='flash.text.engine:TextLine'>
<description><![CDATA[ 

		 Uses the <code>textBlock</code> parameter, and calls the <code>FlowComposerBase.recreateTextLine()</code> method on it 

		 using the remaining parameters.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[textBlock The TextBlock to which the TextLine belongs.

		 ]]></param>
<param><![CDATA[textLine  The TextLine to be recreated.

		 ]]></param>
<param><![CDATA[previousLine Specifies the previously broken line after 

		 which breaking is to commence. Can be null when breaking the first line.  

		 ]]></param>
<param><![CDATA[width Specifies the desired width of the line in pixels. The 

		 	actual width may be less.  

		 ]]></param>
<param><![CDATA[lineOffset An optional parameter which specifies the difference in 

		 pixels between the origin of the line and the origin of the tab stops. This can be used when lines are not aligned, 

		 	but it is desirable for their tabs to be so. 

		 ]]></param>
<param><![CDATA[fitSomething An optional parameter that instructs the runtime to fit at least one 

		 	character into the text line, no matter what width has been specified (even if width is zero or negative, which 

		 	would otherwise result in an exception being thrown).  

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[The recreated TextLine instance.

		  

		 ]]></return>
</method>
<method name='releaseReferences' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:releaseReferences' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='removeActivationEventListeners' fullname='flashx.textLayout.container:TextContainerManager/private:removeActivationEventListeners' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeBackgroundShape' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:removeBackgroundShape' isStatic='false' isFinal='false' isOverride='false'  param_names='shape' param_types='flash.display:Shape' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[shape <code>flash.display.Shape</code> object to remove

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.display.Shape

		 ]]></see>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='removeIBeamCursor' fullname='flashx.textLayout.container:TextContainerManager/private:removeIBeamCursor' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeInlineGraphicElement' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:removeInlineGraphicElement' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;inlineGraphicElement' param_types='flash.display:DisplayObjectContainer;flash.display:DisplayObject' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[float the <code>flash.display.DisplayObject</code> object to remove 

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
<see><![CDATA[flash.display.DisplayObjectContainer

		 ]]></see>
<see><![CDATA[flash.display.DisplayObject

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='removeSelectionContainer' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:removeSelectionContainer' isStatic='false' isFinal='false' isOverride='false'  param_names='selectionContainer' param_types='flash.display:DisplayObjectContainer' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[selectionContainer <code>flash.display.DisplayObjectContainer</code> object to remove

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.display.DisplayObjectContainer

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='removeTextFlowListeners' fullname='flashx.textLayout.container:TextContainerManager/private:removeTextFlowListeners' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='removeTextLine' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:removeTextLine' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<param><![CDATA[textLine the <code>flash.text.engine.TextLine</code> object to remove 

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.text.engine.TextLine

		 ]]></see>
<see><![CDATA[#container

		 

		 ]]></see>
<private><![CDATA[]]></private>
</method>
<method name='requiredFocusInHandler' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:requiredFocusInHandler' isStatic='false' isFinal='true' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<private><![CDATA[]]></private>
</method>
<method name='requiredFocusOutHandler' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:requiredFocusOutHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:FocusEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='requiredMouseOverHandler' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:requiredMouseOverHandler' isStatic='false' isFinal='true' isOverride='false'  param_names='event' param_types='flash.events:MouseEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<private><![CDATA[]]></private>
</method>
<method name='resetLine' fullname='flashx.textLayout.container:TextContainerManager/resetLine' isStatic='false' isFinal='false' isOverride='false'  param_names='textLine' param_types='flash.text.engine:TextLine' param_defaults='undefined' result_type='void'>
</method>
<method name='scrollToRange' fullname='flashx.textLayout.container:TextContainerManager/scrollToRange' isStatic='false' isFinal='false' isOverride='false'  param_names='activePosition;anchorPosition' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

		]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#scrollToRange() 

		
		]]></copy>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</method>
<method name='setTextFlow' fullname='flashx.textLayout.container:TextContainerManager/setTextFlow' isStatic='false' isFinal='false' isOverride='false'  param_names='textFlow' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Sets a TextFlow into this TextContainerManager replacing any existing TextFlow and discarding the 

		 current text. 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='setText' fullname='flashx.textLayout.container:TextContainerManager/setText' isStatic='false' isFinal='false' isOverride='false'  param_names='text' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets the <code>text</code> property to the specified String.

		 
		 Discards any attached TextFlow. Any selection is lost.

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<param><![CDATA[str the String to set

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='softKeyboardActivatingHandler' fullname='flashx.textLayout.container:TextContainerManager/softKeyboardActivatingHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Processes the <code>SOFT_KEYBOARD_ACTIVATING</code> event when the client manages events.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 

		 
		 ]]></langversion>
<param><![CDATA[event  The SoftKeyboardEvent object.

		 
		 ]]></param>
<playerversion><![CDATA[Flash 10.2

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flash.events.SoftKeyboardEvent#SOFT_KEYBOARD_ACTIVATING SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING

		 ]]></see>
</method>
<method name='textInputHandler' fullname='flashx.textLayout.container:TextContainerManager/textInputHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:TextEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#textInputHandler()

		]]></copy>
<langversion><![CDATA[3.0

 		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		]]></playerversion>
<see><![CDATA[flash.events.TextEvent#TEXT_INPUT TextEvent.TEXT_INPUT

		]]></see>
</method>
<method name='updateContainer' fullname='flashx.textLayout.container:TextContainerManager/updateContainer' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Updates the display; calls either the factory or updateAllControllers().

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[true if anything changed.

		 
		 ]]></return>
</method>
<method name='composeState' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:composeState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='compositionHeight' fullname='flashx.textLayout.container:TextContainerManager/compositionHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Returns the vertical extent allowed for text inside the container. The value is specified in pixels. 

		 <p>After setting this property, the text in the container is damaged and requires composing.</p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='compositionWidth' fullname='flashx.textLayout.container:TextContainerManager/compositionWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Returns the horizontal extent allowed for text inside the container. The value is specified in pixels.

		 

		 <p>After setting this property, the text in the container is damaged and requires composing.</p>

		 
		 ]]></description>
<langversion><![CDATA[3.0  

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='configuration' fullname='flashx.textLayout.container:TextContainerManager/configuration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:IConfiguration'>
<description><![CDATA[ The Configuration object for this TextContainerManager. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.IConfiguration IConfiguration

	 	 ]]></see>
</method>
<method name='container' fullname='flashx.textLayout.container:TextContainerManager/container/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:Sprite'>
<description><![CDATA[ Returns the container (DisplayObjectContainer) that holds the text that this TextContainerManager manages.

		 

		 ]]></description>
<langversion><![CDATA[3.0

	 	 
	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[ContainerController#container

	 	 ]]></see>
</method>
<method name='defaultConfiguration' fullname='flashx.textLayout.container:TextContainerManager/defaultConfiguration/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:IConfiguration'>
<description><![CDATA[ The default configuration for this TextContainerManager. Column and padding attributes

		 are set to <code>FormatValue.INHERIT</code>.

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.IConfiguration IConfiguration

	 	 ]]></see>
<see><![CDATA[flashx.textLayout.formats.FormatValue#INHERIT FormatValue.INHERIT

		 ]]></see>
</method>
<method name='editingMode' fullname='flashx.textLayout.container:TextContainerManager/editingMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ Editing mode of this TextContainerManager. Modes are reading only, reading and selection permitted, 

		 and editing (reading, selection, and writing)  permitted. Use the constant values of the EditingMode

		 class to set this property. 

		 <p>Default value is READ_WRITE.</p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditingMode EditingMode

		 ]]></see>
</method>
<method name='effectiveBlockProgression' fullname='flashx.textLayout.container:TextContainerManager/private:effectiveBlockProgression/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='handlersState' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:handlersState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='hasScrollRect' fullname='flashx.textLayout.container:TextContainerManager/private:hasScrollRect/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Specifies whether this container has attached a ScrollRect object. Value is <code>true</code>

		 or <code>false</code>. A display object is cropped to the size defined by the scroll rectangle, and 

		 it scrolls within the rectangle when you change the x and y properties of the scrollRect object. 

		 
		 <p>This property enables a client to test for a ScrollRect object without accessing 

		 the DisplayObject.scrollRect property, which can have side effects in some cases.</p> 

		 
		 ]]></description>
<langversion><![CDATA[3.0

	 	 
		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[true if the controller has attached a ScrollRect instance.

		 

		 ]]></return>
<see><![CDATA[#drawBackgroundAndSetScrollRect 

		 ]]></see>
</method>
<method name='horizontalScrollPolicy' fullname='flashx.textLayout.container:TextContainerManager/horizontalScrollPolicy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 Controls whether the factory generates all text lines or stops when the container bounds are filled.

		 

		 ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#horizontalScrollPolicy 

		 

		 ]]></copy>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='horizontalScrollPosition' fullname='flashx.textLayout.container:TextContainerManager/horizontalScrollPosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#horizontalScrollPosition

		 
		 ]]></copy>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='hostFormat' fullname='flashx.textLayout.container:TextContainerManager/hostFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ Sets the format when display just a string.  If displaying a TextFlow this has no immediate effect.  The supplied ITextLayoutFormat is not copied.  Modifying it without calling this setter has indeterminate effects. ]]></description>
</method>
<method name='numLines' fullname='flashx.textLayout.container:TextContainerManager/numLines/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[flashx.textLayout.compose.IFlowComposer#numLines 

		 
		 ]]></copy>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='preserveSelectionOnSetText' fullname='flashx.textLayout.container:TextContainerManager/preserveSelectionOnSetText/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<langversion><![CDATA[3.0  

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<public><![CDATA[
		 It's <code>_preserveSelectionOnSetText</code> to decide whether or not TLF preserve selection state during setText().

		 

		 The default value is false, which means <code>setText()</code> does not preserve original selection state, 

		 <code>setText()</code> acts as what it was. If <code>_preserveSelectionOnSetText</code> is true, 

		 the original selection state is preserved during <code>setText()</code>.  

		 

		 ]]></public>
</method>
<method name='sourceState' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:sourceState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='swfContext' fullname='flashx.textLayout.container:TextContainerManager/swfContext/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:ISWFContext'>
<description><![CDATA[ 

		Optional ISWFContext instance used to make FTE calls as needed in the proper swf context. 

		
		

		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.ISWFContext

		

		]]></see>
</method>
<method name='verticalScrollPolicy' fullname='flashx.textLayout.container:TextContainerManager/verticalScrollPolicy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 Controls whether the factory generates all text lines or stops when the container bounds are filled.

		 

		 ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#verticalScrollPolicy 

		 
		 ]]></copy>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='verticalScrollPosition' fullname='flashx.textLayout.container:TextContainerManager/verticalScrollPosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flashx.textLayout.container.ContainerController#verticalScrollPosition 

		 

		 ]]></copy>
<langversion><![CDATA[3.0

	 	 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='compositionHeight' fullname='flashx.textLayout.container:TextContainerManager/compositionHeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='compositionWidth' fullname='flashx.textLayout.container:TextContainerManager/compositionWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='editingMode' fullname='flashx.textLayout.container:TextContainerManager/editingMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='hasScrollRect' fullname='flashx.textLayout.container:TextContainerManager/private:hasScrollRect/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='horizontalScrollPolicy' fullname='flashx.textLayout.container:TextContainerManager/horizontalScrollPolicy/set' isStatic='false' isFinal='false' isOverride='false'  param_names='scrollPolicy' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='horizontalScrollPosition' fullname='flashx.textLayout.container:TextContainerManager/horizontalScrollPosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='hostFormat' fullname='flashx.textLayout.container:TextContainerManager/hostFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='preserveSelectionOnSetText' fullname='flashx.textLayout.container:TextContainerManager/preserveSelectionOnSetText/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='swfContext' fullname='flashx.textLayout.container:TextContainerManager/swfContext/set' isStatic='false' isFinal='false' isOverride='false'  param_names='context' param_types='flashx.textLayout.compose:ISWFContext' param_defaults='undefined' result_type='void'>
</method>
<method name='verticalScrollPolicy' fullname='flashx.textLayout.container:TextContainerManager/verticalScrollPolicy/set' isStatic='false' isFinal='false' isOverride='false'  param_names='scrollPolicy' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='verticalScrollPosition' fullname='flashx.textLayout.container:TextContainerManager/verticalScrollPosition/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='COMPOSE_COMPOSER' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:COMPOSE_COMPOSER' type='int' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='COMPOSE_FACTORY' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:COMPOSE_FACTORY' type='int' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='HANDLERS_ACTIVE' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:HANDLERS_ACTIVE' type='int' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='HANDLERS_CREATION' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:HANDLERS_CREATION' type='int' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='HANDLERS_MOUSEWHEEL' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:HANDLERS_MOUSEWHEEL' type='int' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='HANDLERS_NONE' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:HANDLERS_NONE' type='int' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='HANDLERS_NOTADDED' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:HANDLERS_NOTADDED' type='int' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='SOURCE_STRING' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:SOURCE_STRING' type='int' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='SOURCE_TEXTFLOW' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:SOURCE_TEXTFLOW' type='int' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_composePushedLines' fullname='flashx.textLayout.container:TextContainerManager/private:_composePushedLines' type='int' isStatic='false' isConst='false' >
</field>
<field name='_composeRecycledInPlaceLines' fullname='flashx.textLayout.container:TextContainerManager/private:_composeRecycledInPlaceLines' type='int' isStatic='false' isConst='false' >
</field>
<field name='_composeState' fullname='flashx.textLayout.container:TextContainerManager/private:_composeState' type='int' isStatic='false' isConst='false' >
</field>
<field name='_composedLines' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:_composedLines' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_compositionHeight' fullname='flashx.textLayout.container:TextContainerManager/private:_compositionHeight' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_compositionWidth' fullname='flashx.textLayout.container:TextContainerManager/private:_compositionWidth' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_config' fullname='flashx.textLayout.container:TextContainerManager/private:_config' type='flashx.textLayout.elements:IConfiguration' isStatic='false' isConst='false' >
</field>
<field name='_container' fullname='flashx.textLayout.container:TextContainerManager/private:_container' type='flash.display:Sprite' isStatic='false' isConst='false' >
</field>
<field name='_contentHeight' fullname='flashx.textLayout.container:TextContainerManager/private:_contentHeight' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_contentLeft' fullname='flashx.textLayout.container:TextContainerManager/private:_contentLeft' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_contentTop' fullname='flashx.textLayout.container:TextContainerManager/private:_contentTop' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_contentWidth' fullname='flashx.textLayout.container:TextContainerManager/private:_contentWidth' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_contextMenu' fullname='flashx.textLayout.container:TextContainerManager/private:_contextMenu' type='' isStatic='false' isConst='false' >
</field>
<field name='_damaged' fullname='flashx.textLayout.container:TextContainerManager/private:_damaged' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_defaultConfiguration' fullname='flashx.textLayout.container:TextContainerManager/private:_defaultConfiguration' type='flashx.textLayout.elements:IConfiguration' isStatic='true' isConst='false' defaultValue='null' >
<description><![CDATA[ Configuration to be used by the TextContainerManager.  This can only be set once and before the inputmanager is used.  ]]></description>
</field>
<field name='_editingMode' fullname='flashx.textLayout.container:TextContainerManager/private:_editingMode' type='String' isStatic='false' isConst='false' >
</field>
<field name='_expectedFactoryCompose' fullname='flashx.textLayout.container:TextContainerManager/private:_expectedFactoryCompose' type='flashx.textLayout.compose:SimpleCompose' isStatic='true' isConst='false' >
</field>
<field name='_handlersState' fullname='flashx.textLayout.container:TextContainerManager/private:_handlersState' type='int' isStatic='false' isConst='false' >
</field>
<field name='_hasFocus' fullname='flashx.textLayout.container:TextContainerManager/private:_hasFocus' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_hasScrollRect' fullname='flashx.textLayout.container:TextContainerManager/private:_hasScrollRect' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_horizontalScrollPolicy' fullname='flashx.textLayout.container:TextContainerManager/private:_horizontalScrollPolicy' type='String' isStatic='false' isConst='false' >
</field>
<field name='_hostFormat' fullname='flashx.textLayout.container:TextContainerManager/private:_hostFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_ibeamCursorSet' fullname='flashx.textLayout.container:TextContainerManager/private:_ibeamCursorSet' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_inputManagerTextFlowFactory' fullname='flashx.textLayout.container:TextContainerManager/private:_inputManagerTextFlowFactory' type='TextContainerManager.as$229:TCMTextFlowTextLineFactory' isStatic='true' isConst='false' >
</field>
<field name='_interactionCount' fullname='flashx.textLayout.container:TextContainerManager/private:_interactionCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_lastSeparator' fullname='flashx.textLayout.container:TextContainerManager/private:_lastSeparator' type='String' isStatic='false' isConst='false' >
</field>
<field name='_needsRedraw' fullname='flashx.textLayout.container:TextContainerManager/private:_needsRedraw' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_preserveSelectionOnSetText' fullname='flashx.textLayout.container:TextContainerManager/private:_preserveSelectionOnSetText' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_sourceState' fullname='flashx.textLayout.container:TextContainerManager/private:_sourceState' type='int' isStatic='false' isConst='false' >
</field>
<field name='_stringFactoryTextFlowFormat' fullname='flashx.textLayout.container:TextContainerManager/private:_stringFactoryTextFlowFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_swfContext' fullname='flashx.textLayout.container:TextContainerManager/private:_swfContext' type='flashx.textLayout.compose:ISWFContext' isStatic='false' isConst='false' >
</field>
<field name='_textDamaged' fullname='flashx.textLayout.container:TextContainerManager/private:_textDamaged' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_textFlow' fullname='flashx.textLayout.container:TextContainerManager/private:_textFlow' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
</field>
<field name='_text' fullname='flashx.textLayout.container:TextContainerManager/private:_text' type='String' isStatic='false' isConst='false' >
</field>
<field name='_verticalScrollPolicy' fullname='flashx.textLayout.container:TextContainerManager/private:_verticalScrollPolicy' type='String' isStatic='false' isConst='false' >
</field>
<field name='editingModePropertyDefinition' fullname='flashx.textLayout.container:TextContainerManager/tlf_internal:editingModePropertyDefinition' type='flashx.textLayout.property:Property' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ Shared definition of the scrollPolicy property. ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='eventList' fullname='flashx.textLayout.container:TextContainerManager/private:eventList' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='stringFactoryDictionary' fullname='flashx.textLayout.container:TextContainerManager/private:stringFactoryDictionary' type='flash.utils:Dictionary' isStatic='true' isConst='false' >
</field>
<classRec name='TruncationOptions' fullname='flashx.textLayout.factory:TruncationOptions' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\factory\TruncationOptions.as' namespace='flashx.textLayout.factory' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[ 

	 The TruncationOptions class specifies options for limiting the number of lines of text 

	 created by a text line factory and for indicating when lines have been left out.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='TruncationOptions' fullname='flashx.textLayout.factory:TruncationOptions/TruncationOptions' isStatic='false' isFinal='false' isOverride='false'  param_names='truncationIndicator;lineCountLimit;truncationIndicatorFormat' param_types='String;int;flashx.textLayout.formats:ITextLayoutFormat' param_defaults='unknown;unknown;null' result_type='*'>
<description><![CDATA[ 

		 Creates a TruncationOptions object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[truncationIndicator the string used to indicate that text has been truncated. 

		 It appears at the end of the composed text. The default value is the horizontal ellipsis (U+2026).

		 ]]></param>
<param><![CDATA[lineCountLimit specifies a truncation criterion in the form of the maximum 

		 number of lines allowed. The default value of <code>NO_LINE_COUNT_LIMIT</code> 

		 indicates that there is no line count limit.

		 ]]></param>
<param><![CDATA[truncationIndicatorFormat specifies the format for the truncation indicator. 

		 A null format (the default value) specifies that the truncation indicator assume 

		 the format of content just before the truncation point. The <code>TextLineFactory</code> 

		 methods that take a simple string as input also ignore this parameter and implement 

		 the default behavior.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='lineCountLimit' fullname='flashx.textLayout.factory:TruncationOptions/lineCountLimit/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The maximum number of lines to create.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[the line count limit

		 ]]></return>
</method>
<method name='truncationIndicatorFormat' fullname='flashx.textLayout.factory:TruncationOptions/truncationIndicatorFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The style applied to the truncation indicator string.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[the format truncation indicator

		 ]]></return>
</method>
<method name='truncationIndicator' fullname='flashx.textLayout.factory:TruncationOptions/truncationIndicator/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 A string used to indicate that content could not be fully displayed

		 because of limits on the number of lines.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[the truncation indicator

		 ]]></return>
</method>
<method name='lineCountLimit' fullname='flashx.textLayout.factory:TruncationOptions/lineCountLimit/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Sets the maximum number of lines to create

		 ]]></description>
<param><![CDATA[val specifies the maximum number of lines allowed. 

		 A value of <code>NO_LINE_COUNT_LIMIT</code> indicates that there is no line count limit.

		 ]]></param>
</method>
<method name='truncationIndicatorFormat' fullname='flashx.textLayout.factory:TruncationOptions/truncationIndicatorFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Sets the styles applied to the truncation indicator character

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[val specifies the format for the truncation indicator. A null format specifies that the truncation indicator assume the format of content

		 just before the truncation point. The <code>TextLineFactory</code> methods that take a simple string as input also ignore this parameter and implement the default behavior

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='truncationIndicator' fullname='flashx.textLayout.factory:TruncationOptions/truncationIndicator/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Sets the truncation indicator

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[val the string used to indicate that text has been truncated

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<field name='HORIZONTAL_ELLIPSIS' fullname='flashx.textLayout.factory:TruncationOptions/HORIZONTAL_ELLIPSIS' type='String' isStatic='true' isConst='true' defaultValue='…' >
<description><![CDATA[

		 Defines the <code>truncationIndicator</code> property value, <code>\u2026</code>, that represents a horizontal ellipsis.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[#truncationIndicator

		 ]]></see>
</field>
<field name='NO_LINE_COUNT_LIMIT' fullname='flashx.textLayout.factory:TruncationOptions/NO_LINE_COUNT_LIMIT' type='int' isStatic='true' isConst='true' defaultValue='-1' >
<description><![CDATA[

		 Defines the <code>lineCountLimit</code> property value, <code>-1</code>, that represents no limit.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[#lineCountLimit

		 ]]></see>
</field>
<field name='_lineCountLimit' fullname='flashx.textLayout.factory:TruncationOptions/private:_lineCountLimit' type='int' isStatic='false' isConst='false' >
</field>
<field name='_truncationIndicatorFormat' fullname='flashx.textLayout.factory:TruncationOptions/private:_truncationIndicatorFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_truncationIndicator' fullname='flashx.textLayout.factory:TruncationOptions/private:_truncationIndicator' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='TextLineFactoryBase' fullname='flashx.textLayout.factory:TextLineFactoryBase' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\factory\TextLineFactoryBase.as' namespace='flashx.textLayout.factory' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

 The TextLineFactoryBase class serves as the base class for the Text Layout Framework text line factories.

 

 <p><b>Note:</b> Application code does not typically need to create or use a TextLineFactoryBase object directly.

 Use one of the derived text factory classes instead.</p>

  

 ]]></description>
<langversion><![CDATA[3.0

 
 ]]></langversion>
<playerversion><![CDATA[Flash 10

 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow

]]></see>
<metadata>
	<Exclude owner='flashx.textLayout.factory:TextLineFactoryBase' name='getNextTruncationPosition' kind='method' >
	</Exclude>
</metadata>
<metadata>
	<Exclude owner='flashx.textLayout.factory:TextLineFactoryBase' name='doesComposedTextFit' kind='method' >
	</Exclude>
</metadata>
<metadata>
	<Exclude owner='flashx.textLayout.factory:TextLineFactoryBase' name='callbackWithTextLines' kind='method' >
	</Exclude>
</metadata>
<metadata>
	<Exclude owner='flashx.textLayout.factory:TextLineFactoryBase' name='setContentBounds' kind='method' >
	</Exclude>
</metadata>
<metadata>
	<Exclude owner='flashx.textLayout.factory:TextLineFactoryBase' name='containerController' kind='property' >
	</Exclude>
</metadata>
</classRec>
<method name='TextLineFactoryBase' fullname='flashx.textLayout.factory:TextLineFactoryBase/TextLineFactoryBase' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ 

		 Base-class constructor for text line factories.

		  

 		 <p><b>Note:</b> Application code does not typically need to create or use a TextLineFactoryBase object directly.

		 Use one of the derived text factory classes instead.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='beginFactoryCompose' fullname='flashx.textLayout.factory:TextLineFactoryBase/tlf_internal:beginFactoryCompose' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:SimpleCompose'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='callbackWithTextLines' fullname='flashx.textLayout.factory:TextLineFactoryBase/protected:callbackWithTextLines' isStatic='false' isFinal='false' isOverride='false'  param_names='callback;delx;dely' param_types='Function;Number;Number' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 Sends the created TextLine objects to the client using the supplied callback function.

		 

		 <p>This method sets the <code>x</code> and <code>y</code> properties of the line.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[callback the callback function supplied by the factory user

		 ]]></param>
<param><![CDATA[delx the horizontal offset

		 ]]></param>
<param><![CDATA[dely the vertical offset

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='computeLastAllowedLineIndex' fullname='flashx.textLayout.factory:TextLineFactoryBase/tlf_internal:computeLastAllowedLineIndex' isStatic='false' isFinal='false' isOverride='false'  param_names='lineCountLimit' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createFlowComposer' fullname='flashx.textLayout.factory:TextLineFactoryBase/tlf_internal:createFlowComposer' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:IFlowComposer'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='doesComposedTextFit' fullname='flashx.textLayout.factory:TextLineFactoryBase/protected:doesComposedTextFit' isStatic='false' isFinal='false' isOverride='false'  param_names='lineCountLimit;textLength;blockProgression' param_types='int;uint;String' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Indicates whether the composed text fits in the line count limit and includes all text

		  

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='endFactoryCompose' fullname='flashx.textLayout.factory:TextLineFactoryBase/tlf_internal:endFactoryCompose' isStatic='true' isFinal='false' isOverride='false'  param_names='prevComposer' param_types='flashx.textLayout.compose:SimpleCompose' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getContentBounds' fullname='flashx.textLayout.factory:TextLineFactoryBase/getContentBounds' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Rectangle'>
<description><![CDATA[

		 The smallest rectangle in which the layed-out content fits.

		 

		 <p><b>Note:</b> Truncated lines are not included in the size calculation.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='getDefaultFlowComposerClass' fullname='flashx.textLayout.factory:TextLineFactoryBase/tlf_internal:getDefaultFlowComposerClass' isStatic='true' isFinal='false' isOverride='false'  result_type='Class'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getNextTruncationPosition' fullname='flashx.textLayout.factory:TextLineFactoryBase/protected:getNextTruncationPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='truncateAtCharPosition;multiPara' param_types='int;Boolean' param_defaults='undefined;false' result_type='int'>
<description><![CDATA[ 

		 Gets the next truncation position by shedding an atom's worth of characters.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[truncateAtCharPosition the current truncation candidate position.

		 ]]></param>
<param><![CDATA[multiPara <code>true</code> if text has more than one paragraph.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<returns><![CDATA[the next candidate truncation position.

		 ]]></returns>
</method>
<method name='peekFactoryCompose' fullname='flashx.textLayout.factory:TextLineFactoryBase/tlf_internal:peekFactoryCompose' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:SimpleCompose'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='processBackgroundColors' fullname='flashx.textLayout.factory:TextLineFactoryBase/tlf_internal:processBackgroundColors' isStatic='false' isFinal='false' isOverride='false'  param_names='textFlow;callback;x;y;constrainWidth;constrainHeight' param_types='flashx.textLayout.elements:TextFlow;Function;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='setContentBounds' fullname='flashx.textLayout.factory:TextLineFactoryBase/protected:setContentBounds' isStatic='false' isFinal='false' isOverride='false'  param_names='controllerBounds' param_types='flash.geom:Rectangle' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='compositionBounds' fullname='flashx.textLayout.factory:TextLineFactoryBase/compositionBounds/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Rectangle'>
<description><![CDATA[

		 The rectangle within which text lines are created.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='containerController' fullname='flashx.textLayout.factory:TextLineFactoryBase/protected:containerController/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.container:ContainerController'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='horizontalScrollPolicy' fullname='flashx.textLayout.factory:TextLineFactoryBase/horizontalScrollPolicy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 Specifies how lines are created when the composition bounds are not large enough.

		  

		 <p>If set to <code>ScrollPolicy.ON</code> or <code>ScrollPolicy.AUTO</code>, all lines

		 are created. It is the your responsibility to scroll lines in the viewable area (and to

		 mask lines outside this area, if necessary). If set to <code>ScrollPolicy.OFF</code>, then 

		 only lines that fit within the composition bounds are created.</p>

		 

		 <p>If the <code>truncationOptions</code> property is set, the scroll policy is ignored 

		 (and treated as <code>ScrollPolicy.OFF</code>).</p> 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.StandardFlowComposer

		 ]]></see>
<see><![CDATA[flashx.textLayout.container.ScrollPolicy

		 ]]></see>
<see><![CDATA[#truncationOptions

	 	 ]]></see>
</method>
<method name='isTruncated' fullname='flashx.textLayout.factory:TextLineFactoryBase/isTruncated/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Indicates whether text was truncated when lines were last created.

		  

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='swfContext' fullname='flashx.textLayout.factory:TextLineFactoryBase/swfContext/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.compose:ISWFContext'>
<description><![CDATA[ 

		The ISWFContext instance used to make FTE calls as needed. 

		
		<p>By default, the ISWFContext implementation is this FlowComposerBase object.

		Applications can provide a custom implementation to use fonts

		embedded in a different SWF file or to cache and reuse text lines.</p>

		

		]]></description>
<langversion><![CDATA[3.0

	 	]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.ISWFContext

		

		]]></see>
</method>
<method name='truncationOptions' fullname='flashx.textLayout.factory:TextLineFactoryBase/truncationOptions/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.factory:TruncationOptions'>
<description><![CDATA[ 

		 Specifies the options for truncating the text if it doesn't fit in the composition bounds.

		  

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='verticalScrollPolicy' fullname='flashx.textLayout.factory:TextLineFactoryBase/verticalScrollPolicy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 Specifies how lines are created when the composition bounds are not large enough.

		  

		 <p>If set to <code>ScrollPolicy.ON</code> or <code>ScrollPolicy.AUTO</code>, all lines

		 are created. It is the your responsibility to scroll lines in the viewable area (and to

		 mask lines outside this area, if necessary). If set to <code>ScrollPolicy.OFF</code>, then 

		 only lines that fit within the composition bounds are created.</p>

		 

		 <p>If the <code>truncationOptions</code> property is set, the scroll policy is ignored 

		 (and treated as <code>ScrollPolicy.OFF</code>).</p> 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<see><![CDATA[flashx.textLayout.compose.StandardFlowComposer

		 ]]></see>
<see><![CDATA[flashx.textLayout.container.ScrollPolicy

		 ]]></see>
<see><![CDATA[#truncationOptions

	 	 ]]></see>
</method>
<method name='compositionBounds' fullname='flashx.textLayout.factory:TextLineFactoryBase/compositionBounds/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.geom:Rectangle' param_defaults='undefined' result_type='void'>
</method>
<method name='horizontalScrollPolicy' fullname='flashx.textLayout.factory:TextLineFactoryBase/horizontalScrollPolicy/set' isStatic='false' isFinal='false' isOverride='false'  param_names='scrollPolicy' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='swfContext' fullname='flashx.textLayout.factory:TextLineFactoryBase/swfContext/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.compose:ISWFContext' param_defaults='undefined' result_type='void'>
</method>
<method name='truncationOptions' fullname='flashx.textLayout.factory:TextLineFactoryBase/truncationOptions/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.factory:TruncationOptions' param_defaults='undefined' result_type='void'>
</method>
<method name='verticalScrollPolicy' fullname='flashx.textLayout.factory:TextLineFactoryBase/verticalScrollPolicy/set' isStatic='false' isFinal='false' isOverride='false'  param_names='scrollPolicy' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_compositionBounds' fullname='flashx.textLayout.factory:TextLineFactoryBase/private:_compositionBounds' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
<description><![CDATA[ Requested logical bounds to wrap to ]]></description>
</field>
<field name='_containerController' fullname='flashx.textLayout.factory:TextLineFactoryBase/private:_containerController' type='flashx.textLayout.container:ContainerController' isStatic='false' isConst='false' >
</field>
<field name='_contentBounds' fullname='flashx.textLayout.factory:TextLineFactoryBase/private:_contentBounds' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
<description><![CDATA[ Bounds of composition results - where the text landed ]]></description>
</field>
<field name='_factoryComposer' fullname='flashx.textLayout.factory:TextLineFactoryBase/tlf_internal:_factoryComposer' type='flashx.textLayout.compose:SimpleCompose' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_horizontalScrollPolicy' fullname='flashx.textLayout.factory:TextLineFactoryBase/private:_horizontalScrollPolicy' type='String' isStatic='false' isConst='false' >
</field>
<field name='_isTruncated' fullname='flashx.textLayout.factory:TextLineFactoryBase/protected:_isTruncated' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_pass0Lines' fullname='flashx.textLayout.factory:TextLineFactoryBase/protected:_pass0Lines' type='Array' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_savedFactoryComposer' fullname='flashx.textLayout.factory:TextLineFactoryBase/private:_savedFactoryComposer' type='flashx.textLayout.compose:SimpleCompose' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_swfContext' fullname='flashx.textLayout.factory:TextLineFactoryBase/private:_swfContext' type='flashx.textLayout.compose:ISWFContext' isStatic='false' isConst='false' >
</field>
<field name='_tc' fullname='flashx.textLayout.factory:TextLineFactoryBase/private:_tc' type='flash.display:Sprite' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_truncationLineIndex' fullname='flashx.textLayout.factory:TextLineFactoryBase/protected:_truncationLineIndex' type='int' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_truncationOptions' fullname='flashx.textLayout.factory:TextLineFactoryBase/private:_truncationOptions' type='flashx.textLayout.factory:TruncationOptions' isStatic='false' isConst='false' >
</field>
<field name='_verticalScrollPolicy' fullname='flashx.textLayout.factory:TextLineFactoryBase/private:_verticalScrollPolicy' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='TextFlowTextLineFactory' fullname='flashx.textLayout.factory:TextFlowTextLineFactory' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\factory\TextFlowTextLineFactory.as' namespace='flashx.textLayout.factory' access='public' baseclass='flashx.textLayout.factory:TextLineFactoryBase' isFinal='false' isDynamic='false' >
<description><![CDATA[

 The TextFlowTextLineFactory class provides a simple way to create TextLines for displaying text from a text flow.

 

 <p>The text lines are static and created fit in a single bounding rectangle, but can have multiple paragraphs and formats as well as

 inline graphics. To create TextLine objects directly from a string, use StringTextLineFactory.</p> 

 
 <p><b>Note:</b> When using inline graphics, the <code>source</code> property of the InlineGraphicElement object 

 must either be an instance of a DisplayObject or a Class object representing an embedded asset. 

 URLRequest objects cannot be used. The width and height of the inline graphic at the time the line 

 is created is used to compose the flow. </p>

 

 ]]></description>
<includeExample><![CDATA[examples\TextFlowTextLineFactory_example.as 

 

 ]]></includeExample>
<langversion><![CDATA[3.0

 
 ]]></langversion>
<playerversion><![CDATA[Flash 10

 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow TextFlow

 ]]></see>
<see><![CDATA[flashx.textLayout.factory.StringTextLineFactory StringTextLineFactory

]]></see>
</classRec>
<method name='TextFlowTextLineFactory' fullname='flashx.textLayout.factory:TextFlowTextLineFactory/TextFlowTextLineFactory' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ 

		 Creates a TextFlowTextLineFactory object. 

		 

 		 ]]></description>
<langversion><![CDATA[3.0

 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

 		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 		 ]]></playerversion>
</method>
<method name='callbackWithTextLines' fullname='flashx.textLayout.factory:TextFlowTextLineFactory/protected:callbackWithTextLines' isStatic='false' isFinal='false' isOverride='true'  param_names='callback;delx;dely' param_types='Function;Number;Number' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='createTextLinesInternal' fullname='flashx.textLayout.factory:TextFlowTextLineFactory/private:createTextLinesInternal' isStatic='false' isFinal='false' isOverride='false'  param_names='callback;textFlow' param_types='Function;flashx.textLayout.elements:TextFlow' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='createTextLines' fullname='flashx.textLayout.factory:TextFlowTextLineFactory/createTextLines' isStatic='false' isFinal='false' isOverride='false'  param_names='callback;textFlow' param_types='Function;flashx.textLayout.elements:TextFlow' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Creates TextLine objects from the specified text flow.

		 

		 <p>The text lines are composed to fit the bounds assigned to the <code>compositionBounds</code> property.

		 As each line is created, the factory calls the function specified in the 

		 <code>callback</code> parameter. This function is passed the TextLine object and

		 is responsible for displaying the line. If a line has a background color, the factory also calls the

		 callback function with a Shape object containing a rectangle of the background color.</p>

		 

		 <p>Note that the scroll policies of the factory will control how many lines are generated.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 
		 ]]></langversion>
<param><![CDATA[callback function to call with each generated TextLine object.  

		 The callback will be called with a Shape object representing any background color (if present), 

		 and with TextLine objects for the text.

		 ]]></param>
<param><![CDATA[textFlow The TextFlow from which the lines are created.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='truncatedTextFlowCallback' fullname='flashx.textLayout.factory:TextFlowTextLineFactory/tlf_internal:truncatedTextFlowCallback/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Function' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_truncatedTextFlowCallback' fullname='flashx.textLayout.factory:TextFlowTextLineFactory/private:_truncatedTextFlowCallback' type='Function' isStatic='false' isConst='false' >
</field>
<classRec name='StringTextLineFactory' fullname='flashx.textLayout.factory:StringTextLineFactory' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\factory\StringTextLineFactory.as' namespace='flashx.textLayout.factory' access='public' baseclass='flashx.textLayout.factory:TextLineFactoryBase' isFinal='false' isDynamic='false' >
<description><![CDATA[

 The StringTextLineFactory class provides a simple way to create TextLines from a string. 

 

 <p>The text lines are static and are created using a single format and a single paragraph. 

 The lines are created to fit in the specified bounding rectangle.</p>

 

 <p>The StringTextLineFactory provides an efficient way to create TextLines, since it reuses single TextFlow,

 ParagraphElement, SpanElement, and ContainerController objects across many repeated invocations. You can create a

 single factory, and use it again and again. You can also reuse all the parts that are the same each time

 you call it; for instance, you can reuse the various formats and the bounds.</p> 

 
 <p><b>Note:</b> To create static lines that use multiple formats or paragraphs, or that include

 inline graphics, use a TextFlowTextLineFactory and a TextFlow object. </p>

 

 <p><b>Note:</b> The StringTextLineFactory ignores the truncationIndicatorFormat property set in the truncationOptions when truncating text.</p>

  

 ]]></description>
<includeExample><![CDATA[examples\StringTextLineFactory_example.as -noswf

 

 ]]></includeExample>
<langversion><![CDATA[3.0

 
 ]]></langversion>
<playerversion><![CDATA[Flash 10

 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 ]]></playerversion>
<see><![CDATA[flashx.textLayout.factory.TextFlowTextLineFactory TextFlowTextLineFactory

]]></see>
</classRec>
<method name='StringTextLineFactory' fullname='flashx.textLayout.factory:StringTextLineFactory/StringTextLineFactory' isStatic='false' isFinal='false' isOverride='false'  param_names='configuration' param_types='flashx.textLayout.elements:IConfiguration' param_defaults='null' result_type='*'>
<description><![CDATA[ 

		 Creates a StringTextLineFactory object.  

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[configuration The configuration object used to set the properties of the 

		 internal TextFlow object used to compose lines produced by this factory. 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='createTextLinesInternal' fullname='flashx.textLayout.factory:StringTextLineFactory/private:createTextLinesInternal' isStatic='false' isFinal='false' isOverride='false'  param_names='callback' param_types='Function' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Internal version preserves generated lines

		 ]]></description>
</method>
<method name='createTextLines' fullname='flashx.textLayout.factory:StringTextLineFactory/createTextLines' isStatic='false' isFinal='false' isOverride='false'  param_names='callback' param_types='Function' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Creates TextLine objects using the text currently assigned to this factory object.

		 

		 <p>The text lines are created using the currently assigned text and formats and

		 are composed to fit the bounds assigned to the <code>compositionBounds</code> property.

		 As each line is created, the factory calls the function specified in the 

		 <code>callback</code> parameter. This function is passed the TextLine object and

		 is responsible for displaying the line.</p>

		 

		 <p>To create a different set of lines, change any properties desired and call

		 <code>createTextLines()</code> again.</p>

		  

		 <p>Note that the scroll policies of the factory will control how many lines are generated.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[callback	The callback function called for each TextLine object created.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='doTruncation' fullname='flashx.textLayout.factory:StringTextLineFactory/tlf_internal:doTruncation' isStatic='false' isFinal='false' isOverride='false'  param_names='bp;measureWidth;measureHeight' param_types='String;Boolean;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getTruncationPosition' fullname='flashx.textLayout.factory:StringTextLineFactory/private:getTruncationPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='line;allowedWidth' param_types='flash.text.engine:TextLine;Number' param_defaults='undefined;undefined' result_type='uint'>
<description><![CDATA[ 

		 Gets the truncation position on a line given the allowed width 

		 - Must be at an atom boundary

		 - Must scan the line for atoms in logical order, not physical position order

         For example, given bi-di text ABאבCD

		 atoms must be scanned in this order 

         A, B, א

         ג, C, D  

		 ]]></description>
</method>
<method name='initialize' fullname='flashx.textLayout.factory:StringTextLineFactory/private:initialize' isStatic='false' isFinal='false' isOverride='false'  param_names='config' param_types='flashx.textLayout.elements:IConfiguration' param_defaults='undefined' result_type='void'>
</method>
<method name='measureTruncationIndicator' fullname='flashx.textLayout.factory:StringTextLineFactory/private:measureTruncationIndicator' isStatic='false' isFinal='false' isOverride='false'  param_names='compositionBounds;truncationIndicator' param_types='flash.geom:Rectangle;String' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ 

		 Measures the truncation indicator using the same bounds and formats, but without truncation options

		 Resultant lines are added to _measurementLines

		 ]]></description>
</method>
<method name='measurementFactory' fullname='flashx.textLayout.factory:StringTextLineFactory/private:measurementFactory' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.factory:StringTextLineFactory'>
</method>
<method name='measurementLines' fullname='flashx.textLayout.factory:StringTextLineFactory/private:measurementLines' isStatic='true' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='noopfunction' fullname='flashx.textLayout.factory:StringTextLineFactory/private:noopfunction' isStatic='true' isFinal='false' isOverride='false'  param_names='o' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='configuration' fullname='flashx.textLayout.factory:StringTextLineFactory/configuration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:IConfiguration'>
<description><![CDATA[ 

		 The configuration used by the internal TextFlow object.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='defaultConfiguration' fullname='flashx.textLayout.factory:StringTextLineFactory/defaultConfiguration/get' isStatic='true' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:IConfiguration'>
<description><![CDATA[ 

		 The default configuration used by this factory if none is specified. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='paragraphFormat' fullname='flashx.textLayout.factory:StringTextLineFactory/paragraphFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The paragraph format. 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='spanFormat' fullname='flashx.textLayout.factory:StringTextLineFactory/spanFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The character format. 

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='textFlowFormat' fullname='flashx.textLayout.factory:StringTextLineFactory/textFlowFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The text flow format.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='text' fullname='flashx.textLayout.factory:StringTextLineFactory/text/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 The text to convert into TextLine objects.

		 

		 <p>To produce TextLines, call <code>createTextLines()</code> after setting this

		 <code>text</code> property and the desired formats.</p> 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='truncatedText' fullname='flashx.textLayout.factory:StringTextLineFactory/tlf_internal:truncatedText/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='paragraphFormat' fullname='flashx.textLayout.factory:StringTextLineFactory/paragraphFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='format' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='spanFormat' fullname='flashx.textLayout.factory:StringTextLineFactory/spanFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='format' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='textFlowFormat' fullname='flashx.textLayout.factory:StringTextLineFactory/textFlowFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='format' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='text' fullname='flashx.textLayout.factory:StringTextLineFactory/text/set' isStatic='false' isFinal='false' isOverride='false'  param_names='string' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_configuration' fullname='flashx.textLayout.factory:StringTextLineFactory/private:_configuration' type='flashx.textLayout.elements:IConfiguration' isStatic='false' isConst='false' >
</field>
<field name='_defaultConfiguration' fullname='flashx.textLayout.factory:StringTextLineFactory/private:_defaultConfiguration' type='flashx.textLayout.elements:Configuration' isStatic='true' isConst='false' defaultValue='null' >
</field>
<field name='_formatsChanged' fullname='flashx.textLayout.factory:StringTextLineFactory/private:_formatsChanged' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_measurementFactory' fullname='flashx.textLayout.factory:StringTextLineFactory/private:_measurementFactory' type='flashx.textLayout.factory:StringTextLineFactory' isStatic='true' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_measurementLines' fullname='flashx.textLayout.factory:StringTextLineFactory/private:_measurementLines' type='Array' isStatic='true' isConst='false' defaultValue='null' >
</field>
<field name='_para' fullname='flashx.textLayout.factory:StringTextLineFactory/private:_para' type='flashx.textLayout.elements:ParagraphElement' isStatic='false' isConst='false' >
</field>
<field name='_span' fullname='flashx.textLayout.factory:StringTextLineFactory/private:_span' type='flashx.textLayout.elements:SpanElement' isStatic='false' isConst='false' >
</field>
<field name='_tf' fullname='flashx.textLayout.factory:StringTextLineFactory/private:_tf' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
</field>
<field name='_truncatedText' fullname='flashx.textLayout.factory:StringTextLineFactory/private:_truncatedText' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='ConversionType' fullname='flashx.textLayout.conversion:ConversionType' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\conversion\ConversionType.as' namespace='flashx.textLayout.conversion' access='public' baseclass='Object' isFinal='true' isDynamic='false' >
<description><![CDATA[

	 Values for the format of exported text.

	 The values <code>STRING_TYPE</code> and <code>XML_TYPE</code> 

	 can be used for the <code>conversionType</code> parameter for 

	 the export() method in the ITextExporter interface and the

	 TextConverter class.

	 
	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.conversion.ITextExporter#export()

	 ]]></see>
<see><![CDATA[flashx.textLayout.conversion.TextConverter#export()

	 ]]></see>
</classRec>
<field name='STRING_TYPE' fullname='flashx.textLayout.conversion:ConversionType/STRING_TYPE' type='String' isStatic='true' isConst='true' defaultValue='stringType' >
<description><![CDATA[ 

		 Export as type String. 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='XML_TYPE' fullname='flashx.textLayout.conversion:ConversionType/XML_TYPE' type='String' isStatic='true' isConst='true' defaultValue='xmlType' >
<description><![CDATA[ 

		 Export as type XML.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<classRec name='FormatDescriptor' fullname='flashx.textLayout.conversion:FormatDescriptor' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\conversion\FormatDescriptor.as' namespace='flashx.textLayout.conversion' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ Contains information about a format.

     

     ]]></description>
<langversion><![CDATA[3.0

     ]]></langversion>
<playerversion><![CDATA[Flash 10.0

     ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

     ]]></playerversion>
</classRec>
<method name='FormatDescriptor' fullname='flashx.textLayout.conversion:FormatDescriptor/FormatDescriptor' isStatic='false' isFinal='false' isOverride='false'  param_names='format;importerClass;exporterClass;clipboardFormat' param_types='String;Class;Class;String' param_defaults='undefined;undefined;undefined;undefined' result_type='*'>
<description><![CDATA[ Constructor.

         

         ]]></description>
<langversion><![CDATA[3.0

        ]]></langversion>
<playerversion><![CDATA[Flash 10.0

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
</method>
<method name='clipboardFormat' fullname='flashx.textLayout.conversion:FormatDescriptor/clipboardFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ Descriptor used when matching this format to the formats posted on the external clipboard. If the format supports importing, 

         (it's importerClass is not null), it will be called when pasting from the clipboard, if the clipboard contents include data 

         in this format. If the format supports exporting, it will be called when copying to the clipboard, and the output it creates 

         will be posted to the clipboard with this clipboardFormat.

         

         ]]></description>
<langversion><![CDATA[3.0

         

         ]]></langversion>
<playerversion><![CDATA[Flash 10.0

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
<see><![CDATA[flash.desktop.Clipboard

         ]]></see>
<see><![CDATA[flash.desktop.ClipboardFormats

         ]]></see>
</method>
<method name='exporterClass' fullname='flashx.textLayout.conversion:FormatDescriptor/exporterClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Class'>
<description><![CDATA[ Returns the class used for converting to the format. 

         

         ]]></description>
<langversion><![CDATA[3.0

        ]]></langversion>
<playerversion><![CDATA[Flash 10.0

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
</method>
<method name='format' fullname='flashx.textLayout.conversion:FormatDescriptor/format/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ Returns the data format used by the converter.

         

         ]]></description>
<langversion><![CDATA[3.0     

        ]]></langversion>
<playerversion><![CDATA[Flash 10.0

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
</method>
<method name='importerClass' fullname='flashx.textLayout.conversion:FormatDescriptor/importerClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Class'>
<description><![CDATA[ Returns the class used for converting data from the format. 

         

         ]]></description>
<langversion><![CDATA[3.0

        ]]></langversion>
<playerversion><![CDATA[Flash 10.0

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
</method>
<field name='_clipboardFormat' fullname='flashx.textLayout.conversion:FormatDescriptor/private:_clipboardFormat' type='String' isStatic='false' isConst='false' >
</field>
<field name='_exporterClass' fullname='flashx.textLayout.conversion:FormatDescriptor/private:_exporterClass' type='Class' isStatic='false' isConst='false' >
</field>
<field name='_format' fullname='flashx.textLayout.conversion:FormatDescriptor/private:_format' type='String' isStatic='false' isConst='false' >
</field>
<field name='_importerClass' fullname='flashx.textLayout.conversion:FormatDescriptor/private:_importerClass' type='Class' isStatic='false' isConst='false' >
</field>
<interfaceRec name='ITextExporter' fullname='flashx.textLayout.conversion:ITextExporter' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\conversion\ITextExporter.as' namespace='flashx.textLayout.conversion' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 Interface for exporting text content from a TextFlow instance to a given format, 

	 which may for example be String or XML format, or a user-defined format. Exporters support the getting

	 and setting of properties to control the export of data. These properties are implemented

	 as public properties, but the direct access of these properties should be avoided, since

	 a user might replace the converter class in the TextConverter registry, causing a downcast

	 to fail.

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</interfaceRec>
<method name='export' fullname='flashx.textLayout.conversion:ITextExporter/flashx.textLayout.conversion:ITextExporter:export' isStatic='false' isFinal='false' isOverride='false'  param_names='source;conversionType' param_types='flashx.textLayout.elements:TextFlow;String' param_defaults='undefined;undefined' result_type='Object'>
<description><![CDATA[ 

		 Export text content from a TextFlow instance in String, or XML, or a user defined format.

		 <p>Set the <code>conversionType</code> parameter to either of the following values,

		 or a user defined format in user-defined exporters.

		 <ul>

		   <li><code>flashx.textLayout.conversion.ConversionType.STRING_TYPE</code>;</li>

		   <li><code>flashx.textLayout.conversion.ConversionType.XML_TYPE</code>.</li>

		 </ul>

		 </p>

		 ]]></description>
<includeExample><![CDATA[examples\ITextExporterExample.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0

		 ]]></langversion>
<param><![CDATA[source	The TextFlow to export

		 ]]></param>
<param><![CDATA[conversionType 	Return a String (STRING_TYPE) or XML (XML_TYPE), or any user defined format.

		 ]]></param>
<playerversion><![CDATA[Flash 10

	 	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[Object	The exported content

		 ]]></return>
<see><![CDATA[flashx.textLayout.conversion.ConversionType

	 	 ]]></see>
</method>
<method name='errors' fullname='flashx.textLayout.conversion:ITextExporter/flashx.textLayout.conversion:ITextExporter:errors/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Vector$String'>
<description><![CDATA[ 

		 This property contains a vector of error messages as strings after a call

		 to an exporter method is the <code>throwOnError</code> property is set to

		 <code>false</code>, which is the default. If there were no errors, the

		 property returns <code>null</code>. The property is reset on each method

		 call.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.2

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</method>
<method name='throwOnError' fullname='flashx.textLayout.conversion:ITextExporter/flashx.textLayout.conversion:ITextExporter:throwOnError/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 The throwOnError property controls how the exporter handles errors.

		 If set to <code>true</code>, methods throw an Error instance on errors. 

		 If set to <code>false</code>, which is the default, errors are collected

		 into a vector of strings and stored in the <code>errors</code> property, 

		 and the exporter does not throw.	

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.2

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</method>
<method name='useClipboardAnnotations' fullname='flashx.textLayout.conversion:ITextExporter/flashx.textLayout.conversion:ITextExporter:useClipboardAnnotations/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 The <code>useClipboardAnnotations</code> property controls whether or not the 

		 importer should handle the extra information necessary for the clipboard. 

		 When data is in a TextFlow, paragraphs are always complete, and include a 

		 terminator character. When a range of text is pasted to the clipboard, it

		 will form paragraphs, but the range may not include in the final terminator.

		 In this case, the paragraph needs to be marked as a partial paragraph if it

		 is intended for the clipboard, so that if it is later pasted it will merge

		 into the new text correctly. If the content is intended for the clipboard, 

		 useClipboardAnnotations will be true.

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='throwOnError' fullname='flashx.textLayout.conversion:ITextExporter/flashx.textLayout.conversion:ITextExporter:throwOnError/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='useClipboardAnnotations' fullname='flashx.textLayout.conversion:ITextExporter/flashx.textLayout.conversion:ITextExporter:useClipboardAnnotations/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='ITextImporter' fullname='flashx.textLayout.conversion:ITextImporter' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\conversion\ITextImporter.as' namespace='flashx.textLayout.conversion' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

     Interface for importing text content into a TextFlow from an external source. 

     The TextConverter class creates importers with no constructor arguments.

     

     ]]></description>
<includeExample><![CDATA[examples\ITextImporterExample.as -noswf

     

     ]]></includeExample>
<langversion><![CDATA[3.0

     ]]></langversion>
<playerversion><![CDATA[Flash 10

     ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

     ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow

     

     ]]></see>
</interfaceRec>
<method name='importToFlow' fullname='flashx.textLayout.conversion:ITextImporter/flashx.textLayout.conversion:ITextImporter:importToFlow' isStatic='false' isFinal='false' isOverride='false'  param_names='source' param_types='Object' param_defaults='undefined' result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[ 

         Import text content from an external source and convert it into a TextFlow.

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<param><![CDATA[source        The data to convert.

         ]]></param>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<return><![CDATA[TextFlow Created from the source.

         

         ]]></return>
</method>
<method name='configuration' fullname='flashx.textLayout.conversion:ITextImporter/flashx.textLayout.conversion:ITextImporter:configuration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:IConfiguration'>
<description><![CDATA[

         The <code>configuration</code> property contains the IConfiguration instance that

         the importer needs when creating new TextFlow instances. This property

         is initially set to <code>null</code>.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10.2

         ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TextFlow

         

         ]]></see>
</method>
<method name='errors' fullname='flashx.textLayout.conversion:ITextImporter/flashx.textLayout.conversion:ITextImporter:errors/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Vector$String'>
<description><![CDATA[ 

         This property contains a vector of error messages as strings after a call

         to an importer method is the <code>throwOnError</code> property is set to

         <code>false</code>, which is the default. If there were no errors, the

         property returns <code>null</code>. The property is reset on each method

         call.

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='throwOnError' fullname='flashx.textLayout.conversion:ITextImporter/flashx.textLayout.conversion:ITextImporter:throwOnError/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

         The <code>throwOnError</code> property controls how the importer handles errors.

         If set to <code>true</code>, methods throw an Error instance on errors. 

         If set to <code>false</code>, which is the default, errors are collected

         into a vector of strings and stored in the <code>errors</code> property, 

         and the importer does not throw. 

         

         ]]></description>
<langversion><![CDATA[3.0

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
</method>
<method name='useClipboardAnnotations' fullname='flashx.textLayout.conversion:ITextImporter/flashx.textLayout.conversion:ITextImporter:useClipboardAnnotations/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

         Controls whether or not the 

         importer should handle the extra information necessary for the clipboard. 

         When data comes in from the clipboard, it might contain partial paragraphs; 

         paragraphs that are missing the terminator or newline character. If <code>useClipboardAnnotations</code> 

         is <code>true</code>, the importer marks these partial paragraphs with a 

         <code>ConverterBase.MERGE_TO_NEXT_ON_PASTE</code> attribute. This causes the paste

         operation to correctly handle merging of the pasted paragraph (and any list or div elements

         that may include the paragraph) into the text.

          

         ]]></description>
<langversion><![CDATA[3.0

          

         ]]></langversion>
<playerversion><![CDATA[Flash 10

         ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

         ]]></playerversion>
<see><![CDATA[flashx.textLayout.conversion.ConverterBase.MERGE_TO_NEXT_ON_PASTE

         ]]></see>
</method>
<method name='configuration' fullname='flashx.textLayout.conversion:ITextImporter/flashx.textLayout.conversion:ITextImporter:configuration/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:IConfiguration' param_defaults='undefined' result_type='void'>
</method>
<method name='throwOnError' fullname='flashx.textLayout.conversion:ITextImporter/flashx.textLayout.conversion:ITextImporter:throwOnError/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='useClipboardAnnotations' fullname='flashx.textLayout.conversion:ITextImporter/flashx.textLayout.conversion:ITextImporter:useClipboardAnnotations/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<classRec name='TextConverter' fullname='flashx.textLayout.conversion:TextConverter' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\conversion\TextConverter.as' namespace='flashx.textLayout.conversion' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 This is the gateway class for handling import and export. It serves as a unified access point to the 

	 conversion functionality in the Text Layout Framework. It contains a registry for predefined as well

	 as user defined input and/or output converters, plus a set of conversion methods.

	 <p>

	 The format of the converted data is not predefined; user written converters are free to accept and return

	 any format of their choice. Common formats are strings, XML, and ByteArray instances. Converter authors 

	 should document which formats are supported.

	 </p>

	 ]]></description>
<includeExample><![CDATA[examples\TextConverter_example.as -noswf

	 ]]></includeExample>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='addFormatAt' fullname='flashx.textLayout.conversion:TextConverter/addFormatAt' isStatic='true' isFinal='false' isOverride='false'  param_names='index;format;importerClass;exporterClass;clipboardFormat' param_types='int;String;Class;Class;String' param_defaults='undefined;undefined;undefined;null;null' result_type='void'>
<description><![CDATA[

		 Register a new format for import/export, at the specified location.

		 Location can be significant for clients that have multiple 

		 choices for which format to use, such as when importing from the external clipboard. 

		 Lower numbers indicate higher priority; these converters will be tried first.

		 The new format may support importing and/or exporting.

		 If the format has already been added, then it will be present in multiple locations. The 

		 first one found will be used.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[importClass    The import converter class to register or null

		 ]]></param>
<param><![CDATA[exportClass    The export converter class to register or null

		 ]]></param>
<param><![CDATA[format         The format string tagging the converter classes

		 ]]></param>
<param><![CDATA[clipboardFormat	The string used as the clipboard format when converting to/from the clipboard. Make this null if the format doesn't support clipboard access.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='addFormat' fullname='flashx.textLayout.conversion:TextConverter/addFormat' isStatic='true' isFinal='false' isOverride='false'  param_names='format;importerClass;exporterClass;clipboardFormat' param_types='String;Class;Class;String' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Register a new format for import/export. The new format will be added at the end,

		 as the lowest priority. Location can be significant for clients that have multiple 

		 choices for which format to use, such as when importing from the external clipboard. 

		 The new format may support importing and/or exporting.

		 If the format has already been added, then it will be present in multiple locations. The 

		 first one found will be used.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[importClass    The import converter class to register or null

		 ]]></param>
<param><![CDATA[exportClass    The export converter class to register or null

		 ]]></param>
<param><![CDATA[format         The format string tagging the converter classes. Formats can be any name, but must be unique. 

		 ]]></param>
<param><![CDATA[clipboardFormat	The string used as the clipboard format when converting to/from the clipboard. Make this null if the format doesn't support clipboard access.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='export' fullname='flashx.textLayout.conversion:TextConverter/export' isStatic='true' isFinal='false' isOverride='false'  param_names='source;format;conversionType' param_types='flashx.textLayout.elements:TextFlow;String;String' param_defaults='undefined;undefined;undefined' result_type='Object'>
<description><![CDATA[ 

		 Exports a TextFlow to a specified format. 

		 <p>Use one of the static constants supplied with this class, a MIME type,

		 or a user defined format for user defined exporters to specify 

		 the <code>format</code> parameter:

		 <ul>

		 <li>TextConverter.TEXT_FIELD_HTML_FORMAT</li>

		 <li>TextConverter.PLAIN_TEXT_FORMAT</li>

		 <li>TextConverter.TEXT_LAYOUT_FORMAT</li>

		 </ul>

		 </p>

		 <p>Specify the type of the exported data in the <code>conversionType</code> parameter 

		 with one of the static constants supplied by the ConversionType class, or a user defined

		 data type for user defined exporters:

		 <ul>

		 <li>ConversionType.STRING_TYPE</li>

		 <li>ConversionType.XML_TYPE</li>

		 </ul>

		 </p>

		 

		 Returns a representation of the TextFlow in the specified format, or null on errors.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[source	Source content

		 ]]></param>
<param><![CDATA[format	Output format

		 ]]></param>
<param><![CDATA[conversionType	Type of exported data

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[Object	Exported form of the TextFlow, or null on errors

		 ]]></return>
<see><![CDATA[#TEXT_FIELD_HTML_FORMAT

		 ]]></see>
<see><![CDATA[#PLAIN_TEXT_FORMAT

		 ]]></see>
<see><![CDATA[#TEXT_LAYOUT_FORMAT

		 ]]></see>
<see><![CDATA[flashx.textLayout.conversion.ConversionType

		 ]]></see>
</method>
<method name='findFormatIndex' fullname='flashx.textLayout.conversion:TextConverter/private:findFormatIndex' isStatic='true' isFinal='false' isOverride='false'  param_names='format' param_types='String' param_defaults='undefined' result_type='int'>
</method>
<method name='getExporter' fullname='flashx.textLayout.conversion:TextConverter/getExporter' isStatic='true' isFinal='false' isOverride='false'  param_names='format' param_types='String' param_defaults='undefined' result_type='flashx.textLayout.conversion:ITextExporter'>
<description><![CDATA[ 

		 Creates and returns an export converter, which you can then use to export from 

		 a TextFlow to a source string or XML object. Use this function if 

		 you have many separate exports to perform. It is equivalent to calling 

		 <code>flashx.textLayout.conversion.TextConverter.export()</code>.

		 <p>Use one of the static constants supplied with this class

		 to specify the <code>format</code> parameter:

		 <ul>

		 <li>TextConverter.TEXT_FIELD_HTML_FORMAT</li>

		 <li>TextConverter.PLAIN_TEXT_FORMAT</li>

		 <li>TextConverter.TEXT_LAYOUT_FORMAT</li>

		 </ul>

		 </p>

		 <p>If the format has been added multiple times, the first one found will be used.</p>

		 ]]></description>
<includeExample><![CDATA[examples\getExporter_example.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[format	Target format for exported data

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[ITextExporter	Text exporter that can export in the specified format

		 ]]></return>
<see><![CDATA[#TEXT_FIELD_HTML_FORMAT

		 ]]></see>
<see><![CDATA[#PLAIN_TEXT_FORMAT

		 ]]></see>
<see><![CDATA[#TEXT_LAYOUT_FORMAT

		 ]]></see>
</method>
<method name='getFormatAt' fullname='flashx.textLayout.conversion:TextConverter/getFormatAt' isStatic='true' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='String'>
<description><![CDATA[ Returns the format name for the index'th format.

		 ]]></description>
<langversion><![CDATA[3.0 

	     ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='getFormatDescriptorAt' fullname='flashx.textLayout.conversion:TextConverter/getFormatDescriptorAt' isStatic='true' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='flashx.textLayout.conversion:FormatDescriptor'>
<description><![CDATA[ Returns the FormatDescriptor for the index'th format. 

		]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</method>
<method name='getImporter' fullname='flashx.textLayout.conversion:TextConverter/getImporter' isStatic='true' isFinal='false' isOverride='false'  param_names='format;config' param_types='String;flashx.textLayout.elements:IConfiguration' param_defaults='undefined;null' result_type='flashx.textLayout.conversion:ITextImporter'>
<description><![CDATA[ 

		 Creates and returns an import converter, which you can then use to import from a 

		 source string, an XML object, or any user defined data formats to a TextFlow. 

		 Use this method if you have many separate imports to perform, or if you want to 

		 handle errors during import. It is equivalent to calling 

		 <code>flashx.textLayout.conversion.TextConverter.importToFlow()</code>.

		 <p>Use one of the static constants supplied with this class

		 to specify the <code>format</code> parameter, a MIME type, or a user defined

		 data format.

		 <ul>

		 <li>TextConverter.TEXT_FIELD_HTML_FORMAT</li>

		 <li>TextConverter.PLAIN_TEXT_FORMAT</li>

		 <li>TextConverter.TEXT_LAYOUT_FORMAT</li>

		 </ul>

		 </p>

		 <p>If the format has been added multiple times, the first one found will be used.</p>

		 ]]></description>
<includeExample><![CDATA[examples\getImporter_example.as -noswf

		 ]]></includeExample>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[format	Format of source content. Use constants from 

		 					flashx.textLayout.conversion.TextConverter.TEXT_LAYOUT_FORMAT, PLAIN_TEXT_FORMAT, TEXT_FIELD_HTML_FORMAT etc,

		 					a MIME type, or a user defined format.

		 ]]></param>
<param><![CDATA[config    configuration to use during this import. null means take the current default.

		 					You can also set the configuration via the <code>ITextImporter.configuration</code>

		 					property.

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[ITextImporter	Text importer that can import the source data

		 ]]></return>
<see><![CDATA[#TEXT_FIELD_HTML_FORMAT

		 ]]></see>
<see><![CDATA[#PLAIN_TEXT_FORMAT

		 ]]></see>
<see><![CDATA[#TEXT_LAYOUT_FORMAT

		 ]]></see>
</method>
<method name='importToFlow' fullname='flashx.textLayout.conversion:TextConverter/importToFlow' isStatic='true' isFinal='false' isOverride='false'  param_names='source;format;config' param_types='Object;String;flashx.textLayout.elements:IConfiguration' param_defaults='undefined;undefined;null' result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[ 

		 Creates a TextFlow from source content in a specified format.

		 <p>Use one of the static constants supplied with this class, a MIME type,

		 to specify the <code>format</code> parameter, or use a user defined

		 value for user-registered importers:

		 <ul>

		 <li>TextConverter.TEXT_FIELD_HTML_FORMAT</li>

		 <li>TextConverter.PLAIN_TEXT_FORMAT</li>

		 <li>TextConverter.TEXT_LAYOUT_FORMAT</li>

		 </ul>

		 </p>

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[source	Source content

		 ]]></param>
<param><![CDATA[format	Format of source content

		 ]]></param>
<param><![CDATA[config    IConfiguration to use when creating new TextFlows

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[TextFlow that was created from the source, or null on errors.

		 ]]></return>
<see><![CDATA[#TEXT_FIELD_HTML_FORMAT

		 ]]></see>
<see><![CDATA[#PLAIN_TEXT_FORMAT

		 ]]></see>
<see><![CDATA[#TEXT_LAYOUT_FORMAT

		 ]]></see>
</method>
<method name='removeFormatAt' fullname='flashx.textLayout.conversion:TextConverter/removeFormatAt' isStatic='true' isFinal='false' isOverride='false'  param_names='index' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Remove the format at the index location. 

		 
		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[index     The format to remove

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='removeFormat' fullname='flashx.textLayout.conversion:TextConverter/removeFormat' isStatic='true' isFinal='false' isOverride='false'  param_names='format' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Remove the format. 

		 If a format was added multiple times, only the first one found is removed.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[format     The converter format string to remove

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='setFormatsToDefault' fullname='flashx.textLayout.conversion:TextConverter/tlf_internal:setFormatsToDefault' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='numFormats' fullname='flashx.textLayout.conversion:TextConverter/numFormats/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Number of formats.

		]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		]]></playerversion>
</method>
<field name='PLAIN_TEXT_FORMAT' fullname='flashx.textLayout.conversion:TextConverter/PLAIN_TEXT_FORMAT' type='String' isStatic='true' isConst='true' defaultValue='plainTextFormat' >
<description><![CDATA[ 

		 Plain text format.

		 Use this for creating a TextFlow from a simple, unformatted String, 

		 or for creating a simple, unformatted String from a TextFlow.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='TEXT_FIELD_HTML_FORMAT' fullname='flashx.textLayout.conversion:TextConverter/TEXT_FIELD_HTML_FORMAT' type='String' isStatic='true' isConst='true' defaultValue='textFieldHTMLFormat' >
<description><![CDATA[ 

		 HTML format.

		 Use this for importing from, or exporting to, a TextFlow using the HTML fomat.

		 The Text Layout Framework HTML supports a subset of the tags and attributes supported by

		 the TextField class in the <code>flash.text</code> package.

		 <p>The following table lists the HTML tags and attributes supported for the import

		 and export process (tags and attributes supported by TextField, but not supported by 

		 the Text Layout Framework are specifically described as not supported):</p>

		 

		 

		 <table class="innertable" width="640">

		 

		 <tr>

		 

		 <th>

		 Tag

		 </th>

		 

		 <th>

		 Description

		 </th>

		 

		 </tr>

		 

		 <tr>

		 

		 <td>

		 Anchor tag

		 </td>

		 

		 <td>

		 The <code>&lt;a&gt;</code> tag creates a hypertext link and supports the following attributes:

		 <ul>

		 

		 <li>

		 <code>target</code>: Specifies the name of the target window where you load the page. 

		 Options include <code>_self</code>, <code>_blank</code>, <code>_parent</code>, and 

		 <code>_top</code>. The <code>_self</code> option specifies the current frame in the current window, 

		 <code>_blank</code> specifies a new window, <code>_parent</code> specifies the parent of the 

		 current frame, and <code>_top</code> specifies the top-level frame in the current window. 

		 </li>

		 
		 <li>

		 <code>href</code>: Specifies a URL. The URL can 

		 be either absolute or relative to the location of the SWF file that 

		 is loading the page. An example of an absolute reference to a URL is 

		 <code>http://www.adobe.com</code>; an example of a relative reference is 

		 <code>/index.html</code>. Absolute URLs must be prefixed with 

		 http://; otherwise, Flash treats them as relative URLs. 

		 <strong>Note: Unlike the TextField class, </strong>ActionScript <code>link</code> events 

		 are not supported. Neither are

		 <code>a:link</code>, <code>a:hover</code>, and <code>a:active</code> styles.

		 </li>

		 

		 </ul>

		 

		 </td>

		 </tr>

		 

		 <tr>

		 

		 <td>

		 Bold tag

		 </td>

		 

		 <td>

		 The <code>&lt;b&gt;</code> tag renders text as bold. A bold typeface must be available for the font used.

		 </td>

		 </tr>

		 

		 <tr>

		 

		 <td>

		 Break tag

		 </td>

		 <td>

		 The <code>&lt;br&gt;</code> tag creates a line break in the text.

		 </td>

		 </tr>

		 

		 <tr>

		 

		 <td>

		 Font tag

		 </td>

		 

		 <td>

		 The <code>&lt;font&gt;</code> tag specifies a font or list of fonts to display the text.The font tag 

		 supports the following attributes:

		 <ul>

		 

		 <li>

		 <code>color</code>: Only hexadecimal color (<code>#FFFFFF</code>) values are supported. 

		 </li>

		 

		 <li>

		 <code>face</code>: Specifies the name of the font to use. As shown in the following example, 

		 you can specify a list of comma-delimited font names, in which case Flash Player selects the first available 

		 font. If the specified font is not installed on the local computer system or isn't embedded in the SWF file, 

		 Flash Player selects a substitute font. 

		 </li>

		 

		 <li>

		 <code>size</code>: Specifies the size of the font. You can use absolute pixel sizes, such as 16 or 18 

		 or relative point sizes, such as +2 or -4. 

		 </li>

		 

		 <li>

		 <code>letterspacing</code>: Specifies the tracking (manual kerning) in pixels to be applied to the right of each character. 

		 </li>

		 

		 <li>

		 <code>kerning</code>: Specifies whether kerning is enabled or disabled. A non-zero value enables kerning, while zero disables it.  

		 </li>

		 

		 </ul>

		 

		 </td>

		 </tr>

		 

		 <tr>

		 

		 <td>

		 Image tag

		 </td>

		 

		 <td>

		 The <code>&lt;img&gt;</code> tag lets you embed external image files (JPEG, GIF, PNG), SWF files, and 

		 movie clips inside text.  

		 

		  <p>The <code>&lt;img&gt;</code> tag supports the following attributes: </p>

		 

		 <ul >

		 

		 <li>

		 <code>src</code>: Specifies the URL to an image or SWF file, or the linkage identifier for a movie clip 

		 symbol in the library. This attribute is required; all other attributes are optional. External files (JPEG, GIF, PNG, 

		 and SWF files) do not show until they are downloaded completely. 

		 </li>

		 

		 <li>

		 <code>width</code>: The width of the image, SWF file, or movie clip being inserted, in pixels. 

		 </li>

		 

		 <li>

		 <code>height</code>: The height of the image, SWF file, or movie clip being inserted, in pixels. 

		 </li>

		 </ul>

		 <p><strong>Note: </strong> Unlike the TextField class, the following attributes are not supported:

		 <code>align</code>, <code>hspace</code>, <code>vspace</code>,  <code>id</code>, and <code>checkPolicyFile</code>.</p>

		 
		 </td>

		 </tr>

		 

		 <tr>

		 

		 <td>

		 Italic tag

		 </td>

		 

		 <td>

		 The <code>&lt;i&gt;</code> tag displays the tagged text in italics. An italic typeface must be available 

		 for the font used.

		 </td>

		 </tr>

		 

		 <tr>

		 

		 <td>

		 <em>List item tag</em>

		 </td>

		 

		 <td>

		 <strong>Note: </strong> Unlike the TextField class, the List item tag is not supported.

		 </td>

		 </tr>

		 

		 <tr>

		 

		 <td>

		 Paragraph tag

		 </td>

		 

		 <td>

		 The <code>&lt;p&gt;</code> tag creates a new paragraph. 

		 

		 The <code>&lt;p&gt;</code> tag supports the following attributes:

		 <ul >

		 

		 <li>

		 align: Specifies alignment of text within the paragraph; valid values are <code>left</code>, <code>right</code>, <code>justify</code>, and <code>center</code>. 

		 </li>

		 

		 <li>

		 class: Specifies a class name that can be used for styling 

		 </li>

		 

		 </ul>

		 

		 </td>

		 </tr>

		 

		 <tr>

		 

		 <td>

		 Span tag

		 </td>

		 

		 <td>

		 

		 The <code>&lt;span&gt;</code> tag supports the following attributes:

		 

		 <ul>

		 

		 <li>

		 class: Specifies a class name that can be used for styling. While span tags are often used to set a style defined in a style sheet,

		 TLFTextField instances do not support style sheets. The span tag is available for TLFTextField instances to refer to a class with 

		 style properties.</li>

		 <li> You can also put properties directly in the span tag: 

		 <code>&lt;span fontFamily="Arial"&gt;Hi there&lt;/span&gt;</code>. However, nested span tags are not supported.

		 </li>

		 

		 </ul>

		 

		 </td>

		 </tr>

		 

		 <tr>

		 

		 <td>

		 Text format tag

		 </td>

		 

		 <td>

		  <p>The <code>&lt;textformat&gt;</code> tag lets you use a subset of paragraph formatting 

		 properties of the TextFormat class within text fields, including line leading, indentation, 

		 margins, and tab stops. You can combine <code>&lt;textformat&gt;</code> tags with the 

		 built-in HTML tags. </p>

		 

		  <p>The <code>&lt;textformat&gt;</code> tag has the following attributes: </p>

		 <ul >

		 

		 

		 <li>

		 <code>indent</code>: Specifies the indentation from the left margin to the first character 

		 in the paragraph; corresponds to <code>TextFormat.indent</code>. Both positive and negative 

		 numbers are acceptable. 

		 </li>

		 

		 <li>

		 <code>blockindent</code>: Specifies the indentation applied to all lines of the paragraph.

		 </li>

		 

		 <li>

		 <code>leftmargin</code>: Specifies the left margin of the paragraph, in points; corresponds 

		 to <code>TextFormat.leftMargin</code>. 

		 </li>

		 

		 <li>

		 <code>rightmargin</code>: Specifies the right margin of the paragraph, in points; corresponds 

		 to <code>TextFormat.rightMargin</code>. 

		 </li>

		 

		 	<li>

		 <code>leading</code>: Specifies the leading (line height) measured in pixels between a line's ascent and the previous line's descent

		 </li>

		 

		 	<li>

		 <code>tabstops</code>: Specifies a comma-separated list of tab stop positions for the paragraph. 

		 </li>

		 </ul>

		 

		 </td>

		 </tr>

		 

		 <tr>

		 

		 <td>

		 Underline tag

		 </td>

		 

		 <td>

		 The <code>&lt;u&gt;</code> tag underlines the tagged text.

		 </td>

		 </tr>

		 

		 </table>

		 

		 <p>When an unknown tag is imported the <code>textFieldHTMLFormat</code> importer will either set a single FlowElement's typeName property to that tag name

		 or create a DivElement or a SubParagraphGroupElement with its typeName property set to the tag name.</p>

		 <p>The <code>textFieldHTMLFormat</code> exporter will export <code>typeName</code> as the XML tag when it is different from the default.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.FlowElement#typeName

		 
		 ]]></see>
</field>
<field name='TEXT_LAYOUT_FORMAT' fullname='flashx.textLayout.conversion:TextConverter/TEXT_LAYOUT_FORMAT' type='String' isStatic='true' isConst='true' defaultValue='textLayoutFormat' >
<description><![CDATA[ 

		 TextLayout Format.

		 Use this for importing from, or exporting to, a TextFlow using the TextLayout markup format.

		 Text Layout format will detect the following errors:

		 <ul>

		 <li>Unexpected namespace</li>

		 <li>Unknown element</li>

		 <li>Unknown attribute</li>

		 </ul>

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<field name='_descriptors' fullname='flashx.textLayout.conversion:TextConverter/tlf_internal:_descriptors' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='ConverterBase' fullname='flashx.textLayout.conversion:ConverterBase' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\conversion\ConverterBase.as' namespace='flashx.textLayout.conversion' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This is a base class for importers as well as exporters. It implements the error handling

	 plus property getters and setters that generate an error when invoked.

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10.2

	 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

	 ]]></playerversion>
</classRec>
<method name='clear' fullname='flashx.textLayout.conversion:ConverterBase/tlf_internal:clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='reportError' fullname='flashx.textLayout.conversion:ConverterBase/tlf_internal:reportError' isStatic='false' isFinal='false' isOverride='false'  param_names='error' param_types='String' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<param><![CDATA[error	the String that describes the error

		 ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='errors' fullname='flashx.textLayout.conversion:ConverterBase/errors/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Vector$String'>
<description><![CDATA[ Errors encountered while parsing. 

		 Value is a vector of Strings.

		 ]]></description>
</method>
<method name='throwOnError' fullname='flashx.textLayout.conversion:ConverterBase/throwOnError/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[ITextImporter#throwOnError()

		 ]]></copy>
</method>
<method name='useClipboardAnnotations' fullname='flashx.textLayout.conversion:ConverterBase/useClipboardAnnotations/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[ITextImporter#useClipboardAnnotations()

		 ]]></copy>
</method>
<method name='throwOnError' fullname='flashx.textLayout.conversion:ConverterBase/throwOnError/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='useClipboardAnnotations' fullname='flashx.textLayout.conversion:ConverterBase/useClipboardAnnotations/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='MERGE_TO_NEXT_ON_PASTE' fullname='flashx.textLayout.conversion:ConverterBase/MERGE_TO_NEXT_ON_PASTE' type='String' isStatic='true' isConst='true' defaultValue='mergeToNextOnPaste' >
<description><![CDATA[ A converter that converts clipboard data into a TextFlow should use the MERGE_TO_NEXT_ON_PASTE property

		 to control how the elements are treated when they are merged into an existing TextFlow on paste. This is useful

		 if you want special handling for the case where only part of the element is copied. For instance, wheh a list

		 is copied, if only part of the list is copied, and you paste it into another list, it merges into the list as

		 additional items. If the entire list is copied, it appears as a nested list. When TLF creates a TextFlow for use

		 on the clipboard, it decorates any partial elements with user properties that control whether the end of the element 

		 should be merged with the one after it. This user property is never pasted into the final TextFlow, but it may go 

		 on the elements in the TextScrap.textFlow. When copying text, the converter has the option to look for these properties 

		 to propagate them into the format that is posted on the clipboard. For instance, the plain text exporter checks the 

		 "mergeToNextOnPaste" property on paragraphs and supresses the paragraph terminator if it is found set to true. 

		 Likewise on import if the incoming String has no terminator, and useClipboardAnnotations is true, then it calls 

		 <code>setStyle(MERGE_TO_NEXT_ON_PASTE, "true")</code> on the corresponding paragraph so that when it is pasted 

		 it will blend into the paragraph where its pasted. This property should only be set on elements in a TextScrap, and

		 only on the last element in the scrap.

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

 	 	 ]]></playerversion>
</field>
<field name='_errors' fullname='flashx.textLayout.conversion:ConverterBase/private:_errors' type='Vector$String' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_throwOnError' fullname='flashx.textLayout.conversion:ConverterBase/private:_throwOnError' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_useClipboardAnnotations' fullname='flashx.textLayout.conversion:ConverterBase/private:_useClipboardAnnotations' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<interfaceRec name='IPlainTextExporter' fullname='flashx.textLayout.conversion:IPlainTextExporter' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\conversion\IPlainTextExporter.as' namespace='flashx.textLayout.conversion' access='public' baseClasses='flashx.textLayout.conversion:ITextExporter' isFinal='false' isDynamic='false' >
<description><![CDATA[ This interface should be implemented by converters that export plain text. Clients that have explicitly

	 created an exporter using TextConverter.getExporter may control the export process by calling into these methods on the 

	 exporter.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10.0

	 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

	 ]]></playerversion>
</interfaceRec>
<method name='paragraphSeparator' fullname='flashx.textLayout.conversion:IPlainTextExporter/flashx.textLayout.conversion:IPlainTextExporter:paragraphSeparator/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ Specifies the character sequence used (in a text flow's plain-text equivalent) to separate paragraphs.

		 The paragraph separator is not added after the last paragraph. 

		 

		 <p>This property applies to the <code>PLAIN_TEXT_FORMAT</code> exporter.</p>

		 
		 <p>The default value is "\n".</p> 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='stripDiscretionaryHyphens' fullname='flashx.textLayout.conversion:IPlainTextExporter/flashx.textLayout.conversion:IPlainTextExporter:stripDiscretionaryHyphens/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ This property indicates whether discretionary hyphens in the text should be stripped during the export process.

		 Discretionary hyphens, also known as "soft hyphens", indicate where to break a word in case the word must be

		 split between two lines. The Unicode character for discretionary hyphens is <code>\u00AD</code>.

		 <p>If this property is set to <code>true</code>, discretionary hyphens that are in the original text will not be in the exported text, 

		 even if they are part of the original text. If <code>false</code>, discretionary hyphens will be in the exported text.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='paragraphSeparator' fullname='flashx.textLayout.conversion:IPlainTextExporter/flashx.textLayout.conversion:IPlainTextExporter:paragraphSeparator/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='stripDiscretionaryHyphens' fullname='flashx.textLayout.conversion:IPlainTextExporter/flashx.textLayout.conversion:IPlainTextExporter:stripDiscretionaryHyphens/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='IHTMLImporter' fullname='flashx.textLayout.conversion:IHTMLImporter' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\conversion\IHTMLImporter.as' namespace='flashx.textLayout.conversion' access='public' baseClasses='flashx.textLayout.conversion:ITextImporter' isFinal='false' isDynamic='false' >
<description><![CDATA[ This interface should be implemented by converters that import HTML or HTML-structured data. Clients that have explicitly

	 created an importer using TextConverter.getImporter may control the import process by calling into these methods on the 

	 importer.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10.0

	 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

	 ]]></playerversion>
</interfaceRec>
<method name='imageSourceResolveFunction' fullname='flashx.textLayout.conversion:IHTMLImporter/flashx.textLayout.conversion:IHTMLImporter:imageSourceResolveFunction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[ This property allows specification of a function to modify the source property supplied to an <code>&lt;img&gt;</code> element. 

		 Sample use would be to modify relative paths to some caller specified root path.  The function takes the string set in the markup and returns the actual string

		 to be used.  

		 

		 <p>Note that by default relative paths are relative to the loaded SWF.  One use of this function is to make relative paths relative to some other location.</p>

		 

		 <p>The resolver function should look like this:</p>

		 <code>function resolver(src:String):String</code>

		 <p>It takes as an input parameter the value of src on the incoming img element, and returns the adjusted value.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.0

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</method>
<method name='preserveBodyElement' fullname='flashx.textLayout.conversion:IHTMLImporter/flashx.textLayout.conversion:IHTMLImporter:preserveBodyElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ This property tells the importer to create an element for the <code>BODY</code> tag in HTML markup.

		 

		 <p>The element will normally be a <code>DivElement</code> with <code>typeName</code> set to <code>BODY</code>.</p>

		 <p>This will also trigger parsing of <code>class</code> and <code>id</code> on the element.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.0

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</method>
<method name='preserveHTMLElement' fullname='flashx.textLayout.conversion:IHTMLImporter/flashx.textLayout.conversion:IHTMLImporter:preserveHTMLElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ This property tells the importer to create an element for the <code>HTML</code> tag in HTML markup.

		 

		 <p>The element will normally be the top-level <code>TextFlow</code> element with <code>typeName</code> set to <code>HTML</code>.</p>

		 <p>This will also trigger parsing of <code>class</code> and <code>id</code> on the element.</p>

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.0

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</method>
<method name='imageSourceResolveFunction' fullname='flashx.textLayout.conversion:IHTMLImporter/flashx.textLayout.conversion:IHTMLImporter:imageSourceResolveFunction/set' isStatic='false' isFinal='false' isOverride='false'  param_names='resolver' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='preserveBodyElement' fullname='flashx.textLayout.conversion:IHTMLImporter/flashx.textLayout.conversion:IHTMLImporter:preserveBodyElement/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='preserveHTMLElement' fullname='flashx.textLayout.conversion:IHTMLImporter/flashx.textLayout.conversion:IHTMLImporter:preserveHTMLElement/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='ITextLayoutImporter' fullname='flashx.textLayout.conversion:ITextLayoutImporter' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\conversion\ITextLayoutImporter.as' namespace='flashx.textLayout.conversion' access='public' baseClasses='flashx.textLayout.conversion:ITextImporter' isFinal='false' isDynamic='false' >
<description><![CDATA[ This interface should be implemented by converters that import TextLayout structured data. Clients that have explicitly

	 created an importer using TextConverter.getImporter may control the import process by calling into these methods on the 

	 importer.

	 

	 ]]></description>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10.0

	 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

	 ]]></playerversion>
</interfaceRec>
<method name='imageSourceResolveFunction' fullname='flashx.textLayout.conversion:ITextLayoutImporter/flashx.textLayout.conversion:ITextLayoutImporter:imageSourceResolveFunction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[ This property allows specification of a function to modify the source property supplied to an <code>&lt;img&gt;</code> element. 

		 Sample use would be to modify relative paths to some caller specified root path.  The function takes the string set in the markup and returns the actual string

		 to be used.  

		 

		 <p>Note that by default relative paths are relative to the loaded SWF.  One use of this function is to make relative paths relative to some other location.</p>

		 

		 <p>The resolver function should look like this:</p>

		 <code>function resolver(src:String):String</code>

		 <p>It takes as an input parameter the value of src on the incoming img element, and returns the adjusted value.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.0

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</method>
<method name='imageSourceResolveFunction' fullname='flashx.textLayout.conversion:ITextLayoutImporter/flashx.textLayout.conversion:ITextLayoutImporter:imageSourceResolveFunction/set' isStatic='false' isFinal='false' isOverride='false'  param_names='resolver' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<classRec name='PlainTextExporter' fullname='flashx.textLayout.conversion:PlainTextExporter' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\conversion\PlainTextExporter.as' namespace='flashx.textLayout.conversion' access='public' baseclass='flashx.textLayout.conversion:ConverterBase' interfaces='flashx.textLayout.conversion:IPlainTextExporter' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 Export converter for plain text format. This class provides an alternative to

	 the <code>TextConverter.export()</code> static method for exporting plain text.

	  The PlainTextExporter class's <code>export()</code> method results in the 

	 same output string as the <code>TextConverter.export()</code> static method 

	 if the two properties of the PlainTextExporter class, the <code>PARAGRAPH_SEPARATOR_PROPERTY</code>

	 and the <code>STRIP_DISCRETIONARY_HYPHENS_PROPERTY</code> properties, contain their

	 default values of <code>"\n"</code> and <code>true</code>, respectively.

	 ]]></description>
<includeExample><![CDATA[examples\PlainTextExporter_example.as -noswf

	 ]]></includeExample>
<langversion><![CDATA[3.0

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='PlainTextExporter' fullname='flashx.textLayout.conversion:PlainTextExporter/PlainTextExporter' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Constructor 

		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='exportToString' fullname='flashx.textLayout.conversion:PlainTextExporter/protected:exportToString' isStatic='false' isFinal='false' isOverride='false'  param_names='source' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='String'>
<description><![CDATA[ Export text content as a string

		 ]]></description>
<param><![CDATA[source	the text to export

		 ]]></param>
<return><![CDATA[String	the exported content

		 

  		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='export' fullname='flashx.textLayout.conversion:PlainTextExporter/export' isStatic='false' isFinal='false' isOverride='false'  param_names='source;conversionType' param_types='flashx.textLayout.elements:TextFlow;String' param_defaults='undefined;undefined' result_type='Object'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[ITextExporter#export()

		 ]]></copy>
</method>
<method name='paragraphSeparator' fullname='flashx.textLayout.conversion:PlainTextExporter/paragraphSeparator/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IPlainTextExporter#paragraphSeparator

 		 ]]></copy>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='stripDiscretionaryHyphens' fullname='flashx.textLayout.conversion:PlainTextExporter/stripDiscretionaryHyphens/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[IPlainTextExporter#stripDiscretionaryHyphens

  		 ]]></copy>
<langversion><![CDATA[3.0-

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='paragraphSeparator' fullname='flashx.textLayout.conversion:PlainTextExporter/paragraphSeparator/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='stripDiscretionaryHyphens' fullname='flashx.textLayout.conversion:PlainTextExporter/stripDiscretionaryHyphens/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='_discretionaryHyphen' fullname='flashx.textLayout.conversion:PlainTextExporter/private:_discretionaryHyphen' type='String' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_paragraphSeparator' fullname='flashx.textLayout.conversion:PlainTextExporter/private:_paragraphSeparator' type='String' isStatic='false' isConst='false' >
</field>
<field name='_stripDiscretionaryHyphens' fullname='flashx.textLayout.conversion:PlainTextExporter/private:_stripDiscretionaryHyphens' type='Boolean' isStatic='false' isConst='false' >
</field>
<classRec name='FlowOperation' fullname='flashx.textLayout.operations:FlowOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\FlowOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='Object' interfaces='flashx.undo:IOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The FlowOperation class is the base class for all Text Layout Framework operations. 

	 

	 <p>Operations are transformations of a text flow. An Operation class defines the

	 logic for performing and undoing the transformation. Operations are executed by an

	 edit manager. Most applications do not need to create or manage operations directly

	 (unless implementing a custom edit manager).</p>

	 

	 <p>When an operation is performed, the edit manager dispatches an Operation object 

	 within the FlowOperationEvent object. You can query 

	 this Operation object to decide whether or not to allow the operation, to decide whether 

	 to perform some other operation as well, or to update related user-interface elements.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 

	 ]]></see>
</classRec>
<method name='FlowOperation' fullname='flashx.textLayout.operations:FlowOperation/FlowOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='textFlow' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='*'>
<description><![CDATA[ 

		 Creates the FlowOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[textFlow	The text flow to which this operation is applied.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='canUndo' fullname='flashx.textLayout.operations:FlowOperation/canUndo' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[	

		 Test if this operation be placed on the undo stack.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
<return><![CDATA[true means to push the operation onto the undo stack.  false means do not push this operation.

		 

		 ]]></return>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:FlowOperation/doOperation' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Executes the operation. 

		 

		 <p>This method must be overridden in derived classes. The base class method does nothing.

		 You should not call <code>doOperation()</code> directly. The edit manager 

		 calls the method when it executes the operation. </p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[Boolean <code>true</code>, if the operation succeeded. Otherwise, <code>false</code>.

		 

		 ]]></return>
</method>
<method name='merge' fullname='flashx.textLayout.operations:FlowOperation/tlf_internal:merge' isStatic='false' isFinal='false' isOverride='false'  param_names='operation' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='flashx.textLayout.operations:FlowOperation'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[operation 	The FlowOperation to merge against

		  ]]></param>
<return><![CDATA[A FlowOperation representing the combined operation if 

		  the merge was successful, null otherwise.

		 ]]></return>
<private><![CDATA[]]></private>
</method>
<method name='performRedo' fullname='flashx.textLayout.operations:FlowOperation/performRedo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='performUndo' fullname='flashx.textLayout.operations:FlowOperation/performUndo' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:FlowOperation/redo' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[	

		 Re-executes the operation. 

		 

		 <p>This method must be overridden in derived classes. The base class method does nothing.

		 You should not call <code>redo()</code> directly. The edit manager 

		 calls the method when it re-executes the operation. </p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[The SelectionState object passed to the operation when it was performed. This

		 SelectionState object can be the current selection or a selection created specifically

		 for the operation. 

		 

		 ]]></return>
</method>
<method name='setGenerations' fullname='flashx.textLayout.operations:FlowOperation/tlf_internal:setGenerations' isStatic='false' isFinal='false' isOverride='false'  param_names='beginGeneration;endGeneration' param_types='uint;uint' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:FlowOperation/undo' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[	

		 Reverses the operation. 

		 

		 <p>This method must be overridden in derived classes. The base class method does nothing.

		 You should not call <code>undo()</code> directly. The edit manager 

		 calls the method when it reverses the operation. </p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[The SelectionState object passed to the operation when it was performed. This

		 SelectionState object can be the current selection or a selection created specifically

		 for the operation. 

		 

		 ]]></return>
</method>
<method name='beginGeneration' fullname='flashx.textLayout.operations:FlowOperation/beginGeneration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[

		 The text flow generation before the operation.

		   

		 <p>A generation of 0 indicates that the operation did not complete.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='endGeneration' fullname='flashx.textLayout.operations:FlowOperation/endGeneration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[ 

		 The text flow generation after the operation.

		 

		 <p>A generation of 0 indicates that the operation did not complete.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='textFlow' fullname='flashx.textLayout.operations:FlowOperation/textFlow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[ 

		 The TextFlow object to which this operation is applied.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='textFlow' fullname='flashx.textLayout.operations:FlowOperation/textFlow/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='void'>
</method>
<field name='_beginGeneration' fullname='flashx.textLayout.operations:FlowOperation/private:_beginGeneration' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_endGeneration' fullname='flashx.textLayout.operations:FlowOperation/private:_endGeneration' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_textFlow' fullname='flashx.textLayout.operations:FlowOperation/private:_textFlow' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
</field>
<field name='userData' fullname='flashx.textLayout.operations:FlowOperation/userData' type='' isStatic='false' isConst='false' >
<description><![CDATA[ 

		 Arbitrary data associated with an element. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</field>
<classRec name='RedoOperation' fullname='flashx.textLayout.operations:RedoOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\RedoOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The RedoOperation class encapsulates a redo operation.

	 
	 ]]></description>
<includeExample><![CDATA[examples\RedoOperation_example.as -noswf

	 

	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='RedoOperation' fullname='flashx.textLayout.operations:RedoOperation/RedoOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operation' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='*'>
<description><![CDATA[ 

		 Creates a RedoOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operation	The operation to redo.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='operation' fullname='flashx.textLayout.operations:RedoOperation/operation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.operations:FlowOperation'>
<description><![CDATA[ 

		 The operation to redo.

		  

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='operation' fullname='flashx.textLayout.operations:RedoOperation/operation/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='void'>
</method>
<field name='_operation' fullname='flashx.textLayout.operations:RedoOperation/private:_operation' type='flashx.textLayout.operations:FlowOperation' isStatic='false' isConst='false' >
</field>
<classRec name='CompositeOperation' fullname='flashx.textLayout.operations:CompositeOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\CompositeOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CompositeOperation class encapsulates a group of transformations managed as a unit.

	 
	 <p>The CompositeOperation class provides a grouping mechanism for combining multiple FlowOperations 

	 into a single atomic operation. Grouping operations allows them to be undone and redone as a unit. 

	 For example, several single character inserts followed by several backspaces can be undone together as if 

	 they were a single operation. Grouping also provides a mechanism for representing

	 complex operations. For example, a replace operation that modifies more than one text ranges

	 can be represented and managed as a single composite operation.</p>

	 

	 <p><b>Note:</b> It can be more efficient to merge individual atomic operations

	  rather than to combine separate operations into a group. For example, several sequential

	  character inserts can easily be represented as a single insert operation,

	  and undoing or redoing that single operation is more efficient than

	  undoing or redoing a group of insert operations.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='CompositeOperation' fullname='flashx.textLayout.operations:CompositeOperation/CompositeOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operations' param_types='Array' param_defaults='null' result_type='*'>
<description><![CDATA[ 

		 Creates a CompositeOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operations The operations to group.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='addOperation' fullname='flashx.textLayout.operations:CompositeOperation/addOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operation' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Adds an additional operation to the end of the list. 

		 

		 <p>The new operation must operate on the same TextFlow object as 

		 the other operations in the list.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='canUndo' fullname='flashx.textLayout.operations:CompositeOperation/canUndo' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:CompositeOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='merge' fullname='flashx.textLayout.operations:CompositeOperation/tlf_internal:merge' isStatic='false' isFinal='false' isOverride='true'  param_names='operation' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='flashx.textLayout.operations:FlowOperation'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:CompositeOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:CompositeOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='operations' fullname='flashx.textLayout.operations:CompositeOperation/operations/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 An array containing the operations grouped by this composite operation.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='textFlow' fullname='flashx.textLayout.operations:CompositeOperation/textFlow/get' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.elements:TextFlow'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='operations' fullname='flashx.textLayout.operations:CompositeOperation/operations/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Array' param_defaults='undefined' result_type='void'>
</method>
<field name='_operations' fullname='flashx.textLayout.operations:CompositeOperation/private:_operations' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='UndoOperation' fullname='flashx.textLayout.operations:UndoOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\UndoOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The UndoOperation class encapsulates an undo operation.

	 
	 ]]></description>
<includeExample><![CDATA[examples\UndoOperation_example.as -noswf

	 

	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='UndoOperation' fullname='flashx.textLayout.operations:UndoOperation/UndoOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='op' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='*'>
<description><![CDATA[ 

		 Creates an UndoOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[op	The operation to undo.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='operation' fullname='flashx.textLayout.operations:UndoOperation/operation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.operations:FlowOperation'>
<description><![CDATA[ 

		 The operation to undo. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='operation' fullname='flashx.textLayout.operations:UndoOperation/operation/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='void'>
</method>
<field name='_operation' fullname='flashx.textLayout.operations:UndoOperation/private:_operation' type='flashx.textLayout.operations:FlowOperation' isStatic='false' isConst='false' >
</field>
<classRec name='FlowTextOperation' fullname='flashx.textLayout.operations:FlowTextOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\FlowTextOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The FlowTextOperation is the base class for operations that transform a range of text.

	 

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 

	 ]]></see>
</classRec>
<method name='FlowTextOperation' fullname='flashx.textLayout.operations:FlowTextOperation/FlowTextOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='undefined' result_type='*'>
<description><![CDATA[ 

		 Creates the FlowTextOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState Specifies the relevant selection. If relevant to the operation, the 

		 <code>operationState</code> describes the text range to which this operation applies.

		 Otherwise, <code>operationState</code> is used to save the current selection state so that

		 it can be restored when the operation is undone.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='redo' fullname='flashx.textLayout.operations:FlowTextOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[	

		 	

		 Re-executes the operation. 

		 

		 <p>This method must be overridden in derived classes. The base class method does nothing.

		 You should not call <code>redo()</code> directly. The edit manager 

		 calls the method when it re-executes the operation. </p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<return><![CDATA[The SelectionState object passed to the operation when it was performed. This

		 SelectionState object can be the current selection or a selection created specifically

		 for the operation. 

		 

		 ]]></return>
</method>
<method name='absoluteEnd' fullname='flashx.textLayout.operations:FlowTextOperation/absoluteEnd/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The absolute end point of the range of text to which this operation is applied. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='absoluteStart' fullname='flashx.textLayout.operations:FlowTextOperation/absoluteStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The absolute start point of the range of text to which this operation is applied.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='originalSelectionState' fullname='flashx.textLayout.operations:FlowTextOperation/originalSelectionState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ 

		 The selection state at the start of the operation. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='absoluteEnd' fullname='flashx.textLayout.operations:FlowTextOperation/absoluteEnd/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='absoluteStart' fullname='flashx.textLayout.operations:FlowTextOperation/absoluteStart/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='originalSelectionState' fullname='flashx.textLayout.operations:FlowTextOperation/originalSelectionState/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.edit:SelectionState' param_defaults='undefined' result_type='void'>
</method>
<field name='_absoluteEnd' fullname='flashx.textLayout.operations:FlowTextOperation/private:_absoluteEnd' type='int' isStatic='false' isConst='false' >
</field>
<field name='_absoluteStart' fullname='flashx.textLayout.operations:FlowTextOperation/private:_absoluteStart' type='int' isStatic='false' isConst='false' >
</field>
<field name='_originalSelectionState' fullname='flashx.textLayout.operations:FlowTextOperation/private:_originalSelectionState' type='flashx.textLayout.edit:SelectionState' isStatic='false' isConst='false' >
</field>
<classRec name='ApplyTCYOperation' fullname='flashx.textLayout.operations:ApplyTCYOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\ApplyTCYOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[ 

	 The ApplyTCYOperation class encapsulates a TCY transformation.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TCYElement

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='ApplyTCYOperation' fullname='flashx.textLayout.operations:ApplyTCYOperation/ApplyTCYOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;tcyOn' param_types='flashx.textLayout.edit:SelectionState;Boolean' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[ 

		 Creates an ApplyTCYOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState Describes the range of text to which the operation is applied.

		 ]]></param>
<param><![CDATA[tcyValue Specifies whether to apply TCY (<code>true</code>), or remove TCY (<code>false</code>).

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:ApplyTCYOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:ApplyTCYOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:ApplyTCYOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='newTCYElement' fullname='flashx.textLayout.operations:ApplyTCYOperation/newTCYElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:TCYElement'>
<description><![CDATA[ 

		 The TCYElement that was created by doOperation.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</method>
<method name='tcyOn' fullname='flashx.textLayout.operations:ApplyTCYOperation/tcyOn/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Indicates whether the operation applies or removes TCY formatting.

		 

		 <p>If <code>true</code>, then the operation transforms the range into a 

		 TCY element. If <code>false</code>, then the operation removes TCY formatting from

		 the first TCY element in the range.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.TCYElement

		 

		 ]]></see>
</method>
<method name='tcyOn' fullname='flashx.textLayout.operations:ApplyTCYOperation/tcyOn/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='_memento' fullname='flashx.textLayout.operations:ApplyTCYOperation/private:_memento' type='flashx.textLayout.edit:IMemento' isStatic='false' isConst='false' >
</field>
<field name='_tcyElement' fullname='flashx.textLayout.operations:ApplyTCYOperation/private:_tcyElement' type='flashx.textLayout.elements:TCYElement' isStatic='false' isConst='false' >
</field>
<field name='_tcyOn' fullname='flashx.textLayout.operations:ApplyTCYOperation/private:_tcyOn' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='makeBegIdx' fullname='flashx.textLayout.operations:ApplyTCYOperation/private:makeBegIdx' type='int' isStatic='false' isConst='false' >
</field>
<field name='makeEndIdx' fullname='flashx.textLayout.operations:ApplyTCYOperation/private:makeEndIdx' type='int' isStatic='false' isConst='false' >
</field>
<field name='removeBegIdx' fullname='flashx.textLayout.operations:ApplyTCYOperation/private:removeBegIdx' type='int' isStatic='false' isConst='false' >
</field>
<field name='removeEndIdx' fullname='flashx.textLayout.operations:ApplyTCYOperation/private:removeEndIdx' type='int' isStatic='false' isConst='false' >
</field>
<field name='removeRedoBegIdx' fullname='flashx.textLayout.operations:ApplyTCYOperation/private:removeRedoBegIdx' type='int' isStatic='false' isConst='false' >
</field>
<field name='removeRedoEndIdx' fullname='flashx.textLayout.operations:ApplyTCYOperation/private:removeRedoEndIdx' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='SplitElementOperation' fullname='flashx.textLayout.operations:SplitElementOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\SplitElementOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The SplitElementOperation class encapsulates a change that splits any FlowGroupElement into two elements.

	 
	 This operation splits target at operationState.absoluteStart.

	 

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.ParagraphElement

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='SplitElementOperation' fullname='flashx.textLayout.operations:SplitElementOperation/SplitElementOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;targetElement' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowGroupElement' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[ 

		 Creates a SplitElementOperation object.  This operation deletes a block selection and then splits the target at absoluteStart.  The block selection should not cause target to be deleted.

		 Target is a FlowGroupElement but may not be a LinkElement, TCYElement or SubParagraphGroupElement.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState Describes the point at which to split the element.

		 If a range of text is specified, the contents of the range are deleted.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:SplitElementOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:SplitElementOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:SplitElementOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='newElement' fullname='flashx.textLayout.operations:SplitElementOperation/newElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[ 

		 Returns the new element created by doOperation.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='targetElement' fullname='flashx.textLayout.operations:SplitElementOperation/targetElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[ 

		 Specifies the element this operation modifies.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='targetElement' fullname='flashx.textLayout.operations:SplitElementOperation/targetElement/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:FlowGroupElement' param_defaults='undefined' result_type='void'>
</method>
<field name='_memento' fullname='flashx.textLayout.operations:SplitElementOperation/private:_memento' type='flashx.textLayout.edit:IMemento' isStatic='false' isConst='false' >
</field>
<field name='_newElement' fullname='flashx.textLayout.operations:SplitElementOperation/private:_newElement' type='flashx.textLayout.elements:FlowGroupElement' isStatic='false' isConst='false' >
</field>
<field name='_targetMark' fullname='flashx.textLayout.operations:SplitElementOperation/private:_targetMark' type='flashx.textLayout.edit:ElementMark' isStatic='false' isConst='false' >
</field>
<field name='delSelOp' fullname='flashx.textLayout.operations:SplitElementOperation/private:delSelOp' type='flashx.textLayout.operations:DeleteTextOperation' isStatic='false' isConst='false' >
</field>
<classRec name='CreateSubParagraphGroupOperation' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\CreateSubParagraphGroupOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CreateSPGEOperation class encapsulates creating a SubPargraphGroupElement

	 

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='CreateSubParagraphGroupOperation' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/CreateSubParagraphGroupOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;parent;format' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined;null;null' result_type='*'>
<description><![CDATA[ 

		 Constructor.

		 

		 This operation creates a single SubParagraphGroupElement in the first paragraph of the selection range.  That paragraph must have at least one character selected the paragraph terminator does not count towards that selection.

		 Specifying the spgeParent creates an SubParagraphGroupElement int he part of the selection range included by that spgeParent.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState selection over which to apply the operation.  

		 ]]></param>
<param><![CDATA[spgeParent optional parent for the spge element.  If not specified one is chosen based on the selection

		 ]]></param>
<param><![CDATA[spgeFormat optional format to set in the new spge element.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='format' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/format/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ Format to be applied to the new SubParagraphGroupElement

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='newSubParagraphGroupElement' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/newSubParagraphGroupElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:SubParagraphGroupElement'>
<description><![CDATA[ The new SubParagraphGroupElement. 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='parent' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/parent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[ 

		 Specifies the element this operation modifies.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='format' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/format/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='parent' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/parent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:FlowGroupElement' param_defaults='undefined' result_type='void'>
</method>
<field name='_format' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/private:_format' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_mementoList' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/private:_mementoList' type='flashx.textLayout.edit:MementoList' isStatic='false' isConst='false' >
</field>
<field name='_postOpSelectionState' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/private:_postOpSelectionState' type='flashx.textLayout.edit:SelectionState' isStatic='false' isConst='false' >
</field>
<field name='_spgeElement' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/private:_spgeElement' type='flashx.textLayout.elements:SubParagraphGroupElement' isStatic='false' isConst='false' >
</field>
<field name='_spgeParentMarker' fullname='flashx.textLayout.operations:CreateSubParagraphGroupOperation/private:_spgeParentMarker' type='flashx.textLayout.edit:ElementMark' isStatic='false' isConst='false' >
</field>
<classRec name='CutOperation' fullname='flashx.textLayout.operations:CutOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\CutOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CutOperation class encapsulates a cut operation.

	 
	 <p>The specified range is removed from the text flow.</p>

	 

	 <p><b>Note:</b> The edit manager is responsible for copying the 

	 text scrap to the clipboard. Undoing a cut operation does not restore

	 the original clipboard state.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='CutOperation' fullname='flashx.textLayout.operations:CutOperation/flashx.textLayout.operations:CutOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;scrapToCut' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.edit:TextScrap' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[ 

		 Creates a CutOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState The range of text to be cut.

		 ]]></param>
<param><![CDATA[scrapToCut A copy of the deleted text.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:CutOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:CutOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:CutOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='scrapToCut' fullname='flashx.textLayout.operations:CutOperation/scrapToCut/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:TextScrap'>
<description><![CDATA[ 

		 scrapToCut the original removed text

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='scrapToCut' fullname='flashx.textLayout.operations:CutOperation/scrapToCut/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.edit:TextScrap' param_defaults='undefined' result_type='void'>
</method>
<field name='_deleteTextOperation' fullname='flashx.textLayout.operations:CutOperation/private:_deleteTextOperation' type='flashx.textLayout.operations:DeleteTextOperation' isStatic='false' isConst='false' >
</field>
<field name='_tScrap' fullname='flashx.textLayout.operations:CutOperation/private:_tScrap' type='flashx.textLayout.edit:TextScrap' isStatic='false' isConst='false' >
</field>
<classRec name='ApplyFormatOperation' fullname='flashx.textLayout.operations:ApplyFormatOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\ApplyFormatOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The ApplyFormatOperation class encapsulates a style change.

	 

	 <p>An ApplyFormatOperation applies the leaf format to the text in the 

	 specified range (no change is made if the specified range is a single point). 

	 It applies the paragraph format to any paragraphs at least partially within the range 

	 (or a single paragraph if the range is a single point). 

	 And it applies the container format to any containers at least partially within the range 

	 (or a single container if the range is a single point).</p>

	 
	 ]]></description>
<includeExample><![CDATA[examples\ApplyFormatOperation_example.as -noswf

	 

	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='ApplyFormatOperation' fullname='flashx.textLayout.operations:ApplyFormatOperation/ApplyFormatOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;leafFormat;paragraphFormat;containerFormat' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined;undefined;undefined;null' result_type='*'>
<description><![CDATA[ 

		 Creates an ApplyFormatOperation object.

		 
		  ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState	Defines the text range to which the format is applied.

		  ]]></param>
<param><![CDATA[leafFormat	 The format to apply to LeafFlowElement objects in the selected range.

		  ]]></param>
<param><![CDATA[paragraphFormat The format to apply to ParagraphElement objects in the selected range.

		  ]]></param>
<param><![CDATA[containerFormat The format to apply to containers in the selected range.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doInternal' fullname='flashx.textLayout.operations:ApplyFormatOperation/private:doInternal' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:ApplyFormatOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:ApplyFormatOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:ApplyFormatOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='containerFormat' fullname='flashx.textLayout.operations:ApplyFormatOperation/containerFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The format properties to apply to the containers in the range.

		 

		 <p>The formats of any containers at least partially within the range are updated. 

		 If the range of this operation is a point, then a single container is updated.

		 If <code>containerFormat</code> is <code>null</code>, then no container formats are changed.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='leafFormat' fullname='flashx.textLayout.operations:ApplyFormatOperation/leafFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The format properties to apply to the leaf elements in the range.

		 

		 <p>If the range of this operation is a point, or if <code>leafFormat</code> is <code>null</code>,

		 then no leaf element formats are changed.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='paragraphFormat' fullname='flashx.textLayout.operations:ApplyFormatOperation/paragraphFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The format properties to apply to the paragraphs in the range.

		 

		 <p>The formats of any paragraphs at least partially within the range are updated. 

		 If the range of this operation is a point, then a single paragraph is updated.

		 If <code>paragraphFormat</code> is <code>null</code>, then no paragraph formats are changed.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='containerFormat' fullname='flashx.textLayout.operations:ApplyFormatOperation/containerFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='leafFormat' fullname='flashx.textLayout.operations:ApplyFormatOperation/leafFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphFormat' fullname='flashx.textLayout.operations:ApplyFormatOperation/paragraphFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<field name='applyContainerFormat' fullname='flashx.textLayout.operations:ApplyFormatOperation/private:applyContainerFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='applyLeafFormat' fullname='flashx.textLayout.operations:ApplyFormatOperation/private:applyLeafFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='applyParagraphFormat' fullname='flashx.textLayout.operations:ApplyFormatOperation/private:applyParagraphFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='undoContainerArray' fullname='flashx.textLayout.operations:ApplyFormatOperation/private:undoContainerArray' type='Array' isStatic='false' isConst='false' >
</field>
<field name='undoLeafArray' fullname='flashx.textLayout.operations:ApplyFormatOperation/private:undoLeafArray' type='Array' isStatic='false' isConst='false' >
</field>
<field name='undoParagraphArray' fullname='flashx.textLayout.operations:ApplyFormatOperation/private:undoParagraphArray' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='ClearFormatOperation' fullname='flashx.textLayout.operations:ClearFormatOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\ClearFormatOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The ClearFormatOperation class encapsulates a way to undefine formats.

	 

	 <p>An UndefineFormatOperation undefines properties set in the leaf format to the text in the 

	 specified range (no change is made if the specified range is a single point). 

	 It undefines properties set in the paragraph format to any paragraphs at least partially within the range 

	 (or a single paragraph if the range is a single point). 

	 And it undefines properties set in the container format to any containers at least partially within the range 

	 (or a single container if the range is a single point).</p>

	 
	 ]]></description>
<includeExample><![CDATA[examples\ApplyFormatOperation_example.as -noswf

	 

	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='ClearFormatOperation' fullname='flashx.textLayout.operations:ClearFormatOperation/ClearFormatOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;leafFormat;paragraphFormat;containerFormat' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat;flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined;undefined;undefined;null' result_type='*'>
<description><![CDATA[ 

		 Creates an ClearFormatOperation object.

		 
		  ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState	Defines the text range to which the format is applied.

		  ]]></param>
<param><![CDATA[leafFormat	 The format whose set values indicate properties to undefine to LeafFlowElement objects in the selected range.

		  ]]></param>
<param><![CDATA[paragraphFormat The format whose set values indicate properties to undefine to ParagraphElement objects in the selected range.

		  ]]></param>
<param><![CDATA[containerFormat The format whose set values indicate properties to undefine to ContainerController objects in the selected range.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doInternal' fullname='flashx.textLayout.operations:ClearFormatOperation/private:doInternal' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:ClearFormatOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:ClearFormatOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
</method>
<method name='undo' fullname='flashx.textLayout.operations:ClearFormatOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='containerFormat' fullname='flashx.textLayout.operations:ClearFormatOperation/containerFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The format properties to undefine on the containers in the range.

		 

		 <p>The formats of any containers at least partially within the range are updated. 

		 If the range of this operation is a point, then a single container is updated.

		 If <code>containerFormat</code> is <code>null</code>, then no container formats are changed.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='leafFormat' fullname='flashx.textLayout.operations:ClearFormatOperation/leafFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The format properties to undefine on the leaf elements in the range.

		 

		 <p>If the range of this operation is a point, or if <code>leafFormat</code> is <code>null</code>,

		 then no leaf element formats are changed.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='paragraphFormat' fullname='flashx.textLayout.operations:ClearFormatOperation/paragraphFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The format properties to undefine on the paragraphs in the range.

		 

		 <p>The formats of any paragraphs at least partially within the range are updated. 

		 If the range of this operation is a point, then a single paragraph is updated.

		 If <code>paragraphFormat</code> is <code>null</code>, then no paragraph formats are changed.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='containerFormat' fullname='flashx.textLayout.operations:ClearFormatOperation/containerFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='leafFormat' fullname='flashx.textLayout.operations:ClearFormatOperation/leafFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='paragraphFormat' fullname='flashx.textLayout.operations:ClearFormatOperation/paragraphFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<field name='applyContainerFormat' fullname='flashx.textLayout.operations:ClearFormatOperation/private:applyContainerFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='applyLeafFormat' fullname='flashx.textLayout.operations:ClearFormatOperation/private:applyLeafFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='applyParagraphFormat' fullname='flashx.textLayout.operations:ClearFormatOperation/private:applyParagraphFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='undoContainerArray' fullname='flashx.textLayout.operations:ClearFormatOperation/private:undoContainerArray' type='Array' isStatic='false' isConst='false' >
</field>
<field name='undoLeafArray' fullname='flashx.textLayout.operations:ClearFormatOperation/private:undoLeafArray' type='Array' isStatic='false' isConst='false' >
</field>
<field name='undoParagraphArray' fullname='flashx.textLayout.operations:ClearFormatOperation/private:undoParagraphArray' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='InsertTextOperation' fullname='flashx.textLayout.operations:InsertTextOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\InsertTextOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The InsertTextOperation class encapsulates a text insertion operation.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='InsertTextOperation' fullname='flashx.textLayout.operations:InsertTextOperation/InsertTextOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;text;deleteSelectionState' param_types='flashx.textLayout.edit:SelectionState;String;flashx.textLayout.edit:SelectionState' param_defaults='undefined;undefined;null' result_type='*'>
<description><![CDATA[ 

		 Creates an InsertTextOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState Describes the insertion point or range of text.

		 ]]></param>
<param><![CDATA[text The string to insert.

		 ]]></param>
<param><![CDATA[deleteSelectionState Describes the range of text to delete before doing insertion, 

		 if different than the range described by <code>operationState</code>.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='applyPointFormat' fullname='flashx.textLayout.operations:InsertTextOperation/private:applyPointFormat' isStatic='false' isFinal='false' isOverride='false'  param_names='span;pointFormat' param_types='flashx.textLayout.elements:SpanElement;flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='doDelete' fullname='flashx.textLayout.operations:InsertTextOperation/private:doDelete' isStatic='false' isFinal='false' isOverride='false'  param_names='leaf' param_types='flashx.textLayout.elements:FlowLeafElement' param_defaults='undefined' result_type='flashx.textLayout.formats:ITextLayoutFormat'>
</method>
<method name='doInternal' fullname='flashx.textLayout.operations:InsertTextOperation/private:doInternal' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:InsertTextOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialize' fullname='flashx.textLayout.operations:InsertTextOperation/private:initialize' isStatic='false' isFinal='false' isOverride='false'  param_names='deleteSelectionState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='undefined' result_type='void'>
</method>
<method name='merge' fullname='flashx.textLayout.operations:InsertTextOperation/tlf_internal:merge' isStatic='false' isFinal='false' isOverride='true'  param_names='op2' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='flashx.textLayout.operations:FlowOperation'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:InsertTextOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[

		 Re-executes the operation after it has been undone.

		 

		 <p>This function is called by the edit manager, when necessary.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='undo' fullname='flashx.textLayout.operations:InsertTextOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='characterFormat' fullname='flashx.textLayout.operations:InsertTextOperation/characterFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The character format applied to the inserted text.

		  

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='deleteSelectionState' fullname='flashx.textLayout.operations:InsertTextOperation/deleteSelectionState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ 

		 The text deleted by this operation, if any.

		 

		 <p><code>null</code> if no text is deleted.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='text' fullname='flashx.textLayout.operations:InsertTextOperation/text/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 The text inserted by this operation. 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='characterFormat' fullname='flashx.textLayout.operations:InsertTextOperation/characterFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='deleteSelectionState' fullname='flashx.textLayout.operations:InsertTextOperation/deleteSelectionState/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.edit:SelectionState' param_defaults='undefined' result_type='void'>
</method>
<method name='text' fullname='flashx.textLayout.operations:InsertTextOperation/text/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_deleteSelectionState' fullname='flashx.textLayout.operations:InsertTextOperation/private:_deleteSelectionState' type='flashx.textLayout.edit:SelectionState' isStatic='false' isConst='false' >
</field>
<field name='_pointFormat' fullname='flashx.textLayout.operations:InsertTextOperation/private:_pointFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_text' fullname='flashx.textLayout.operations:InsertTextOperation/_text' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='delSelOp' fullname='flashx.textLayout.operations:InsertTextOperation/private:delSelOp' type='flashx.textLayout.operations:DeleteTextOperation' isStatic='false' isConst='false' defaultValue='null' >
</field>
<classRec name='InsertInlineGraphicOperation' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\InsertInlineGraphicOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The InsertInlineGraphicOperation class encapsulates the insertion of an inline

	 graphic into a text flow.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.InlineGraphicElement

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='InsertInlineGraphicOperation' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/InsertInlineGraphicOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;source;width;height;options' param_types='flashx.textLayout.edit:SelectionState;Object;Object;Object;Object' param_defaults='undefined;undefined;undefined;undefined;null' result_type='*'>
<description><![CDATA[ 

		 Creates an InsertInlineGraphicsOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState Describes the insertion point. 

		 If a range is selected, the operation deletes the contents of that range.

		 ]]></param>
<param><![CDATA[source	The graphic source (uri string, URLRequest, DisplayObject, or Class of an embedded asset). 

		 ]]></param>
<param><![CDATA[width	The width to assign (number of pixels, percent, or the string 'auto')

		 ]]></param>
<param><![CDATA[height	The height to assign (number of pixels, percent, or the string 'auto')

		 ]]></param>
<param><![CDATA[options	The float to assign (String value, none for inline with text, left/right/start/end for float)

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[

		 Re-executes the operation after it has been undone.

		 

		 <p>This function is called by the edit manager, when necessary.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='undo' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='height' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flashx.textLayout.elements.InlineGraphicElement#height

		 

		 ]]></copy>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.InlineGraphicElement#height

		 

		 ]]></see>
</method>
<method name='newInlineGraphicElement' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/newInlineGraphicElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:InlineGraphicElement'>
<description><![CDATA[ 

		 The InlineGraphicElement that was created by doOperation.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='options' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/options/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flashx.textLayout.elements.InlineGraphicElement#float

		 

		 ]]></copy>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='source' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/source/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[	

		 ]]></description>
<copy><![CDATA[flashx.textLayout.elements.InlineGraphicElement#source

		 

		 ]]></copy>
<langversion><![CDATA[3.0 

 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='width' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flashx.textLayout.elements.InlineGraphicElement#width

		 

		 ]]></copy>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='height' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='options' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/options/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='source' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/source/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='_inlineGraphicElement' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/private:_inlineGraphicElement' type='flashx.textLayout.elements:InlineGraphicElement' isStatic='false' isConst='false' >
</field>
<field name='_options' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/private:_options' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_source' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/private:_source' type='Object' isStatic='false' isConst='false' >
</field>
<field name='delSelOp' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/private:delSelOp' type='flashx.textLayout.operations:DeleteTextOperation' isStatic='false' isConst='false' >
</field>
<field name='imageHeight' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/private:imageHeight' type='Object' isStatic='false' isConst='false' >
</field>
<field name='imageWidth' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/private:imageWidth' type='Object' isStatic='false' isConst='false' >
</field>
<field name='selPos' fullname='flashx.textLayout.operations:InsertInlineGraphicOperation/private:selPos' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<classRec name='PasteOperation' fullname='flashx.textLayout.operations:PasteOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\PasteOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The PasteOperation class encapsulates a paste operation.

	 
	 <p>The specified range is replaced by the new content.</p>

	 

	 <p><b>Note:</b> The edit manager is responsible for copying the 

	 contents of the clipboard.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='PasteOperation' fullname='flashx.textLayout.operations:PasteOperation/PasteOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;textScrap' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.edit:TextScrap' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[ 

		 Creates a PasteOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState Describes the insertion point or a range of text 

		 to replace.

		 ]]></param>
<param><![CDATA[textScrap The content to paste into the text flow.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='applyPreserveSettings' fullname='flashx.textLayout.operations:PasteOperation/private:applyPreserveSettings' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:PasteOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:PasteOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:PasteOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='textScrap' fullname='flashx.textLayout.operations:PasteOperation/textScrap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:TextScrap'>
<description><![CDATA[ 

		 textScrap the text being pasted

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='textScrap' fullname='flashx.textLayout.operations:PasteOperation/textScrap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.edit:TextScrap' param_defaults='undefined' result_type='void'>
</method>
<field name='_applyParagraphSettings' fullname='flashx.textLayout.operations:PasteOperation/private:_applyParagraphSettings' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_applyPointFormat' fullname='flashx.textLayout.operations:PasteOperation/private:_applyPointFormat' type='flashx.textLayout.operations:ApplyFormatOperation' isStatic='false' isConst='false' >
</field>
<field name='_deleteTextOperation' fullname='flashx.textLayout.operations:PasteOperation/private:_deleteTextOperation' type='flashx.textLayout.operations:DeleteTextOperation' isStatic='false' isConst='false' >
</field>
<field name='_numCharsAdded' fullname='flashx.textLayout.operations:PasteOperation/private:_numCharsAdded' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_pointFormat' fullname='flashx.textLayout.operations:PasteOperation/private:_pointFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_textScrap' fullname='flashx.textLayout.operations:PasteOperation/private:_textScrap' type='flashx.textLayout.edit:TextScrap' isStatic='false' isConst='false' >
</field>
<classRec name='CopyOperation' fullname='flashx.textLayout.operations:CopyOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\CopyOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CopyOperation class encapsulates a copy operation.

	 

	 <p><b>Note:</b> The operation is responsible for copying the 

	 text scrap to the clipboard. Undonig a copy operation does not restore

	 the original clipboard state.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='CopyOperation' fullname='flashx.textLayout.operations:CopyOperation/CopyOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='undefined' result_type='*'>
<description><![CDATA[ 

		 Creates a CopyOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState The range of text to be copied.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='canUndo' fullname='flashx.textLayout.operations:CopyOperation/canUndo' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:CopyOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:CopyOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:CopyOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='ApplyLinkOperation' fullname='flashx.textLayout.operations:ApplyLinkOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\ApplyLinkOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The ApplyLinkOperation class encapsulates a link creation or modification operation.

	 
	 ]]></description>
<includeExample><![CDATA[examples\ApplyLinkOperation_example.as -noswf

	 

	 ]]></includeExample>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.LinkElement

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='ApplyLinkOperation' fullname='flashx.textLayout.operations:ApplyLinkOperation/flashx.textLayout.operations:ApplyLinkOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;href;target;extendToLinkBoundary' param_types='flashx.textLayout.edit:SelectionState;String;String;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='*'>
<description><![CDATA[ 

		 Creates an ApplyLinkOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState	The text range to which the operation is applied.

		 ]]></param>
<param><![CDATA[href The URI to be associated with the link.  If href is an empty string, 

		 the URI of links in the selection are removed.

		 ]]></param>
<param><![CDATA[target The target of the link.

		 ]]></param>
<param><![CDATA[extendToLinkBoundary Whether to extend the selection to include the entire 

		 text of any existing links overlapped by the selection, and then apply the change.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:ApplyLinkOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:ApplyLinkOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:ApplyLinkOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='extendToLinkBoundary' fullname='flashx.textLayout.operations:ApplyLinkOperation/extendToLinkBoundary/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Whether to extend the selection to include the entire 

		 text of any existing links overlapped by the selection, and then apply the change.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='href' fullname='flashx.textLayout.operations:ApplyLinkOperation/href/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 The URI to be associated with the link.  If href is an empty string, 

		 the URI of links in the selection are removed.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='newLinkElement' fullname='flashx.textLayout.operations:ApplyLinkOperation/newLinkElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:LinkElement'>
<description><![CDATA[ 

		 The LinkElement that was created by doOperation.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 2.0

		 ]]></playerversion>
</method>
<method name='target' fullname='flashx.textLayout.operations:ApplyLinkOperation/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[

		 The target of the link.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='extendToLinkBoundary' fullname='flashx.textLayout.operations:ApplyLinkOperation/extendToLinkBoundary/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='href' fullname='flashx.textLayout.operations:ApplyLinkOperation/href/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='target' fullname='flashx.textLayout.operations:ApplyLinkOperation/target/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_extendToLinkBoundary' fullname='flashx.textLayout.operations:ApplyLinkOperation/private:_extendToLinkBoundary' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_hrefString' fullname='flashx.textLayout.operations:ApplyLinkOperation/private:_hrefString' type='String' isStatic='false' isConst='false' >
</field>
<field name='_linkElement' fullname='flashx.textLayout.operations:ApplyLinkOperation/private:_linkElement' type='flashx.textLayout.elements:LinkElement' isStatic='false' isConst='false' >
</field>
<field name='_memento' fullname='flashx.textLayout.operations:ApplyLinkOperation/private:_memento' type='flashx.textLayout.edit:IMemento' isStatic='false' isConst='false' >
</field>
<field name='_target' fullname='flashx.textLayout.operations:ApplyLinkOperation/private:_target' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='DeleteTextOperation' fullname='flashx.textLayout.operations:DeleteTextOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\DeleteTextOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The DeleteTextOperation class encapsulates the deletion of a range of text.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='DeleteTextOperation' fullname='flashx.textLayout.operations:DeleteTextOperation/DeleteTextOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;deleteSelectionState;allowMerge' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.edit:SelectionState;Boolean' param_defaults='undefined;null;false' result_type='*'>
<description><![CDATA[ 

		 Creates a DeleteTextOperation operation.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState The original range of text.

		 ]]></param>
<param><![CDATA[deleteSelectionState The range of text to delete, if different from the range 

		 described by <code>operationState</code>. (Set to <code>null</code> to delete the range

		 described by <code>operationState</code>.)

		 ]]></param>
<param><![CDATA[allowMerge Set to <code>true</code> if this operation can be merged with the next or previous operation.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:DeleteTextOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='merge' fullname='flashx.textLayout.operations:DeleteTextOperation/tlf_internal:merge' isStatic='false' isFinal='false' isOverride='true'  param_names='op2' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='flashx.textLayout.operations:FlowOperation'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:DeleteTextOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:DeleteTextOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='allowMerge' fullname='flashx.textLayout.operations:DeleteTextOperation/allowMerge/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 Indicates whether this operation can be merged with operations executed before or after it.

		 

		 <p>Some delete operations, for example, a sequence of backspace keystrokes, can be fruitfully 

		 merged into one operation so that undoing the operation reverses the entire sequence.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='deleteSelectionState' fullname='flashx.textLayout.operations:DeleteTextOperation/deleteSelectionState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ 

		 deleteSelectionState The range of text to delete

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='allowMerge' fullname='flashx.textLayout.operations:DeleteTextOperation/allowMerge/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='deleteSelectionState' fullname='flashx.textLayout.operations:DeleteTextOperation/deleteSelectionState/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.edit:SelectionState' param_defaults='undefined' result_type='void'>
</method>
<field name='_allowMerge' fullname='flashx.textLayout.operations:DeleteTextOperation/private:_allowMerge' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_deleteSelectionState' fullname='flashx.textLayout.operations:DeleteTextOperation/private:_deleteSelectionState' type='flashx.textLayout.edit:SelectionState' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_memento' fullname='flashx.textLayout.operations:DeleteTextOperation/private:_memento' type='flashx.textLayout.edit:IMemento' isStatic='false' isConst='false' >
</field>
<field name='_pendingFormat' fullname='flashx.textLayout.operations:DeleteTextOperation/private:_pendingFormat' type='flashx.textLayout.edit:PointFormat' isStatic='false' isConst='false' >
</field>
<classRec name='CreateListOperation' fullname='flashx.textLayout.operations:CreateListOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\CreateListOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CreateListOperation class encapsulates creating list

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='CreateListOperation' fullname='flashx.textLayout.operations:CreateListOperation/CreateListOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;parent;listFormat' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined;null;null' result_type='*'>
<description><![CDATA[ 

		 Creates an CreateListOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:CreateListOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:CreateListOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:CreateListOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='listFormat' fullname='flashx.textLayout.operations:CreateListOperation/listFormat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ TextLayoutFormat to be applied to the new ListElement. 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='newListElement' fullname='flashx.textLayout.operations:CreateListOperation/newListElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:ListElement'>
<description><![CDATA[ The new ListElement. 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='parent' fullname='flashx.textLayout.operations:CreateListOperation/parent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[ 

		 Specifies the element this operation adds a new ListElement to.

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='listFormat' fullname='flashx.textLayout.operations:CreateListOperation/listFormat/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='parent' fullname='flashx.textLayout.operations:CreateListOperation/parent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:FlowGroupElement' param_defaults='undefined' result_type='void'>
</method>
<field name='_listElement' fullname='flashx.textLayout.operations:CreateListOperation/private:_listElement' type='flashx.textLayout.elements:ListElement' isStatic='false' isConst='false' >
</field>
<field name='_listFormat' fullname='flashx.textLayout.operations:CreateListOperation/private:_listFormat' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_listParentMarker' fullname='flashx.textLayout.operations:CreateListOperation/private:_listParentMarker' type='flashx.textLayout.edit:ElementMark' isStatic='false' isConst='false' >
</field>
<field name='_mementoList' fullname='flashx.textLayout.operations:CreateListOperation/private:_mementoList' type='flashx.textLayout.edit:MementoList' isStatic='false' isConst='false' >
</field>
<field name='_postOpSelectionState' fullname='flashx.textLayout.operations:CreateListOperation/private:_postOpSelectionState' type='flashx.textLayout.edit:SelectionState' isStatic='false' isConst='false' >
</field>
<classRec name='CreateDivOperation' fullname='flashx.textLayout.operations:CreateDivOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\CreateDivOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CreateDivOperation class encapsulates creating DivElement

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
</classRec>
<method name='CreateDivOperation' fullname='flashx.textLayout.operations:CreateDivOperation/CreateDivOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;parent;format' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowGroupElement;flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined;null;null' result_type='*'>
<description><![CDATA[ 

		 Creates an CreateDivOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:CreateDivOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:CreateDivOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:CreateDivOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='format' fullname='flashx.textLayout.operations:CreateDivOperation/format/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ TextLayoutFormat to be applied to the new DivElement. 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='newDivElement' fullname='flashx.textLayout.operations:CreateDivOperation/newDivElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:DivElement'>
<description><![CDATA[ The new DivElement. 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='parent' fullname='flashx.textLayout.operations:CreateDivOperation/parent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[ 

		 Specifies the parent element for the new DivElement

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='format' fullname='flashx.textLayout.operations:CreateDivOperation/format/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<method name='parent' fullname='flashx.textLayout.operations:CreateDivOperation/parent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:FlowGroupElement' param_defaults='undefined' result_type='void'>
</method>
<field name='_divElement' fullname='flashx.textLayout.operations:CreateDivOperation/private:_divElement' type='flashx.textLayout.elements:DivElement' isStatic='false' isConst='false' >
</field>
<field name='_divParentMarker' fullname='flashx.textLayout.operations:CreateDivOperation/private:_divParentMarker' type='flashx.textLayout.edit:ElementMark' isStatic='false' isConst='false' >
</field>
<field name='_format' fullname='flashx.textLayout.operations:CreateDivOperation/private:_format' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_mementoList' fullname='flashx.textLayout.operations:CreateDivOperation/private:_mementoList' type='flashx.textLayout.edit:MementoList' isStatic='false' isConst='false' >
</field>
<field name='_postOpSelectionState' fullname='flashx.textLayout.operations:CreateDivOperation/private:_postOpSelectionState' type='flashx.textLayout.edit:SelectionState' isStatic='false' isConst='false' >
</field>
<classRec name='FlowElementOperation' fullname='flashx.textLayout.operations:FlowElementOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\FlowElementOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The FlowElementOperation class is the base class for operations that transform a FlowElement.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='FlowElementOperation' fullname='flashx.textLayout.operations:FlowElementOperation/FlowElementOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;targetElement;relativeStart;relativeEnd' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowElement;int;int' param_defaults='undefined;undefined;0;-1' result_type='*'>
<description><![CDATA[ 

		 Creates a FlowElementOperation object.

		  

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<param><![CDATA[operationState Specifies the TextFlow object this operation acts upon.

		 ]]></param>
<param><![CDATA[targetElement Specifies the element this operation modifies.

		 ]]></param>
<param><![CDATA[relativeStart An offset from the beginning of the <code>targetElement</code>.

		 ]]></param>
<param><![CDATA[relativeEnd An offset from the end of the <code>targetElement</code>.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='adjustForDoOperation' fullname='flashx.textLayout.operations:FlowElementOperation/protected:adjustForDoOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='targetElement' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='adjustForUndoOperation' fullname='flashx.textLayout.operations:FlowElementOperation/protected:adjustForUndoOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='targetElement' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getTargetElement' fullname='flashx.textLayout.operations:FlowElementOperation/protected:getTargetElement' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialize' fullname='flashx.textLayout.operations:FlowElementOperation/private:initialize' isStatic='false' isFinal='false' isOverride='false'  param_names='targetElement;relativeStart;relativeEnd' param_types='flashx.textLayout.elements:FlowElement;int;int' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='relativeEnd' fullname='flashx.textLayout.operations:FlowElementOperation/relativeEnd/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 An offset from the start of the <code>targetElement</code>.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='relativeStart' fullname='flashx.textLayout.operations:FlowElementOperation/relativeStart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 An offset from the beginning of the <code>targetElement</code>.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='targetElement' fullname='flashx.textLayout.operations:FlowElementOperation/targetElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowElement'>
<description><![CDATA[ 

		 Specifies the element this operation modifies.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='relativeEnd' fullname='flashx.textLayout.operations:FlowElementOperation/relativeEnd/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='relativeStart' fullname='flashx.textLayout.operations:FlowElementOperation/relativeStart/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='targetElement' fullname='flashx.textLayout.operations:FlowElementOperation/targetElement/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.elements:FlowElement' param_defaults='undefined' result_type='void'>
</method>
<field name='_relEnd' fullname='flashx.textLayout.operations:FlowElementOperation/private:_relEnd' type='int' isStatic='false' isConst='false' defaultValue='-1' >
</field>
<field name='_relStart' fullname='flashx.textLayout.operations:FlowElementOperation/private:_relStart' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='absEnd' fullname='flashx.textLayout.operations:FlowElementOperation/private:absEnd' type='int' isStatic='false' isConst='false' >
</field>
<field name='absStart' fullname='flashx.textLayout.operations:FlowElementOperation/private:absStart' type='int' isStatic='false' isConst='false' >
</field>
<field name='firstTime' fullname='flashx.textLayout.operations:FlowElementOperation/private:firstTime' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='nestLevel' fullname='flashx.textLayout.operations:FlowElementOperation/private:nestLevel' type='int' isStatic='false' isConst='false' >
</field>
<field name='origAbsEnd' fullname='flashx.textLayout.operations:FlowElementOperation/private:origAbsEnd' type='int' isStatic='false' isConst='false' >
</field>
<field name='origAbsStart' fullname='flashx.textLayout.operations:FlowElementOperation/private:origAbsStart' type='int' isStatic='false' isConst='false' >
</field>
<field name='splitAtEnd' fullname='flashx.textLayout.operations:FlowElementOperation/private:splitAtEnd' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='splitAtStart' fullname='flashx.textLayout.operations:FlowElementOperation/private:splitAtStart' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<classRec name='MoveChildrenOperation' fullname='flashx.textLayout.operations:MoveChildrenOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\MoveChildrenOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The MoveChildrenOperation class allows moving a set of siblings out of its immediate parent chain, and the operation removes any empty ancestor chain left behind.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.FlowElement

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='MoveChildrenOperation' fullname='flashx.textLayout.operations:MoveChildrenOperation/MoveChildrenOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;source;sourceIndex;numChildren;destination;destinationIndex' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowGroupElement;int;int;flashx.textLayout.elements:FlowGroupElement;int' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='*'>
<description><![CDATA[ 

		 Creates a MoveChildrenOperation object. 

		 

		 <p>This operation moves a consecutive number of children of source into the destination

		 context.  Also, if moving the children leaves the source element with no children, then

		 source will be removed.  The removal is done recursively such that if source's parent

		 becomes empty from the removal of source, it too will be deleted, and on up the parent chain.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<param><![CDATA[operationState Specifies the SelectionState of this operation

		 ]]></param>
<param><![CDATA[source Specifies the parent of the item(s) to move.

		 ]]></param>
<param><![CDATA[sourceIndex Specifies the index of the first item to move.

		 ]]></param>
<param><![CDATA[numChildren Specifies the number of children to move.

		 ]]></param>
<param><![CDATA[destination Specifies the new parent of the items.

		 ]]></param>
<param><![CDATA[destinationIndex Specifies the new child index of the first element.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:MoveChildrenOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='redo' fullname='flashx.textLayout.operations:MoveChildrenOperation/redo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:MoveChildrenOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='destinationIndex' fullname='flashx.textLayout.operations:MoveChildrenOperation/destinationIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Specifies the new child index of the first element.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='destination' fullname='flashx.textLayout.operations:MoveChildrenOperation/destination/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[ Specifies the new parent of the items.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='numChildren' fullname='flashx.textLayout.operations:MoveChildrenOperation/numChildren/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Specifies the index of the first item to move.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='sourceIndex' fullname='flashx.textLayout.operations:MoveChildrenOperation/sourceIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Specifies the number of children to move.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

		 ]]></playerversion>
</method>
<method name='source' fullname='flashx.textLayout.operations:MoveChildrenOperation/source/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.elements:FlowGroupElement'>
<description><![CDATA[ Specifies the parent of the item(s) to move.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='destinationIndex' fullname='flashx.textLayout.operations:MoveChildrenOperation/destinationIndex/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='destination' fullname='flashx.textLayout.operations:MoveChildrenOperation/destination/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.elements:FlowGroupElement' param_defaults='undefined' result_type='void'>
</method>
<method name='numChildren' fullname='flashx.textLayout.operations:MoveChildrenOperation/numChildren/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='sourceIndex' fullname='flashx.textLayout.operations:MoveChildrenOperation/sourceIndex/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='source' fullname='flashx.textLayout.operations:MoveChildrenOperation/source/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='flashx.textLayout.elements:FlowGroupElement' param_defaults='undefined' result_type='void'>
</method>
<field name='_destinationIndex' fullname='flashx.textLayout.operations:MoveChildrenOperation/private:_destinationIndex' type='int' isStatic='false' isConst='false' >
</field>
<field name='_destination' fullname='flashx.textLayout.operations:MoveChildrenOperation/private:_destination' type='flashx.textLayout.elements:FlowGroupElement' isStatic='false' isConst='false' >
</field>
<field name='_mementoList' fullname='flashx.textLayout.operations:MoveChildrenOperation/private:_mementoList' type='flashx.textLayout.edit:MementoList' isStatic='false' isConst='false' >
</field>
<field name='_numChildren' fullname='flashx.textLayout.operations:MoveChildrenOperation/private:_numChildren' type='int' isStatic='false' isConst='false' >
</field>
<field name='_sourceIndex' fullname='flashx.textLayout.operations:MoveChildrenOperation/private:_sourceIndex' type='int' isStatic='false' isConst='false' >
</field>
<field name='_source' fullname='flashx.textLayout.operations:MoveChildrenOperation/private:_source' type='flashx.textLayout.elements:FlowGroupElement' isStatic='false' isConst='false' >
</field>
<classRec name='ModifyInlineGraphicOperation' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\ModifyInlineGraphicOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowTextOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The InsertInlineGraphicOperation class encapsulates the modification of an existing inline graphic.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.InlineGraphicElement

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='ModifyInlineGraphicOperation' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/flashx.textLayout.operations:ModifyInlineGraphicOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;source;width;height;options' param_types='flashx.textLayout.edit:SelectionState;Object;Object;Object;Object' param_defaults='undefined;undefined;undefined;undefined;null' result_type='*'>
<description><![CDATA[ 

		 Creates a ModifyInlineGraphicsOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState Describes the insertion point. 

		 If a range is selected, the operation deletes the contents of that range.

		 ]]></param>
<param><![CDATA[source	The graphic source (uri string, URLRequest, DisplayObject, or Class of an embedded asset). 

		 ]]></param>
<param><![CDATA[width	The width to assign (number of pixels, percent, or the string 'auto')

		 ]]></param>
<param><![CDATA[height	The height to assign (number of pixels, percent, or the string 'auto')

		 ]]></param>
<param><![CDATA[options	None supported

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='height' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flashx.textLayout.elements.InlineGraphicElement#height

		 

		 ]]></copy>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='options' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/options/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ 

		 options are not supported

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='source' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/source/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[	

		 ]]></description>
<copy><![CDATA[flashx.textLayout.elements.InlineGraphicElement#source

		 

		 ]]></copy>
<langversion><![CDATA[3.0 

 		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='width' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[ 

		 ]]></description>
<copy><![CDATA[flashx.textLayout.elements.InlineGraphicElement#width

		 

		 ]]></copy>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='height' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='options' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/options/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='source' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/source/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<field name='_options' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/private:_options' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_source' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/private:_source' type='Object' isStatic='false' isConst='false' >
</field>
<field name='imageHeight' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/private:imageHeight' type='Object' isStatic='false' isConst='false' >
</field>
<field name='imageWidth' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/private:imageWidth' type='Object' isStatic='false' isConst='false' >
</field>
<field name='oldImage' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/private:oldImage' type='flashx.textLayout.elements:FlowElement' isStatic='false' isConst='false' >
</field>
<field name='selPos' fullname='flashx.textLayout.operations:ModifyInlineGraphicOperation/private:selPos' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<classRec name='SplitParagraphOperation' fullname='flashx.textLayout.operations:SplitParagraphOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\SplitParagraphOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:SplitElementOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The SplitParagraphOperation class encapsulates a change that splits a paragraph into two elements.

	 
	 <p>The operation creates a new paragraph containing the text from 

	 the specified position to the end of the paragraph. If a range of text is specified, the text 

	 in the range is deleted first.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.ParagraphElement

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='SplitParagraphOperation' fullname='flashx.textLayout.operations:SplitParagraphOperation/SplitParagraphOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState' param_types='flashx.textLayout.edit:SelectionState' param_defaults='undefined' result_type='*'>
<description><![CDATA[ 

		 Creates a SplitParagraphOperation object.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<param><![CDATA[operationState Describes the point at which to split the paragraph.

		 If a range of text is specified, the contents of the range are deleted.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='merge' fullname='flashx.textLayout.operations:SplitParagraphOperation/tlf_internal:merge' isStatic='false' isFinal='false' isOverride='true'  param_names='operation' param_types='flashx.textLayout.operations:FlowOperation' param_defaults='undefined' result_type='flashx.textLayout.operations:FlowOperation'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<classRec name='ApplyFormatToElementOperation' fullname='flashx.textLayout.operations:ApplyFormatToElementOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\ApplyFormatToElementOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowElementOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The ApplyFormatToElementOperation class encapsulates a style change to an element.

	 
	 <p>This operation applies one or more formats to a flow element.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='ApplyFormatToElementOperation' fullname='flashx.textLayout.operations:ApplyFormatToElementOperation/ApplyFormatToElementOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;targetElement;format;relativeStart;relativeEnd' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowElement;flashx.textLayout.formats:ITextLayoutFormat;int;int' param_defaults='undefined;undefined;undefined;0;-1' result_type='*'>
<description><![CDATA[ 

		Creates an ApplyFormatToElementOperation object. 

		

		]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<param><![CDATA[operationState Specifies the text flow containing the element to which this operation is applied.

		]]></param>
<param><![CDATA[targetElement specifies the element to which this operation is applied.

		]]></param>
<param><![CDATA[format The formats to apply in this operation.

		 

		]]></param>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:ApplyFormatToElementOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:ApplyFormatToElementOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='format' fullname='flashx.textLayout.operations:ApplyFormatToElementOperation/format/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The character formats applied in this operation.

		 

		 <p>If <code>null</code> no character formats are changed.</p> 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='format' fullname='flashx.textLayout.operations:ApplyFormatToElementOperation/format/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<field name='_format' fullname='flashx.textLayout.operations:ApplyFormatToElementOperation/private:_format' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_undoStyles' fullname='flashx.textLayout.operations:ApplyFormatToElementOperation/private:_undoStyles' type='flashx.textLayout.formats:TextLayoutFormat' isStatic='false' isConst='false' >
</field>
<classRec name='ApplyElementStyleNameOperation' fullname='flashx.textLayout.operations:ApplyElementStyleNameOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\ApplyElementStyleNameOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowElementOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The ApplyElementStyleNameOperation class encapsulates a style name change.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.FlowElement#styleName

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
<metadata>
	<Deprecated owner='flashx.textLayout.operations:ApplyElementStyleNameOperation' replacement='ApplyFormatToElementOperation' since='2.0' >
	</Deprecated>
</metadata>
</classRec>
<method name='ApplyElementStyleNameOperation' fullname='flashx.textLayout.operations:ApplyElementStyleNameOperation/ApplyElementStyleNameOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;targetElement;newStyleName;relativeStart;relativeEnd' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowElement;String;int;int' param_defaults='undefined;undefined;undefined;0;-1' result_type='*'>
<description><![CDATA[ 

		 Creates a ApplyElementStyleNameOperation object. 

		 

		 <p>If the <code>relativeStart</code> and <code>relativeEnd</code> parameters are set, then the existing

		 element is split into multiple elements, the selected portion using the new 

		 style name and the rest using the existing style name.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<param><![CDATA[operationState Describes the current selection.

		 ]]></param>
<param><![CDATA[targetElement Specifies the element to change.

		 ]]></param>
<param><![CDATA[newStyleName The style name to assign.

		 ]]></param>
<param><![CDATA[relativeStart An offset from the beginning of the target element.

		 ]]></param>
<param><![CDATA[relativeEnd An offset from the end of the target element.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:ApplyElementStyleNameOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:ApplyElementStyleNameOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='newStyleName' fullname='flashx.textLayout.operations:ApplyElementStyleNameOperation/newStyleName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 The style name assigned by this operation.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='newStyleName' fullname='flashx.textLayout.operations:ApplyElementStyleNameOperation/newStyleName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_newStyleName' fullname='flashx.textLayout.operations:ApplyElementStyleNameOperation/private:_newStyleName' type='String' isStatic='false' isConst='false' >
</field>
<field name='_origStyleName' fullname='flashx.textLayout.operations:ApplyElementStyleNameOperation/private:_origStyleName' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='ApplyElementUserStyleOperation' fullname='flashx.textLayout.operations:ApplyElementUserStyleOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\ApplyElementUserStyleOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowElementOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The ApplyElementUserStyleOperation class encapsulates a change in a style value of an element.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.FlowElement#userStyles

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
<metadata>
	<Deprecated owner='flashx.textLayout.operations:ApplyElementUserStyleOperation' replacement='ApplyFormatToElementOperation' since='2.0' >
	</Deprecated>
</metadata>
</classRec>
<method name='ApplyElementUserStyleOperation' fullname='flashx.textLayout.operations:ApplyElementUserStyleOperation/ApplyElementUserStyleOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;targetElement;styleName;value;relativeStart;relativeEnd' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowElement;String;*;int;int' param_defaults='undefined;undefined;undefined;undefined;0;-1' result_type='*'>
<description><![CDATA[ 

		 Creates a ApplyElementUserStyleOperation object.

		 

		 <p>If the <code>relativeStart</code> and <code>relativeEnd</code> parameters are set, then the existing

		 element is split into multiple elements, the selected portion using the new 

		 style value and the rest using the existing style value.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<param><![CDATA[operationState Describes the range of text to style.

		 ]]></param>
<param><![CDATA[targetElement Specifies the element to change.

		 ]]></param>
<param><![CDATA[styleName The name of the style to change.

		 ]]></param>
<param><![CDATA[value The new style value.

		 ]]></param>
<param><![CDATA[relativeStart An offset from the beginning of the target element.

		 ]]></param>
<param><![CDATA[relativeEnd An offset from the end of the target element.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:ApplyElementUserStyleOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:ApplyElementUserStyleOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='newValue' fullname='flashx.textLayout.operations:ApplyElementUserStyleOperation/newValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ 

		 The new style value.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='styleName' fullname='flashx.textLayout.operations:ApplyElementUserStyleOperation/styleName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 The name of the style changed. 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='newValue' fullname='flashx.textLayout.operations:ApplyElementUserStyleOperation/newValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='styleName' fullname='flashx.textLayout.operations:ApplyElementUserStyleOperation/styleName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_newValue' fullname='flashx.textLayout.operations:ApplyElementUserStyleOperation/private:_newValue' type='' isStatic='false' isConst='false' >
</field>
<field name='_origValue' fullname='flashx.textLayout.operations:ApplyElementUserStyleOperation/private:_origValue' type='' isStatic='false' isConst='false' >
</field>
<field name='_styleName' fullname='flashx.textLayout.operations:ApplyElementUserStyleOperation/private:_styleName' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='ApplyElementIDOperation' fullname='flashx.textLayout.operations:ApplyElementIDOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\ApplyElementIDOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowElementOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The ChangeElementIDOperation class encapsulates an element ID change.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.FlowElement

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='ApplyElementIDOperation' fullname='flashx.textLayout.operations:ApplyElementIDOperation/ApplyElementIDOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;targetElement;newID;relativeStart;relativeEnd' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowElement;String;int;int' param_defaults='undefined;undefined;undefined;0;-1' result_type='*'>
<description><![CDATA[ 

		 Creates a ChangeElementIDOperation object. 

		 

		 <p>If the <code>relativeStart</code> or <code>relativeEnd</code> parameters are set, then the existing

		 element is split into two elements, one using the existing ID and the other

		 using the new ID. If both parameters are set, then the existing element is split into three elements.

		 The first and last elements of the set are both assigned the original ID.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<param><![CDATA[operationState Specifies the selection state before the operation

		 ]]></param>
<param><![CDATA[targetElement Specifies the element to change

		 ]]></param>
<param><![CDATA[newID The ID to assign

		 ]]></param>
<param><![CDATA[relativeStart An offset from the beginning of the target element.

		 ]]></param>
<param><![CDATA[relativeEnd An offset from the end of the target element.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:ApplyElementIDOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:ApplyElementIDOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='newID' fullname='flashx.textLayout.operations:ApplyElementIDOperation/newID/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 The ID assigned by this operation.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='newID' fullname='flashx.textLayout.operations:ApplyElementIDOperation/newID/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_newID' fullname='flashx.textLayout.operations:ApplyElementIDOperation/private:_newID' type='String' isStatic='false' isConst='false' >
</field>
<field name='_origID' fullname='flashx.textLayout.operations:ApplyElementIDOperation/private:_origID' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='ClearFormatOnElementOperation' fullname='flashx.textLayout.operations:ClearFormatOnElementOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\ClearFormatOnElementOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowElementOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The ClearFormatOnElementOperation class encapsulates a style change to an element.

	 
	 <p>This operation undefines one or more formats to a flow element.</p>

	 

	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.formats.TextLayoutFormat

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent



	 ]]></see>
<see><![CDATA[ApplyFormatToElementOperation

	 

	 ]]></see>
</classRec>
<method name='ClearFormatOnElementOperation' fullname='flashx.textLayout.operations:ClearFormatOnElementOperation/ClearFormatOnElementOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;targetElement;format;relativeStart;relativeEnd' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowElement;flashx.textLayout.formats:ITextLayoutFormat;int;int' param_defaults='undefined;undefined;undefined;0;-1' result_type='*'>
<description><![CDATA[ 

		Creates an ClearFormatOnElementOperation object. 

		

		]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<param><![CDATA[operationState Specifies the text flow containing the element to which this operation is applied.

		]]></param>
<param><![CDATA[targetElement specifies the element to which this operation is applied.

		]]></param>
<param><![CDATA[format The formats to apply in this operation.

		 

		]]></param>
<playerversion><![CDATA[Flash 10

		]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:ClearFormatOnElementOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:ClearFormatOnElementOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='format' fullname='flashx.textLayout.operations:ClearFormatOnElementOperation/format/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flashx.textLayout.formats:ITextLayoutFormat'>
<description><![CDATA[ 

		 The character formats applied in this operation.

		 

		 <p>If <code>null</code> no character formats are changed.</p> 

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='format' fullname='flashx.textLayout.operations:ClearFormatOnElementOperation/format/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flashx.textLayout.formats:ITextLayoutFormat' param_defaults='undefined' result_type='void'>
</method>
<field name='_format' fullname='flashx.textLayout.operations:ClearFormatOnElementOperation/private:_format' type='flashx.textLayout.formats:ITextLayoutFormat' isStatic='false' isConst='false' >
</field>
<field name='_undoStyles' fullname='flashx.textLayout.operations:ClearFormatOnElementOperation/private:_undoStyles' type='flashx.textLayout.formats:TextLayoutFormat' isStatic='false' isConst='false' >
</field>
<classRec name='ApplyElementTypeNameOperation' fullname='flashx.textLayout.operations:ApplyElementTypeNameOperation' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\operations\ApplyElementTypeNameOperation.as' namespace='flashx.textLayout.operations' access='public' baseclass='flashx.textLayout.operations:FlowElementOperation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The ApplyElementTypeNameOperation class encapsulates a type name change.

	 
	 ]]></description>
<langversion><![CDATA[3.0 

	 ]]></langversion>
<playerversion><![CDATA[Flash 10

	 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 ]]></playerversion>
<see><![CDATA[flashx.textLayout.elements.FlowElement#typeName

	 ]]></see>
<see><![CDATA[flashx.textLayout.edit.EditManager

	 ]]></see>
<see><![CDATA[flashx.textLayout.events.FlowOperationEvent

	 

	 ]]></see>
</classRec>
<method name='ApplyElementTypeNameOperation' fullname='flashx.textLayout.operations:ApplyElementTypeNameOperation/ApplyElementTypeNameOperation' isStatic='false' isFinal='false' isOverride='false'  param_names='operationState;targetElement;typeName;relativeStart;relativeEnd' param_types='flashx.textLayout.edit:SelectionState;flashx.textLayout.elements:FlowElement;String;int;int' param_defaults='undefined;undefined;undefined;0;-1' result_type='*'>
<description><![CDATA[ 

		 Creates a ApplyElementTypeNameOperation object. 

		 

		 <p>If the <code>relativeStart</code> and <code>relativeEnd</code> parameters are set, then the existing

		 element is split into multiple elements, the selected portion using the new 

		 type name and the rest using the existing type name.</p>

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		]]></langversion>
<param><![CDATA[operationState Describes the current selection.

		 ]]></param>
<param><![CDATA[targetElement Specifies the element to change.

		 ]]></param>
<param><![CDATA[newTypeName The type name to assign.

		 ]]></param>
<param><![CDATA[relativeStart An offset from the beginning of the target element.

		 ]]></param>
<param><![CDATA[relativeEnd An offset from the end of the target element.

		 

		 ]]></param>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='doOperation' fullname='flashx.textLayout.operations:ApplyElementTypeNameOperation/doOperation' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='undo' fullname='flashx.textLayout.operations:ApplyElementTypeNameOperation/undo' isStatic='false' isFinal='false' isOverride='true'  result_type='flashx.textLayout.edit:SelectionState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='typeName' fullname='flashx.textLayout.operations:ApplyElementTypeNameOperation/typeName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ 

		 The type name assigned by this operation.

		 

		 ]]></description>
<langversion><![CDATA[3.0 

		 ]]></langversion>
<playerversion><![CDATA[Flash 10

		 ]]></playerversion>
<playerversion><![CDATA[AIR 1.5

	 	 ]]></playerversion>
</method>
<method name='typeName' fullname='flashx.textLayout.operations:ApplyElementTypeNameOperation/typeName/set' isStatic='false' isFinal='false' isOverride='false'  param_names='val' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_typeName' fullname='flashx.textLayout.operations:ApplyElementTypeNameOperation/private:_typeName' type='String' isStatic='false' isConst='false' >
</field>
<field name='_undoTypeName' fullname='flashx.textLayout.operations:ApplyElementTypeNameOperation/private:_undoTypeName' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='TextAccImpl' fullname='flashx.textLayout.accessibility:TextAccImpl' sourcefile='C:\Vellum\dev\output\openSource\textLayout\src\flashx\textLayout\accessibility\TextAccImpl.as' namespace='flashx.textLayout.accessibility' access='public' baseclass='flash.accessibility:AccessibilityImplementation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='TextAccImpl' fullname='flashx.textLayout.accessibility:TextAccImpl/TextAccImpl' isStatic='false' isFinal='false' isOverride='false'  param_names='textCont;textFlow' param_types='flash.display:DisplayObject;flashx.textLayout.elements:TextFlow' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[

		  Constructor.

		 

		  ]]></description>
<param><![CDATA[textContainer The DisplayObject instance that this

		                       TextAccImpl instance is making accessible.

		  ]]></param>
<param><![CDATA[textFlow The TextFlow that is hosting the textContainer.

		 ]]></param>
</method>
<method name='detachListeners' fullname='flashx.textLayout.accessibility:TextAccImpl/detachListeners' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='eventHandler' fullname='flashx.textLayout.accessibility:TextAccImpl/protected:eventHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Handles COMPOSITION_COMPLETE and SELECTION_CHANGE events,

		 updates the MSAA model.

    	 ]]></description>
</method>
<method name='exportToString' fullname='flashx.textLayout.accessibility:TextAccImpl/private:exportToString' isStatic='true' isFinal='false' isOverride='false'  param_names='source' param_types='flashx.textLayout.elements:TextFlow' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		 TODO HACK, remove and refactor.

		 

		 This is copied from PlainTextExportFilter, which I would prefer to

		 access through TextConverter.export(textFlow,

		                                  TextConverter.PLAIN_TEXT_FORMAT);

		 

		 But, PTEF is in importExport, which builds against text_model,

		 which is a circular dependency.

		 

		 Also, it seems to be adding a trailing newline, which is bad for

		 accessibility unless it is really there.

		 

		 Might want to export and strip out hyphens.

		 Move it to the model?

		 ]]></description>
</method>
<method name='get_accName' fullname='flashx.textLayout.accessibility:TextAccImpl/get_accName' isStatic='false' isFinal='false' isOverride='true'  param_names='childID' param_types='uint' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		  Returns the name of the text.

		 
		  ]]></description>
<param><![CDATA[childID uint.

		  ]]></param>
<return><![CDATA[Name of the text.

		 ]]></return>
</method>
<method name='get_accRole' fullname='flashx.textLayout.accessibility:TextAccImpl/get_accRole' isStatic='false' isFinal='false' isOverride='true'  param_names='childID' param_types='uint' param_defaults='undefined' result_type='uint'>
<description><![CDATA[

		  Returns the system role for the text.

		 
		  ]]></description>
<param><![CDATA[childID uint.

		  ]]></param>
<return><![CDATA[Role associated with the text.

		 ]]></return>
</method>
<method name='get_accState' fullname='flashx.textLayout.accessibility:TextAccImpl/get_accState' isStatic='false' isFinal='false' isOverride='true'  param_names='childID' param_types='uint' param_defaults='undefined' result_type='uint'>
<description><![CDATA[

		  Returns the state of the text.

		 
		  ]]></description>
<param><![CDATA[childID uint.

		  ]]></param>
<return><![CDATA[Role associated with the text.

		 ]]></return>
</method>
<method name='get_accValue' fullname='flashx.textLayout.accessibility:TextAccImpl/get_accValue' isStatic='false' isFinal='false' isOverride='true'  param_names='childID' param_types='uint' param_defaults='undefined' result_type='String'>
<description><![CDATA[

		  Returns the value of the text.

		 
		  ]]></description>
<param><![CDATA[childID uint.

		  ]]></param>
<return><![CDATA[Name of the text.

		 ]]></return>
</method>
<method name='searchText' fullname='flashx.textLayout.accessibility:TextAccImpl/searchText/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ Enable search index for Ichabod

		 Returns the entire text of the TextFlow, or null if search index is not enabled

		 ]]></description>
<see><![CDATA[GlobalSettings.searchIndexEnabled

		 ]]></see>
</method>
<method name='selectionActiveIndex' fullname='flashx.textLayout.accessibility:TextAccImpl/selectionActiveIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The zero-based character index value of the first character in the current selection.

		 Components which wish to support inline IME or Accessibility should call into this method.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.0

		 ]]></playerversion>
<return><![CDATA[the index of the character at the anchor end of the selection, or <code>-1</code> if no text is selected.

		 

		 ]]></return>
</method>
<method name='selectionAnchorIndex' fullname='flashx.textLayout.accessibility:TextAccImpl/selectionAnchorIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ 

		 The zero-based character index value of the last character in the current selection.

		 Components which wish to support inline IME or Accessibility should call into this method.

		 
		 ]]></description>
<langversion><![CDATA[3.0

		 ]]></langversion>
<playerversion><![CDATA[Flash 10.0

		 ]]></playerversion>
<return><![CDATA[the index of the character at the active end of the selection, or <code>-1</code> if no text is selected.

		 

		 ]]></return>
</method>
<field name='EVENT_OBJECT_NAMECHANGE' fullname='flashx.textLayout.accessibility:TextAccImpl/protected:EVENT_OBJECT_NAMECHANGE' type='uint' isStatic='true' isConst='true' defaultValue='0x800c' >
</field>
<field name='EVENT_OBJECT_VALUECHANGE' fullname='flashx.textLayout.accessibility:TextAccImpl/protected:EVENT_OBJECT_VALUECHANGE' type='uint' isStatic='true' isConst='true' defaultValue='0x800e' >
</field>
<field name='ROLE_SYSTEM_STATICTEXT' fullname='flashx.textLayout.accessibility:TextAccImpl/protected:ROLE_SYSTEM_STATICTEXT' type='uint' isStatic='true' isConst='true' defaultValue='0x29' >
<description><![CDATA[ Default role -- read-only, unselectable text. ]]></description>
</field>
<field name='ROLE_SYSTEM_TEXT' fullname='flashx.textLayout.accessibility:TextAccImpl/protected:ROLE_SYSTEM_TEXT' type='uint' isStatic='true' isConst='true' defaultValue='0x2a' >
<description><![CDATA[ Editable OR read-only, selectable text. ]]></description>
</field>
<field name='STATE_SYSTEM_INVISIBLE' fullname='flashx.textLayout.accessibility:TextAccImpl/protected:STATE_SYSTEM_INVISIBLE' type='uint' isStatic='true' isConst='true' defaultValue='0x00008000' >
<description><![CDATA[ Inivisible text ]]></description>
</field>
<field name='STATE_SYSTEM_NORMAL' fullname='flashx.textLayout.accessibility:TextAccImpl/protected:STATE_SYSTEM_NORMAL' type='uint' isStatic='true' isConst='true' defaultValue='0x00000000' >
<description><![CDATA[ Default state ]]></description>
</field>
<field name='STATE_SYSTEM_READONLY' fullname='flashx.textLayout.accessibility:TextAccImpl/protected:STATE_SYSTEM_READONLY' type='uint' isStatic='true' isConst='true' defaultValue='0x00000040' >
<description><![CDATA[ Read-only text ]]></description>
</field>
<field name='textContainer' fullname='flashx.textLayout.accessibility:TextAccImpl/protected:textContainer' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
<description><![CDATA[

		  A reference to the DisplayObject that is hosting accessible text.

		 ]]></description>
</field>
<field name='textFlow' fullname='flashx.textLayout.accessibility:TextAccImpl/protected:textFlow' type='flashx.textLayout.elements:TextFlow' isStatic='false' isConst='false' >
<description><![CDATA[

		  A reference to the TextFlow where our text originates.

		 ]]></description>
</field>
</asdoc>
